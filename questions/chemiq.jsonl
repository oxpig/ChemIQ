{"uuid": "ee76b5bc-6a08-4f92-b4c7-337d955f8838", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=Nc1ccc(Br)cc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C6H4BrNO\n\n1H NMR: \u03b4 8.02 (ddd, J = 8.53, 2.05, 0.46 Hz, 2H), 7.5 (ddd, J = 8.53, 1.26, 0.46 Hz, 2H).\n\n13C NMR: \u03b4 163.95 (1C, s), 132.71 (2C, s), 122.19 (2C, s), 120 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.5, 8.02).\n\nHSQC (\u03b4H, \u03b4C): (7.5, 132.71), (8.02, 122.19).\n\nHMBC (\u03b4H, \u03b4C): (8.02, 163.95), (7.5, 163.95), (8.02, 132.71), (7.5, 132.71), (8.02, 122.19), (7.5, 122.19), (8.02, 120), (7.5, 120).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=Nc1ccc(Br)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "51c60148-7a28-4c82-8188-487ac95f172e", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1ccc(Br)cc1N", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C7H8BrN\n\n1H NMR: \u03b4 7.07 (dd, J = 7.78, 1.35 Hz, 1H), 6.93 (dd, J = 1.35, 0.54 Hz, 1H), 6.91 (dd, J = 7.78, 0.54 Hz, 1H), 2.09 (s, 3H).\n\n13C NMR: \u03b4 145.9 (1C, s), 131.6 (1C, s), 121 (1C, s), 121 (1C, s), 119.9 (1C, s), 117.2 (1C, s), 16.82 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.07, 6.91).\n\nHSQC (\u03b4H, \u03b4C): (6.91, 131.6), (7.07, 121), (6.93, 117.2), (2.09, 16.82).\n\nHMBC (\u03b4H, \u03b4C): (2.09, 145.9), (6.93, 145.9), (6.91, 145.9), (2.09, 131.6), (7.07, 131.6), (6.91, 121), (6.93, 121), (7.07, 121), (2.09, 119.9), (6.93, 119.9), (6.91, 119.9), (7.07, 119.9), (7.07, 117.2), (6.91, 16.82).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1ccc(Br)cc1N", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "58c7b82f-fd01-4a7d-b5b6-f412685a5dab", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Nc1nc(=O)[nH]cc1Br", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C4H4BrN3O\n\n1H NMR: \u03b4 8.29 (s, 1H).\n\n13C NMR: \u03b4 166.9 (1C, s), 151.7 (1C, s), 141.4 (1C, s), 120.1 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): .\n\nHSQC (\u03b4H, \u03b4C): (8.29, 141.4).\n\nHMBC (\u03b4H, \u03b4C): (8.29, 151.7).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1nc(=O)[nH]cc1Br", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "116b24a5-e4ba-4cbb-b770-311955d9cbcd", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C(Cl)C1CCSCC1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C6H9ClOS\n\n1H NMR: \u03b4 3.1 (ddd, J = 16.95, 2.83, 2.83 Hz, 2H), 2.87 (ddd, J = 16.95, 6.27, 6.27 Hz, 2H), 2.77 (dddd, J = 10.09, 10.09, 2.03, 2.03 Hz, 1H), 1.86 (dddd, J = 13.83, 6.27, 6.06, 2.83 Hz, 2H), 1.86 (dddd, J = 13.83, 6.27, 6.06, 2.83 Hz, 2H).\n\n13C NMR: \u03b4 175.8 (1C, s), 51.8 (1C, s), 28.45 (2C, s), 26.3 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (3.1, 2.87), (3.1, 1.86), (2.77, 1.86), (2.87, 1.86).\n\nHSQC (\u03b4H, \u03b4C): (2.77, 51.8), (1.86, 28.45), (3.1, 26.3), (2.87, 26.3).\n\nHMBC (\u03b4H, \u03b4C): (2.77, 175.8), (1.86, 175.8), (1.86, 51.8), (2.87, 51.8), (3.1, 51.8), (1.86, 28.45), (3.1, 28.45), (2.77, 28.45), (2.87, 28.45), (1.86, 26.3), (3.1, 26.3), (2.77, 26.3), (2.87, 26.3).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(Cl)C1CCSCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "87caec78-1877-427b-9cf6-70757aa26a12", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1scnc1Br", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C4H4BrNS\n\n1H NMR: \u03b4 8.25 (s, 1H), 2.28 (s, 3H).\n\n13C NMR: \u03b4 149.8 (1C, s), 132.1 (1C, s), 115.6 (1C, s), 12.6 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): .\n\nHSQC (\u03b4H, \u03b4C): (8.25, 149.8), (2.28, 12.6).\n\nHMBC (\u03b4H, \u03b4C): (8.25, 132.1), (2.28, 132.1), (8.25, 115.6), (2.28, 115.6).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1scnc1Br", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "bd7e7f18-c702-46de-a03d-d7517341c539", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CC1(c2ccc(Cl)nn2)CC1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C8H9ClN2\n\n1H NMR: \u03b4 7.83 (d, J = 7.61 Hz, 1H), 7.69 (d, J = 7.61 Hz, 1H), 1.28 (s, 3H), 0.72 (ddd, J = 8.06, 7.81, 7.51 Hz, 2H), 0.72 (ddd, J = 8.06, 7.81, 7.51 Hz, 2H).\n\n13C NMR: \u03b4 151.11 (1C, s), 137.77 (1C, s), 126.66 (1C, s), 124.4 (1C, s), 59.7 (1C, s), 18.7 (1C, s), 13.25 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.69, 7.83).\n\nHSQC (\u03b4H, \u03b4C): (7.83, 126.66), (7.69, 124.4), (1.28, 18.7), (0.72, 13.25).\n\nHMBC (\u03b4H, \u03b4C): (7.69, 151.11), (7.83, 151.11), (1.28, 137.77), (0.72, 137.77), (7.69, 137.77), (7.83, 137.77), (7.69, 126.66), (7.83, 124.4), (7.83, 59.7), (1.28, 59.7), (0.72, 59.7), (0.72, 18.7), (1.28, 13.25), (0.72, 13.25).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC1(c2ccc(Cl)nn2)CC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "35d2414e-977f-4e96-80e0-055a3f1a12fd", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "ClC(Cl)(Cl)C1(C2CC2)CO1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C6H7Cl3O\n\n1H NMR: \u03b4 3.12 (d, J = 4.43 Hz, 1H), 3.02 (d, J = 4.43 Hz, 1H), 0.99 (dddd, J = 8.06, 8.06, 7.51, 7.51 Hz, 1H), 0.56 (dddd, J = 8.06, 7.51, 7.51, 6.64 Hz, 1H), 0.56 (dddd, J = 8.06, 7.51, 7.51, 6.63 Hz, 1H), 0.56 (dddd, J = 8.06, 8.06, 7.51, 6.64 Hz, 1H), 0.56 (dddd, J = 8.06, 8.06, 7.51, 6.63 Hz, 1H).\n\n13C NMR: \u03b4 160.8 (1C, s), 59.7 (1C, s), 50.9 (1C, s), 18.55 (1C, s), 4 (1C, s), 4 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (3.02, 3.12), (0.56, 0.99).\n\nHSQC (\u03b4H, \u03b4C): (3.02, 50.9), (3.12, 50.9), (0.99, 18.55), (0.56, 4).\n\nHMBC (\u03b4H, \u03b4C): (0.99, 160.8), (3.02, 160.8), (3.12, 160.8), (3.02, 59.7), (3.12, 59.7), (0.56, 59.7), (0.99, 59.7), (0.99, 50.9), (3.02, 18.55), (3.12, 18.55), (0.56, 18.55), (0.99, 4), (0.56, 4).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "ClC(Cl)(Cl)C1(C2CC2)CO1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "1cb2f3e8-7603-4408-9d77-1d6c508e27ad", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Brc1ccc2ccncc2n1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C8H5BrN2\n\n1H NMR: \u03b4 9.3 (ddd, J = 1.91, 0.44, 0.44 Hz, 1H), 8.75 (dddd, J = 7.95, 2.46, 0.46, 0.44 Hz, 1H), 8.7 (ddd, J = 4.8, 1.91, 0.46 Hz, 1H), 8.15 (dddd, J = 4.8, 2.46, 0.53, 0.44 Hz, 1H), 7.74 (dd, J = 7.95, 0.53 Hz, 1H).\n\n13C NMR: \u03b4 155.8 (1C, s), 145 (1C, s), 143.7 (1C, s), 141.1 (1C, s), 128.17 (1C, s), 126.8 (1C, s), 125.8 (1C, s), 119.8 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.74, 8.75), (8.15, 8.75), (9.3, 8.7), (8.15, 8.7).\n\nHSQC (\u03b4H, \u03b4C): (9.3, 155.8), (8.7, 143.7), (8.75, 128.17), (7.74, 125.8), (8.15, 119.8).\n\nHMBC (\u03b4H, \u03b4C): (8.7, 155.8), (9.3, 145), (8.75, 145), (8.15, 145), (9.3, 143.7), (8.15, 143.7), (8.75, 141.1), (7.74, 141.1), (7.74, 128.17), (8.15, 128.17), (9.3, 126.8), (8.7, 126.8), (8.75, 126.8), (7.74, 126.8), (8.15, 126.8), (8.75, 125.8), (8.7, 119.8), (8.75, 119.8).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Brc1ccc2ccncc2n1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d7dadb17-2ce6-4410-bfe9-70004b4f359e", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCCOCC1CCC(Br)C1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C9H17BrO\n\n1H NMR: \u03b4 4.25 (dddd, J = 9.37, 9.36, 5.34, 5.32 Hz, 1H), 3.51 (d, J = 5.3 Hz, 1H), 3.51 (d, J = 5.3 Hz, 1H), 3.35 (dd, J = 7.09, 7.09 Hz, 1H), 3.35 (dd, J = 7.09, 7.09 Hz, 1H), 2.28 (dddddd, J = 8.06, 7.59, 6.96, 5.3, 5.3, 4.08 Hz, 1H), 2.0 (dddd, J = 12.88, 6.96, 5.34, 1.73 Hz, 1H), 1.98 (dddd, J = 12.88, 9.36, 7.6, 6.85 Hz, 1H), 1.95 (ddd, J = 13.78, 6.96, 5.32 Hz, 1H), 1.79 (ddd, J = 13.78, 9.37, 7.59 Hz, 1H), 1.69 (dddd, J = 8.28, 8.06, 7.6, 6.96 Hz, 1H), 1.66 (dddd, J = 8.28, 6.85, 4.08, 1.73 Hz, 1H), 1.65 (qdd, J = 7.57, 7.09, 7.09 Hz, 1H), 1.65 (qdd, J = 7.57, 7.09, 7.09 Hz, 1H), 0.93 (dd, J = 7.57, 7.57 Hz, 3H).\n\n13C NMR: \u03b4 75 (1C, s), 73.7 (1C, s), 44.5 (1C, s), 38.3 (1C, s), 37.3 (1C, s), 28.9 (1C, s), 27.2 (1C, s), 23.8 (1C, s), 10.66 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (1.79, 4.25), (1.95, 4.25), (1.98, 4.25), (2.0, 4.25), (2.28, 3.51), (1.65, 3.35), (1.95, 2.28), (1.79, 2.28), (1.66, 2.28), (1.69, 2.28), (1.98, 2.0), (1.69, 2.0), (1.66, 2.0), (1.69, 1.98), (1.66, 1.98), (1.79, 1.95), (1.66, 1.69), (0.93, 1.65).\n\nHSQC (\u03b4H, \u03b4C): (3.51, 75), (3.35, 73.7), (4.25, 44.5), (1.95, 38.3), (1.79, 38.3), (2.28, 37.3), (1.98, 28.9), (2.0, 28.9), (1.66, 27.2), (1.69, 27.2), (1.65, 23.8), (0.93, 10.66).\n\nHMBC (\u03b4H, \u03b4C): (3.35, 75), (2.28, 75), (1.95, 75), (1.79, 75), (1.66, 75), (1.69, 75), (3.51, 73.7), (0.93, 73.7), (1.65, 73.7), (2.28, 44.5), (1.95, 44.5), (1.98, 44.5), (2.0, 44.5), (1.79, 44.5), (1.66, 44.5), (1.69, 44.5), (4.25, 38.3), (3.51, 38.3), (2.28, 38.3), (1.98, 38.3), (2.0, 38.3), (1.66, 38.3), (1.69, 38.3), (4.25, 37.3), (3.51, 37.3), (1.95, 37.3), (1.98, 37.3), (2.0, 37.3), (1.79, 37.3), (1.66, 37.3), (1.69, 37.3), (4.25, 28.9), (2.28, 28.9), (1.95, 28.9), (1.66, 28.9), (1.69, 28.9), (1.79, 28.9), (4.25, 27.2), (3.51, 27.2), (2.28, 27.2), (1.95, 27.2), (1.98, 27.2), (2.0, 27.2), (1.79, 27.2), (0.93, 23.8), (3.35, 23.8), (3.35, 10.66), (1.65, 10.66).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCCOCC1CCC(Br)C1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e4eba49b-ad85-49c6-95ae-e5ededc3d761", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1cc(C)c(N=O)c(O)c1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C8H9NO2\n\n1H NMR: \u03b4 7.04 (d, J = 2.54 Hz, 1H), 6.72 (d, J = 2.54 Hz, 1H), 2.43 (s, 3H), 2.2 (s, 3H).\n\n13C NMR: \u03b4 153.4 (1C, s), 141.8 (1C, s), 133.25 (1C, s), 130.9 (1C, s), 129.4 (1C, s), 116.6 (1C, s), 20.6 (1C, s), 18.9 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.72, 7.04).\n\nHSQC (\u03b4H, \u03b4C): (7.04, 129.4), (6.72, 116.6), (2.2, 20.6), (2.43, 18.9).\n\nHMBC (\u03b4H, \u03b4C): (6.72, 153.4), (2.43, 141.8), (6.72, 141.8), (7.04, 141.8), (2.2, 133.25), (7.04, 133.25), (6.72, 133.25), (2.43, 130.9), (7.04, 130.9), (2.43, 129.4), (2.2, 129.4), (6.72, 129.4), (2.2, 116.6), (7.04, 116.6), (6.72, 20.6), (7.04, 20.6), (7.04, 18.9).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1cc(C)c(N=O)c(O)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "8da2cf6e-c3f4-4307-93c7-0ddc620220d5", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1ccc2ccc(Cl)nc2n1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C9H7ClN2\n\n1H NMR: \u03b4 9.04 (ddd, J = 7.83, 1.9, 0.45 Hz, 1H), 8.83 (ddd, J = 8.43, 1.9, 0.46 Hz, 1H), 8.06 (dd, J = 7.83, 0.46 Hz, 1H), 7.52 (dd, J = 8.43, 0.45 Hz, 1H), 2.69 (s, 3H).\n\n13C NMR: \u03b4 158 (1C, s), 154.7 (1C, s), 153.6 (1C, s), 128.17 (1C, s), 128.17 (1C, s), 125.2 (1C, s), 122.73 (1C, s), 122.3 (1C, s), 24.5 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (9.04, 8.83), (9.04, 8.06), (8.83, 7.52).\n\nHSQC (\u03b4H, \u03b4C): (9.04, 128.17), (8.83, 128.17), (7.52, 122.73), (8.06, 122.3), (2.69, 24.5).\n\nHMBC (\u03b4H, \u03b4C): (2.69, 158), (8.83, 158), (7.52, 158), (8.06, 154.7), (9.04, 154.7), (8.83, 153.6), (9.04, 153.6), (9.04, 128.17), (8.83, 128.17), (7.52, 128.17), (8.06, 128.17), (7.52, 125.2), (8.06, 125.2), (8.83, 125.2), (9.04, 125.2), (2.69, 122.73), (8.83, 122.73), (9.04, 122.3), (7.52, 24.5).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1ccc2ccc(Cl)nc2n1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f7ad5f7f-cc43-4073-a5ab-be07e2e77004", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1ccc(NC(=O)CS)c(Cl)c1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C9H10ClNOS\n\n1H NMR: \u03b4 7.09 (dd, J = 8.19, 1.72 Hz, 1H), 7.07 (dd, J = 1.72, 0.55 Hz, 1H), 6.92 (dd, J = 8.19, 0.55 Hz, 1H), 3.47 (s, 2H), 2.26 (s, 3H).\n\n13C NMR: \u03b4 167.28 (1C, s), 134.72 (1C, s), 134.3 (1C, s), 129.1 (1C, s), 129.0 (1C, s), 123.28 (1C, s), 120.7 (1C, s), 36.05 (1C, s), 20.2 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.92, 7.09), (7.07, 7.09).\n\nHSQC (\u03b4H, \u03b4C): (7.07, 129.1), (7.09, 129.0), (6.92, 120.7), (3.47, 36.05), (2.26, 20.2).\n\nHMBC (\u03b4H, \u03b4C): (3.47, 167.28), (6.92, 134.72), (7.09, 134.72), (7.07, 134.72), (2.26, 134.3), (6.92, 134.3), (7.09, 134.3), (7.07, 134.3), (2.26, 129.1), (7.09, 129.1), (2.26, 129.0), (6.92, 129.0), (7.07, 129.0), (6.92, 123.28), (7.07, 123.28), (7.09, 120.7), (7.07, 20.2), (7.09, 20.2).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1ccc(NC(=O)CS)c(Cl)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "041f8961-efdf-4d02-892d-d6e2546d68ce", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C1CCc2ccccc2CN1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C10H11NO\n\n1H NMR: \u03b4 7.21 (ddd, J = 7.62, 7.56, 1.43 Hz, 1H), 7.17 (ddd, J = 7.76, 1.43, 0.52 Hz, 1H), 7.12 (ddd, J = 7.56, 1.22, 0.52 Hz, 1H), 7.07 (ddd, J = 7.76, 7.62, 1.22 Hz, 1H), 4.53 (d, J = 12.64 Hz, 2H), 3.26 (ddd, J = 14.28, 6.97, 2.17 Hz, 2H), 2.79 (ddd, J = 15.92, 6.97, 2.17 Hz, 2H).\n\n13C NMR: \u03b4 177.5 (1C, s), 140.6 (1C, s), 135.6 (1C, s), 129.25 (1C, s), 129 (1C, s), 127.5 (1C, s), 126 (1C, s), 41.2 (1C, s), 36.5 (1C, s), 28.8 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.21, 7.12), (7.21, 7.07), (7.17, 7.07), (3.26, 2.79).\n\nHSQC (\u03b4H, \u03b4C): (7.12, 129.25), (7.17, 129), (7.21, 127.5), (7.07, 126), (4.53, 41.2), (2.79, 36.5), (3.26, 28.8).\n\nHMBC (\u03b4H, \u03b4C): (4.53, 177.5), (3.26, 177.5), (2.79, 177.5), (4.53, 140.6), (2.79, 140.6), (7.17, 140.6), (7.12, 140.6), (7.07, 140.6), (3.26, 140.6), (4.53, 135.6), (7.12, 135.6), (7.21, 135.6), (7.17, 135.6), (3.26, 135.6), (4.53, 129.25), (7.07, 129.25), (7.21, 129.25), (7.07, 129), (7.21, 129), (3.26, 129), (7.12, 127.5), (7.07, 127.5), (7.17, 127.5), (7.12, 126), (7.21, 126), (7.17, 126), (7.12, 41.2), (3.26, 36.5), (2.79, 28.8), (7.17, 28.8).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C1CCc2ccccc2CN1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a8df4d74-902a-483d-9f45-e919235701a2", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Nc1cccc(OC(F)(F)F)c1F", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C7H5F4NO\n\n1H NMR: \u03b4 7.01 (dd, J = 8.12, 7.76 Hz, 1H), 6.75 (dd, J = 7.76, 2.0 Hz, 1H), 6.42 (dd, J = 8.12, 2.0 Hz, 1H).\n\n13C NMR: \u03b4 151.7 (1C, s), 144.5 (1C, s), 134.16 (1C, s), 128.84 (1C, s), 120.82 (1C, s), 112.04 (1C, s), 111.9 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.42, 7.01), (6.75, 7.01), (6.42, 6.75).\n\nHSQC (\u03b4H, \u03b4C): (7.01, 128.84), (6.42, 112.04), (6.75, 111.9).\n\nHMBC (\u03b4H, \u03b4C): (7.01, 151.7), (6.75, 151.7), (6.42, 144.5), (6.75, 144.5), (7.01, 134.16), (6.42, 134.16), (6.75, 128.84), (6.42, 128.84), (6.75, 112.04), (7.01, 112.04), (7.01, 111.9), (6.42, 111.9).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1cccc(OC(F)(F)F)c1F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "851ab323-9051-4e47-97a8-317a1eaea913", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "OCCCNc1ccc(Br)cn1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C8H11BrN2O\n\n1H NMR: \u03b4 7.79 (dd, J = 1.47, 0.51 Hz, 1H), 7.55 (dd, J = 8.21, 1.47 Hz, 1H), 6.5 (dd, J = 8.21, 0.51 Hz, 1H), 3.34 (t, J = 4.72 Hz, 2H), 3.16 (t, J = 6.85 Hz, 2H), 1.85 (tt, J = 6.85, 4.72 Hz, 2H).\n\n13C NMR: \u03b4 158.75 (1C, s), 150.8 (1C, s), 131.9 (1C, s), 119.22 (1C, s), 110.65 (1C, s), 59.29 (1C, s), 42.9 (1C, s), 32.76 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.55, 6.5), (1.85, 3.34), (1.85, 3.16).\n\nHSQC (\u03b4H, \u03b4C): (7.79, 150.8), (7.55, 131.9), (6.5, 110.65), (3.34, 59.29), (3.16, 42.9), (1.85, 32.76).\n\nHMBC (\u03b4H, \u03b4C): (3.16, 158.75), (6.5, 158.75), (7.79, 158.75), (7.55, 158.75), (7.55, 150.8), (6.5, 131.9), (7.79, 131.9), (6.5, 119.22), (7.79, 119.22), (7.55, 119.22), (7.55, 110.65), (1.85, 59.29), (3.16, 59.29), (1.85, 42.9), (3.34, 42.9), (3.16, 32.76), (3.34, 32.76).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "OCCCNc1ccc(Br)cn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "0ba15aa1-9598-4586-b737-70b1686b2388", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCC(CC)c1cc(C)nn2cc(C)nc12", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C13H19N3\n\n1H NMR: \u03b4 7.62 (s, 1H), 7.59 (s, 1H), 3.0 (tt, J = 7.71, 7.71 Hz, 1H), 2.46 (s, 3H), 2.23 (s, 3H), 1.68 (dq, J = 7.71, 6.5 Hz, 2H), 1.68 (dq, J = 7.71, 6.5 Hz, 2H), 0.84 (dd, J = 6.5, 6.5 Hz, 6H).\n\n13C NMR: \u03b4 159.8 (1C, s), 153.58 (1C, s), 137.77 (1C, s), 131.35 (1C, s), 124.7 (1C, s), 118.25 (1C, s), 46 (1C, s), 28.3 (2C, s), 25.1 (1C, s), 12.9 (1C, s), 11.94 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (1.68, 3.0), (0.84, 1.68).\n\nHSQC (\u03b4H, \u03b4C): (7.62, 124.7), (7.59, 118.25), (3.0, 46), (1.68, 28.3), (2.23, 25.1), (2.46, 12.9), (0.84, 11.94).\n\nHMBC (\u03b4H, \u03b4C): (7.59, 159.8), (2.23, 159.8), (7.62, 153.58), (7.59, 153.58), (3.0, 153.58), (7.59, 137.77), (1.68, 137.77), (3.0, 137.77), (7.62, 131.35), (2.46, 131.35), (2.46, 124.7), (3.0, 118.25), (2.23, 118.25), (7.59, 46), (0.84, 46), (1.68, 46), (3.0, 28.3), (0.84, 28.3), (1.68, 28.3), (7.59, 25.1), (7.62, 12.9), (3.0, 11.94), (1.68, 11.94).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCC(CC)c1cc(C)nn2cc(C)nc12", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "11e2cd92-e4ce-4b37-91f1-d2f3e02b154a", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "OCC(O)CSc1nc(Cl)ncc1Br", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C7H8BrClN2O2S\n\n1H NMR: \u03b4 7.96 (s, 1H), 3.94 (dddd, J = 5.67, 5.67, 5.66, 5.66 Hz, 1H), 3.54 (d, J = 5.66 Hz, 1H), 3.54 (d, J = 5.66 Hz, 1H), 3.46 (d, J = 5.67 Hz, 1H), 3.46 (d, J = 5.67 Hz, 1H).\n\n13C NMR: \u03b4 161.3 (1C, s), 159.8 (1C, s), 146.16 (1C, s), 115.1 (1C, s), 70.6 (1C, s), 65.3 (1C, s), 34.2 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (3.94, 3.54), (3.94, 3.46).\n\nHSQC (\u03b4H, \u03b4C): (7.96, 146.16), (3.94, 70.6), (3.54, 65.3), (3.46, 34.2).\n\nHMBC (\u03b4H, \u03b4C): (7.96, 161.3), (3.46, 159.8), (7.96, 159.8), (7.96, 115.1), (3.54, 70.6), (3.46, 70.6), (3.94, 65.3), (3.46, 65.3), (3.94, 34.2), (3.54, 34.2).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "OCC(O)CSc1nc(Cl)ncc1Br", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "53fbcd34-3120-4b4c-ac4e-314bf0a06c94", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CS(=O)(=O)C1OC1c1ccc(Cl)cc1Cl", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C9H8Cl2O3S\n\n1H NMR: \u03b4 7.57 (dd, J = 8.32, 0.55 Hz, 1H), 7.32 (dd, J = 8.32, 1.75 Hz, 1H), 7.22 (dd, J = 1.75, 0.55 Hz, 1H), 4.89 (d, J = 8.06 Hz, 1H), 4.65 (d, J = 8.06 Hz, 1H), 2.95 (s, 3H).\n\n13C NMR: \u03b4 136.4 (1C, s), 133.76 (1C, s), 131.3 (1C, s), 129.5 (1C, s), 128.9 (1C, s), 125.2 (1C, s), 58.7 (1C, s), 49.9 (1C, s), 40.6 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.32, 7.57), (7.22, 7.32), (4.65, 4.89).\n\nHSQC (\u03b4H, \u03b4C): (7.22, 129.5), (7.32, 128.9), (7.57, 125.2), (4.65, 58.7), (4.89, 49.9), (2.95, 40.6).\n\nHMBC (\u03b4H, \u03b4C): (4.65, 136.4), (4.89, 136.4), (7.57, 136.4), (7.22, 136.4), (7.32, 136.4), (7.57, 133.76), (7.22, 133.76), (7.32, 133.76), (4.65, 131.3), (7.22, 131.3), (7.57, 131.3), (7.32, 129.5), (7.57, 128.9), (7.22, 128.9), (7.32, 125.2), (4.65, 125.2), (7.57, 58.7), (4.89, 58.7), (2.95, 49.9), (4.65, 49.9), (4.89, 40.6).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CS(=O)(=O)C1OC1c1ccc(Cl)cc1Cl", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "0fa4c295-eac8-4b7d-a7c3-eaceff805764", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CC1(C)CCCC1Nc1ccc(N)cc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C13H20N2\n\n1H NMR: \u03b4 6.88 (ddd, J = 8.36, 2.15, 0.49 Hz, 2H), 6.79 (ddd, J = 8.36, 2.13, 0.49 Hz, 2H), 3.69 (dd, J = 7.6, 6.96 Hz, 1H), 1.8 (dddd, J = 11.22, 9.37, 7.6, 5.4 Hz, 1H), 1.75 (dddd, J = 11.22, 6.96, 5.32, 1.36 Hz, 1H), 1.66 (ddddd, J = 12.72, 5.4, 5.4, 1.36, 1.36 Hz, 1H), 1.56 (ddddd, J = 12.72, 9.37, 9.37, 5.32, 5.32 Hz, 1H), 1.55 (ddd, J = 14.13, 9.37, 5.4 Hz, 1H), 1.47 (ddd, J = 14.13, 5.32, 1.36 Hz, 1H), 1.03 (s, 3H), 1.03 (s, 3H).\n\n13C NMR: \u03b4 144.5 (1C, s), 139.77 (1C, s), 119 (2C, s), 114 (2C, s), 50.6 (1C, s), 41.8 (1C, s), 33.88 (1C, s), 30.6 (1C, s), 26.4 (1C, s), 24 (1C, s), 21.7 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.79, 6.88), (1.8, 3.69), (1.75, 3.69), (1.66, 1.8), (1.56, 1.8), (1.8, 1.75), (1.56, 1.75), (1.56, 1.66), (1.55, 1.66), (1.47, 1.56), (1.47, 1.55), (1.56, 1.55).\n\nHSQC (\u03b4H, \u03b4C): (6.88, 119), (6.79, 114), (3.69, 50.6), (1.55, 33.88), (1.47, 33.88), (1.8, 30.6), (1.75, 30.6), (1.03, 26.4), (1.03, 24), (1.66, 21.7), (1.56, 21.7).\n\nHMBC (\u03b4H, \u03b4C): (6.79, 144.5), (6.88, 144.5), (3.69, 139.77), (6.79, 139.77), (6.88, 139.77), (6.79, 119), (6.88, 119), (6.79, 114), (6.88, 114), (1.03, 50.6), (1.47, 50.6), (1.56, 50.6), (1.55, 50.6), (1.66, 50.6), (1.8, 50.6), (1.75, 50.6), (3.69, 41.8), (1.03, 41.8), (1.47, 41.8), (1.56, 41.8), (1.55, 41.8), (1.66, 41.8), (1.8, 41.8), (1.75, 41.8), (3.69, 33.88), (1.03, 33.88), (1.8, 33.88), (1.75, 33.88), (1.66, 33.88), (1.56, 33.88), (3.69, 30.6), (1.66, 30.6), (1.47, 30.6), (1.56, 30.6), (1.55, 30.6), (3.69, 26.4), (1.03, 26.4), (1.55, 26.4), (1.47, 26.4), (3.69, 24), (1.03, 24), (1.55, 24), (1.47, 24), (3.69, 21.7), (1.8, 21.7), (1.75, 21.7), (1.55, 21.7), (1.47, 21.7).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC1(C)CCCC1Nc1ccc(N)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "9c9edaa2-6ed4-4345-afbc-3ae6a0e6d655", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCCCC1CC1(Br)C(O)c1ccccc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C14H19BrO\n\n1H NMR: \u03b4 7.71 (dddd, J = 8.09, 1.26, 0.96, 0.55 Hz, 2H), 7.46 (dddd, J = 8.09, 7.27, 1.54, 0.55 Hz, 2H), 7.35 (tt, J = 7.27, 1.26 Hz, 1H), 4.85 (s, 1H), 1.32 (dddd, J = 7.25, 7.25, 6.5, 6.5 Hz, 1H), 1.32 (dddd, J = 7.25, 7.25, 6.5, 6.5 Hz, 1H), 1.3 (ddd, J = 7.25, 7.25, 6.93 Hz, 1H), 1.3 (ddd, J = 7.25, 7.25, 6.93 Hz, 1H), 1.3 (qdd, J = 6.5, 6.5, 6.5 Hz, 1H), 1.3 (qdd, J = 6.5, 6.5, 6.5 Hz, 1H), 0.98 (dddd, J = 8.06, 7.51, 6.93, 6.93 Hz, 1H), 0.87 (dd, J = 6.5, 6.5 Hz, 3H), 0.47 (dd, J = 8.06, 7.2 Hz, 1H), 0.44 (dd, J = 7.51, 7.2 Hz, 1H).\n\n13C NMR: \u03b4 129.35 (1C, s), 128.6 (2C, s), 128.12 (1C, s), 127.3 (2C, s), 73.25 (1C, s), 59.7 (1C, s), 32.2 (1C, s), 28.05 (1C, s), 22.5 (1C, s), 21.15 (1C, s), 20 (1C, s), 13.85 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.46, 7.71), (7.35, 7.46), (1.32, 1.3), (1.3, 0.98), (1.3, 0.87), (0.98, 0.47), (0.44, 0.47), (0.98, 0.44).\n\nHSQC (\u03b4H, \u03b4C): (7.46, 128.6), (7.35, 128.12), (7.71, 127.3), (4.85, 73.25), (1.3, 32.2), (1.32, 28.05), (1.3, 22.5), (0.98, 21.15), (0.44, 20), (0.47, 20), (0.87, 13.85).\n\nHMBC (\u03b4H, \u03b4C): (4.85, 129.35), (7.71, 129.35), (7.46, 129.35), (7.71, 128.6), (7.46, 128.6), (7.35, 128.6), (7.71, 128.12), (7.46, 128.12), (4.85, 127.3), (7.71, 127.3), (7.46, 127.3), (7.35, 127.3), (7.71, 73.25), (0.98, 73.25), (0.44, 73.25), (0.47, 73.25), (4.85, 59.7), (0.44, 59.7), (0.47, 59.7), (0.98, 59.7), (1.3, 59.7), (0.44, 32.2), (0.47, 32.2), (0.98, 32.2), (1.3, 32.2), (1.32, 32.2), (1.3, 28.05), (0.98, 28.05), (0.87, 28.05), (1.32, 22.5), (1.3, 22.5), (0.87, 22.5), (4.85, 21.15), (0.44, 21.15), (0.47, 21.15), (1.32, 21.15), (1.3, 21.15), (4.85, 20), (0.98, 20), (1.3, 20), (1.3, 13.85), (1.32, 13.85).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCCCC1CC1(Br)C(O)c1ccccc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "3d0b28d0-f931-4390-b0c7-2566318dfd76", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCC(C)CC(C)NC(=O)NCCn1cccc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C14H25N3O\n\n1H NMR: \u03b4 7.09 (ddd, J = 2.82, 1.54, 1.07 Hz, 2H), 6.17 (ddd, J = 3.19, 2.82, 1.54 Hz, 2H), 4.04 (ddq, J = 7.51, 7.51, 6.75 Hz, 1H), 3.83 (dd, J = 6.28, 6.28 Hz, 1H), 3.83 (dd, J = 6.28, 6.28 Hz, 1H), 3.38 (dd, J = 6.28, 6.28 Hz, 1H), 3.38 (dd, J = 6.28, 6.28 Hz, 1H), 1.4 (d, J = 6.75 Hz, 3H), 1.34 (qdddd, J = 6.8, 6.75, 6.75, 6.65, 6.65 Hz, 1H), 1.34 (dd, J = 7.51, 6.75 Hz, 1H), 1.34 (dd, J = 7.51, 6.75 Hz, 1H), 1.17 (dq, J = 6.65, 6.5 Hz, 1H), 1.17 (dq, J = 6.65, 6.5 Hz, 1H), 0.83 (d, J = 6.8 Hz, 3H), 0.81 (dd, J = 6.5, 6.5 Hz, 3H).\n\n13C NMR: \u03b4 153.1 (1C, s), 120.4 (2C, s), 108.05 (2C, s), 54.75 (1C, s), 47.63 (1C, s), 42 (1C, s), 39.2 (1C, s), 31.89 (1C, s), 29.87 (1C, s), 19.41 (1C, s), 17.35 (1C, s), 11.38 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.17, 7.09), (3.38, 3.83), (4.04, 1.4), (4.04, 1.34), (1.17, 1.34), (1.34, 0.83), (1.17, 0.81).\n\nHSQC (\u03b4H, \u03b4C): (7.09, 120.4), (6.17, 108.05), (4.04, 54.75), (3.83, 47.63), (3.38, 42), (1.34, 39.2), (1.34, 31.89), (1.17, 29.87), (0.83, 19.41), (1.4, 17.35), (0.81, 11.38).\n\nHMBC (\u03b4H, \u03b4C): (4.04, 153.1), (3.38, 153.1), (3.83, 120.4), (7.09, 120.4), (6.17, 120.4), (7.09, 108.05), (6.17, 108.05), (1.4, 54.75), (1.34, 54.75), (7.09, 47.63), (3.38, 47.63), (3.83, 42), (4.04, 39.2), (0.83, 39.2), (1.17, 39.2), (1.4, 39.2), (1.34, 39.2), (4.04, 31.89), (1.17, 31.89), (0.83, 31.89), (0.81, 31.89), (1.34, 31.89), (0.83, 29.87), (0.81, 29.87), (1.34, 29.87), (1.17, 19.41), (1.34, 19.41), (4.04, 17.35), (1.34, 17.35), (1.34, 11.38), (1.17, 11.38).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCC(C)CC(C)NC(=O)NCCn1cccc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "b5087fa7-4d56-4095-b774-52410f698154", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCc1nn(C)cc1NC(=O)N(CCO)C1CC1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C12H20N4O2\n\n1H NMR: \u03b4 6.36 (s, 1H), 3.66 (t, J = 5.03 Hz, 2H), 3.53 (s, 3H), 3.52 (t, J = 5.03 Hz, 2H), 3.05 (dddd, J = 8.06, 8.06, 7.51, 7.51 Hz, 1H), 2.49 (q, J = 7.35 Hz, 2H), 1.05 (t, J = 7.35 Hz, 3H), 0.57 (dddd, J = 8.06, 7.79, 7.51, 7.05 Hz, 2H), 0.57 (dddd, J = 8.06, 7.79, 7.51, 7.05 Hz, 2H).\n\n13C NMR: \u03b4 157.45 (1C, s), 147.05 (1C, s), 129.9 (1C, s), 124.7 (1C, s), 59.55 (1C, s), 52.84 (1C, s), 39.7 (1C, s), 30.35 (1C, s), 18.88 (1C, s), 12.12 (1C, s), 9.05 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (3.52, 3.66), (0.57, 3.05), (1.05, 2.49).\n\nHSQC (\u03b4H, \u03b4C): (6.36, 124.7), (3.52, 59.55), (3.66, 52.84), (3.53, 39.7), (3.05, 30.35), (2.49, 18.88), (1.05, 12.12), (0.57, 9.05).\n\nHMBC (\u03b4H, \u03b4C): (3.05, 157.45), (3.66, 157.45), (6.36, 147.05), (1.05, 147.05), (2.49, 147.05), (6.36, 129.9), (2.49, 129.9), (3.53, 124.7), (3.66, 59.55), (3.05, 52.84), (3.52, 52.84), (6.36, 39.7), (0.57, 30.35), (3.66, 30.35), (1.05, 18.88), (2.49, 12.12), (0.57, 9.05), (3.05, 9.05).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCc1nn(C)cc1NC(=O)N(CCO)C1CC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "52c161e7-b8db-4d16-aa4c-46c0f8464a1d", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=c1[nH]nc(Sc2nc(Cl)ncc2Cl)n1C1CC1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C9H7Cl2N5OS\n\n1H NMR: \u03b4 8.0 (s, 1H), 3.58 (dddd, J = 8.06, 8.06, 7.51, 7.51 Hz, 1H), 0.76 (dddd, J = 8.23, 8.06, 7.79, 7.51 Hz, 2H), 0.76 (dddd, J = 8.23, 8.06, 7.79, 7.51 Hz, 2H).\n\n13C NMR: \u03b4 161.3 (1C, s), 159.8 (1C, s), 153.9 (1C, s), 153.4 (1C, s), 145.26 (1C, s), 131.3 (1C, s), 49.9 (1C, s), 7.2 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (3.58, 0.76).\n\nHSQC (\u03b4H, \u03b4C): (8.0, 145.26), (3.58, 49.9), (0.76, 7.2).\n\nHMBC (\u03b4H, \u03b4C): (8.0, 161.3), (8.0, 159.8), (3.58, 153.9), (3.58, 153.4), (8.0, 131.3), (0.76, 49.9), (3.58, 7.2), (0.76, 7.2).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=c1[nH]nc(Sc2nc(Cl)ncc2Cl)n1C1CC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e54483ee-12f1-41b6-9f5f-f77e63ff1b7e", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1ccccc1C(C)Nc1snc(C)c1C#N", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C14H15N3S\n\n1H NMR: \u03b4 7.09 (ddd, J = 7.99, 1.55, 0.53 Hz, 1H), 7.06 (ddd, J = 7.9, 7.61, 1.55 Hz, 1H), 7.04 (ddd, J = 7.99, 7.61, 1.2 Hz, 1H), 6.94 (ddd, J = 7.9, 1.2, 0.53 Hz, 1H), 5.04 (q, J = 6.63 Hz, 1H), 2.21 (s, 3H), 2.16 (s, 3H), 1.37 (d, J = 6.63 Hz, 3H).\n\n13C NMR: \u03b4 156.66 (1C, s), 149.8 (1C, s), 135.43 (1C, s), 130.7 (1C, s), 130.4 (1C, s), 128.7 (1C, s), 128.35 (1C, s), 124.85 (1C, s), 114.6 (1C, s), 108.9 (1C, s), 51.1 (1C, s), 23.67 (1C, s), 19.4 (1C, s), 11.65 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.94, 7.06), (7.09, 7.06), (7.09, 7.04), (7.06, 7.04), (1.37, 5.04).\n\nHSQC (\u03b4H, \u03b4C): (7.09, 130.4), (7.04, 128.7), (6.94, 128.35), (7.06, 124.85), (5.04, 51.1), (1.37, 23.67), (2.21, 19.4), (2.16, 11.65).\n\nHMBC (\u03b4H, \u03b4C): (5.04, 156.66), (2.16, 149.8), (6.94, 135.43), (7.04, 135.43), (7.09, 135.43), (5.04, 135.43), (2.21, 135.43), (1.37, 130.7), (2.21, 130.7), (5.04, 130.7), (7.09, 130.7), (7.06, 130.7), (6.94, 130.7), (2.21, 130.4), (7.04, 130.4), (7.06, 130.4), (7.09, 128.7), (7.06, 128.7), (6.94, 128.7), (5.04, 128.35), (7.04, 128.35), (7.06, 128.35), (6.94, 124.85), (7.04, 124.85), (7.09, 124.85), (2.16, 108.9), (1.37, 51.1), (6.94, 51.1), (5.04, 23.67), (7.09, 19.4).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1ccccc1C(C)Nc1snc(C)c1C#N", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "abd7a56a-b890-467a-b578-4c274c8f8b08", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CC1CN(Cc2ncoc2C(C)C)CC(C)S1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C13H22N2OS\n\n1H NMR: \u03b4 8.07 (s, 1H), 3.94 (s, 2H), 3.54 (dqd, J = 10.18, 6.9, 2.23 Hz, 2H), 3.16 (p, J = 6.59 Hz, 1H), 2.59 (dd, J = 10.54, 2.23 Hz, 2H), 2.59 (dd, J = 10.54, 10.18 Hz, 2H), 1.19 (d, J = 6.59 Hz, 6H), 1.07 (d, J = 6.9 Hz, 6H).\n\n13C NMR: \u03b4 150.45 (1C, s), 148.1 (1C, s), 131.75 (1C, s), 53.2 (2C, s), 43.6 (1C, s), 35.6 (2C, s), 27.45 (1C, s), 21.6 (2C, s), 21.4 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (3.54, 2.59), (3.16, 1.19), (3.54, 1.07).\n\nHSQC (\u03b4H, \u03b4C): (8.07, 150.45), (2.59, 53.2), (3.94, 43.6), (3.54, 35.6), (3.16, 27.45), (1.07, 21.6), (1.19, 21.4).\n\nHMBC (\u03b4H, \u03b4C): (8.07, 148.1), (1.19, 148.1), (3.16, 148.1), (3.94, 148.1), (8.07, 131.75), (3.16, 131.75), (3.94, 131.75), (1.07, 53.2), (3.94, 53.2), (3.54, 53.2), (2.59, 53.2), (2.59, 43.6), (1.07, 35.6), (3.54, 35.6), (2.59, 35.6), (1.19, 27.45), (2.59, 21.6), (3.54, 21.6), (1.19, 21.4), (3.16, 21.4).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC1CN(Cc2ncoc2C(C)C)CC(C)S1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "cb126535-f55d-4d2e-9c9f-a330b8299afd", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCN(C)S(=O)(=O)NC(C)c1oc2ccccc2c1C", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C14H20N2O3S\n\n1H NMR: \u03b4 7.73 (ddd, J = 8.24, 1.87, 0.48 Hz, 1H), 7.38 (ddd, J = 8.03, 1.55, 0.48 Hz, 1H), 7.25 (ddd, J = 8.03, 7.19, 1.87 Hz, 1H), 7.12 (ddd, J = 8.24, 7.19, 1.55 Hz, 1H), 5.36 (q, J = 7.36 Hz, 1H), 3.4 (q, J = 7.01 Hz, 1H), 3.4 (q, J = 7.01 Hz, 1H), 3.1 (s, 3H), 2.29 (s, 3H), 1.51 (d, J = 7.36 Hz, 3H), 1.2 (dd, J = 7.01, 7.01 Hz, 3H).\n\n13C NMR: \u03b4 153.5 (1C, s), 148.1 (1C, s), 129.4 (1C, s), 126.8 (1C, s), 122.5 (1C, s), 119.3 (1C, s), 112.7 (1C, s), 111.6 (1C, s), 111.6 (1C, s), 44.62 (1C, s), 40.1 (1C, s), 19.9 (1C, s), 12.6 (1C, s), 8.2 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.12, 7.38), (7.25, 7.38), (7.73, 7.25), (7.12, 7.25), (7.73, 7.12), (1.51, 5.36), (1.2, 3.4).\n\nHSQC (\u03b4H, \u03b4C): (7.25, 126.8), (7.12, 122.5), (7.73, 119.3), (5.36, 111.6), (7.38, 111.6), (3.4, 44.62), (3.1, 40.1), (1.51, 19.9), (1.2, 12.6), (2.29, 8.2).\n\nHMBC (\u03b4H, \u03b4C): (7.73, 153.5), (7.25, 153.5), (7.38, 153.5), (5.36, 148.1), (2.29, 148.1), (1.51, 148.1), (2.29, 129.4), (7.73, 129.4), (7.38, 129.4), (7.12, 129.4), (7.73, 126.8), (7.38, 126.8), (7.12, 126.8), (7.73, 122.5), (7.25, 122.5), (7.38, 122.5), (7.12, 119.3), (7.25, 119.3), (5.36, 112.7), (7.73, 112.7), (2.29, 112.7), (1.51, 111.6), (7.12, 111.6), (7.25, 111.6), (1.2, 44.62), (3.1, 44.62), (3.4, 40.1), (5.36, 19.9), (3.4, 12.6).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCN(C)S(=O)(=O)NC(C)c1oc2ccccc2c1C", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a3949169-8d84-4582-843b-841053f51818", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1noc(CCC(=O)OCc2cccc(F)c2)n1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C13H13FN2O3\n\n1H NMR: \u03b4 7.38 (ddd, J = 8.1, 8.04, 0.55 Hz, 1H), 7.23 (ddd, J = 1.34, 1.06, 0.55 Hz, 1H), 7.11 (ddd, J = 8.1, 1.34, 1.09 Hz, 1H), 7.11 (ddd, J = 8.04, 1.09, 1.06 Hz, 1H), 5.17 (s, 2H), 3.15 (t, J = 7.4 Hz, 2H), 2.53 (s, 3H), 2.44 (t, J = 7.4 Hz, 2H).\n\n13C NMR: \u03b4 179.2 (1C, s), 173.03 (1C, s), 165.94 (1C, s), 163 (1C, s), 134.2 (1C, s), 130.6 (1C, s), 119.8 (1C, s), 114.9 (1C, s), 114.15 (1C, s), 66.78 (1C, s), 34.4 (1C, s), 22.4 (1C, s), 12.34 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.38, 7.11), (2.44, 3.15).\n\nHSQC (\u03b4H, \u03b4C): (7.38, 130.6), (7.11, 119.8), (7.23, 114.9), (7.11, 114.15), (5.17, 66.78), (2.44, 34.4), (3.15, 22.4), (2.53, 12.34).\n\nHMBC (\u03b4H, \u03b4C): (3.15, 179.2), (2.44, 179.2), (3.15, 173.03), (2.44, 173.03), (5.17, 173.03), (2.53, 165.94), (7.38, 163), (7.23, 163), (7.11, 163), (5.17, 134.2), (7.38, 134.2), (7.23, 134.2), (7.11, 134.2), (7.11, 130.6), (5.17, 119.8), (7.38, 119.8), (7.23, 119.8), (7.11, 119.8), (5.17, 114.9), (7.11, 114.9), (7.38, 114.15), (7.23, 114.15), (7.11, 114.15), (7.23, 66.78), (7.11, 66.78), (3.15, 34.4), (2.44, 22.4).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1noc(CCC(=O)OCc2cccc(F)c2)n1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "03c59e19-e933-49f3-87d6-b07d40399350", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCOc1ccc(C(=O)Nc2cc(Cl)ccc2Cl)cc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C15H13Cl2NO2\n\n1H NMR: \u03b4 8.02 (ddd, J = 8.32, 1.78, 0.44 Hz, 2H), 7.39 (dd, J = 8.13, 0.55 Hz, 1H), 7.38 (dd, J = 1.71, 0.55 Hz, 1H), 7.19 (dd, J = 8.13, 1.71 Hz, 1H), 7.05 (ddd, J = 8.32, 1.2, 0.44 Hz, 2H), 4.15 (q, J = 7.0 Hz, 2H), 1.3 (t, J = 7.0 Hz, 3H).\n\n13C NMR: \u03b4 165.36 (1C, s), 162.65 (1C, s), 134.42 (1C, s), 133.1 (1C, s), 131.25 (1C, s), 130 (2C, s), 129.8 (1C, s), 121.6 (1C, s), 121.4 (1C, s), 120.78 (1C, s), 114.44 (2C, s), 63.66 (1C, s), 14.7 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.19, 7.39), (7.19, 7.38), (8.02, 7.05), (4.15, 1.3).\n\nHSQC (\u03b4H, \u03b4C): (8.02, 130), (7.39, 129.8), (7.38, 121.6), (7.19, 121.4), (7.05, 114.44), (4.15, 63.66), (1.3, 14.7).\n\nHMBC (\u03b4H, \u03b4C): (8.02, 165.36), (4.15, 162.65), (7.05, 162.65), (8.02, 162.65), (7.39, 134.42), (7.38, 134.42), (7.39, 133.1), (7.38, 133.1), (7.19, 133.1), (8.02, 131.25), (7.05, 131.25), (8.02, 130), (7.05, 130), (7.19, 129.8), (7.19, 121.6), (7.39, 121.4), (7.38, 121.4), (7.39, 120.78), (7.38, 120.78), (7.19, 120.78), (8.02, 114.44), (7.05, 114.44), (1.3, 63.66), (4.15, 14.7).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCOc1ccc(C(=O)Nc2cc(Cl)ccc2Cl)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "9abb1907-b640-45c6-889d-5210ac352bf8", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1c(F)cc(N)cc1S(=O)(=O)N(C)Cc1ccoc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C13H15FN2O3S\n\n1H NMR: \u03b4 7.4 (d, J = 1.65 Hz, 1H), 7.32 (dd, J = 1.75, 0.93 Hz, 1H), 7.14 (d, J = 1.65 Hz, 1H), 7.07 (dd, J = 1.11, 0.93 Hz, 1H), 6.22 (dd, J = 1.75, 1.11 Hz, 1H), 4.64 (s, 2H), 2.99 (s, 3H), 2.25 (s, 3H).\n\n13C NMR: \u03b4 157.2 (1C, s), 145.9 (1C, s), 142.9 (1C, s), 139.25 (1C, s), 136.2 (1C, s), 127.3 (1C, s), 126.1 (1C, s), 112.17 (1C, s), 110.9 (1C, s), 102.6 (1C, s), 54.3 (1C, s), 40.1 (1C, s), 13.2 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.4, 7.14), (7.32, 6.22).\n\nHSQC (\u03b4H, \u03b4C): (7.32, 142.9), (7.07, 139.25), (7.4, 112.17), (6.22, 110.9), (7.14, 102.6), (4.64, 54.3), (2.99, 40.1), (2.25, 13.2).\n\nHMBC (\u03b4H, \u03b4C): (2.25, 157.2), (7.14, 157.2), (7.4, 145.9), (7.14, 145.9), (6.22, 142.9), (7.07, 142.9), (4.64, 139.25), (6.22, 139.25), (7.32, 139.25), (2.25, 136.2), (7.4, 136.2), (2.25, 127.3), (7.14, 127.3), (7.4, 127.3), (4.64, 126.1), (6.22, 126.1), (7.07, 126.1), (7.32, 126.1), (7.14, 112.17), (4.64, 110.9), (7.32, 110.9), (7.07, 110.9), (7.4, 102.6), (7.07, 54.3), (6.22, 54.3), (2.99, 54.3), (4.64, 40.1).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1c(F)cc(N)cc1S(=O)(=O)N(C)Cc1ccoc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "452549af-7b8c-46fd-968e-1b263f97893c", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CC1OCCC1C(=O)NNC(=O)c1cccc(C#N)c1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C14H15N3O3\n\n1H NMR: \u03b4 8.6 (ddd, J = 1.79, 1.73, 0.44 Hz, 1H), 8.09 (ddd, J = 7.89, 1.73, 1.26 Hz, 1H), 7.82 (ddd, J = 7.87, 1.79, 1.26 Hz, 1H), 7.68 (ddd, J = 7.89, 7.87, 0.44 Hz, 1H), 4.35 (dq, J = 8.06, 6.56 Hz, 1H), 3.8 (ddd, J = 14.46, 5.43, 1.36 Hz, 1H), 3.78 (ddd, J = 14.46, 9.32, 5.5 Hz, 1H), 3.1 (ddd, J = 8.06, 7.37, 7.19 Hz, 1H), 2.11 (dddd, J = 13.63, 7.19, 5.5, 1.36 Hz, 1H), 2.1 (dddd, J = 13.63, 9.32, 7.37, 5.43 Hz, 1H), 1.16 (d, J = 6.56 Hz, 3H).\n\n13C NMR: \u03b4 172.6 (1C, s), 165.7 (1C, s), 136.9 (1C, s), 135.7 (1C, s), 129.07 (1C, s), 128.4 (1C, s), 123.15 (1C, s), 117.65 (1C, s), 112.8 (1C, s), 77.9 (1C, s), 67.2 (1C, s), 48.91 (1C, s), 28.9 (1C, s), 18.9 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.82, 8.6), (8.09, 8.6), (7.68, 8.09), (7.82, 7.68), (1.16, 4.35), (2.1, 3.8), (2.1, 3.78), (2.11, 3.78), (3.8, 3.78), (2.1, 3.1), (2.11, 3.1), (4.35, 3.1), (2.1, 2.11).\n\nHSQC (\u03b4H, \u03b4C): (7.82, 135.7), (7.68, 129.07), (8.6, 128.4), (8.09, 123.15), (4.35, 77.9), (3.8, 67.2), (3.78, 67.2), (3.1, 48.91), (2.1, 28.9), (2.11, 28.9), (1.16, 18.9).\n\nHMBC (\u03b4H, \u03b4C): (4.35, 172.6), (3.1, 172.6), (2.1, 172.6), (2.11, 172.6), (8.6, 165.7), (8.09, 165.7), (8.6, 136.9), (8.09, 136.9), (7.68, 136.9), (8.6, 135.7), (8.09, 135.7), (7.68, 135.7), (8.09, 129.07), (7.82, 129.07), (8.09, 128.4), (7.82, 128.4), (8.6, 123.15), (7.82, 123.15), (7.68, 123.15), (8.6, 117.65), (7.82, 117.65), (8.6, 112.8), (7.82, 112.8), (7.68, 112.8), (3.8, 77.9), (3.78, 77.9), (1.16, 77.9), (3.1, 77.9), (2.1, 77.9), (2.11, 77.9), (4.35, 67.2), (3.1, 67.2), (2.1, 67.2), (2.11, 67.2), (4.35, 48.91), (3.8, 48.91), (3.78, 48.91), (1.16, 48.91), (2.1, 48.91), (2.11, 48.91), (3.1, 28.9), (3.8, 28.9), (3.78, 28.9), (4.35, 28.9), (3.1, 18.9), (4.35, 18.9).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC1OCCC1C(=O)NNC(=O)c1cccc(C#N)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "9f8be1f6-098b-4bea-aef3-20ae1c3a0552", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1cc(NC(=O)CSc2nc(=O)n3cccc(C)c3n2)no1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C14H13N5O3S\n\n1H NMR: \u03b4 8.02 (d, J = 11.94 Hz, 1H), 7.7 (d, J = 1.91 Hz, 1H), 7.25 (dd, J = 11.94, 1.91 Hz, 1H), 6.17 (s, 1H), 3.9 (s, 2H), 2.35 (s, 3H), 2 (s, 3H).\n\n13C NMR: \u03b4 169.1 (1C, s), 165 (1C, s), 161.2 (1C, s), 158.65 (1C, s), 153.8 (1C, s), 149.45 (1C, s), 138.5 (1C, s), 134.95 (1C, s), 128 (1C, s), 105.4 (1C, s), 97 (1C, s), 35.5 (1C, s), 15.9 (1C, s), 12 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.25, 8.02), (7.25, 7.7).\n\nHSQC (\u03b4H, \u03b4C): (7.7, 138.5), (8.02, 128), (7.25, 105.4), (6.17, 97), (3.9, 35.5), (2, 15.9), (2.35, 12).\n\nHMBC (\u03b4H, \u03b4C): (3.9, 169.1), (6.17, 165), (3.9, 161.2), (6.17, 158.65), (2.35, 158.65), (2, 153.8), (7.7, 153.8), (8.02, 153.8), (8.02, 149.45), (8.02, 138.5), (2, 138.5), (7.25, 138.5), (2, 134.95), (7.7, 134.95), (7.25, 134.95), (7.7, 128), (7.25, 128), (7.7, 105.4), (8.02, 105.4), (2.35, 97), (7.7, 15.9), (6.17, 12).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1cc(NC(=O)CSc2nc(=O)n3cccc(C)c3n2)no1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "c9023211-a0e5-4cac-b99c-5da182a09f22", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C(NCCCN1CCCCCC1=O)NNc1ccc(F)cc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C16H23FN4O2\n\n1H NMR: \u03b4 7.04 (ddd, J = 8.68, 2.18, 0.55 Hz, 2H), 6.88 (ddd, J = 8.68, 1.64, 0.55 Hz, 2H), 3.28 (ddd, J = 14.63, 7.25, 1.36 Hz, 2H), 3.2 (t, J = 6.61 Hz, 2H), 3.17 (t, J = 2.67 Hz, 2H), 2.45 (ddd, J = 14.49, 7.24, 1.37 Hz, 2H), 1.81 (tt, J = 6.61, 2.67 Hz, 2H), 1.79 (ddddd, J = 12.87, 7.24, 6.94, 2.17, 1.37 Hz, 2H), 1.78 (ddddd, J = 14.39, 6.95, 6.94, 2.17, 2.16 Hz, 2H), 1.76 (ddddd, J = 12.9, 7.25, 6.95, 2.16, 1.36 Hz, 2H).\n\n13C NMR: \u03b4 176.8 (1C, s), 157.8 (1C, s), 153.1 (1C, s), 148.85 (1C, s), 119 (2C, s), 115.32 (2C, s), 49.6 (1C, s), 44.6 (1C, s), 40 (1C, s), 37 (1C, s), 29.9 (1C, s), 28.6 (1C, s), 28.2 (1C, s), 23.4 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.88, 7.04), (1.76, 3.28), (1.81, 3.2), (1.81, 3.17), (1.79, 2.45), (1.79, 1.78), (1.78, 1.76).\n\nHSQC (\u03b4H, \u03b4C): (7.04, 119), (6.88, 115.32), (3.28, 49.6), (3.17, 44.6), (3.2, 40), (2.45, 37), (1.76, 29.9), (1.78, 28.6), (1.81, 28.2), (1.79, 23.4).\n\nHMBC (\u03b4H, \u03b4C): (2.45, 176.8), (1.79, 176.8), (3.28, 176.8), (3.17, 176.8), (6.88, 157.8), (7.04, 157.8), (3.2, 153.1), (6.88, 148.85), (7.04, 148.85), (7.04, 119), (6.88, 119), (7.04, 115.32), (6.88, 115.32), (3.17, 49.6), (1.78, 49.6), (1.76, 49.6), (3.28, 44.6), (3.2, 44.6), (1.81, 44.6), (3.17, 40), (1.81, 40), (1.79, 37), (1.78, 37), (3.28, 29.9), (1.79, 29.9), (1.78, 29.9), (3.28, 28.6), (2.45, 28.6), (1.79, 28.6), (1.76, 28.6), (3.17, 28.2), (3.2, 28.2), (2.45, 23.4), (1.78, 23.4), (1.76, 23.4).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(NCCCN1CCCCCC1=O)NNc1ccc(F)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "df4031f5-9711-4289-9d30-9dd7e4c1bfe3", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C(NC(Cc1ccccc1)C(F)(F)F)c1ccccc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C16H14F3NO\n\n1H NMR: \u03b4 7.76 (dddd, J = 8.47, 1.86, 1.46, 0.45 Hz, 2H), 7.64 (tt, J = 7.5, 1.46 Hz, 1H), 7.47 (dddd, J = 8.47, 7.5, 1.38, 0.45 Hz, 2H), 7.27 (dddd, J = 7.77, 7.72, 1.84, 0.54 Hz, 2H), 7.25 (dddd, J = 7.77, 1.51, 1.19, 0.54 Hz, 2H), 7.19 (tt, J = 7.72, 1.51 Hz, 1H), 4.12 (dd, J = 7.43, 7.43 Hz, 1H), 2.65 (d, J = 7.43 Hz, 1H), 2.65 (d, J = 7.43 Hz, 1H).\n\n13C NMR: \u03b4 167.63 (1C, s), 136.8 (1C, s), 133.64 (1C, s), 131.9 (1C, s), 129.12 (2C, s), 128.6 (2C, s), 128.56 (2C, s), 127.2 (1C, s), 127.17 (2C, s), 122.6 (1C, s), 53.15 (1C, s), 37.7 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.47, 7.76), (7.47, 7.64), (7.27, 7.25), (7.27, 7.19), (7.25, 7.19), (4.12, 2.65).\n\nHSQC (\u03b4H, \u03b4C): (7.64, 131.9), (7.25, 129.12), (7.27, 128.6), (7.47, 128.56), (7.19, 127.2), (7.76, 127.17), (4.12, 53.15), (2.65, 37.7).\n\nHMBC (\u03b4H, \u03b4C): (7.76, 167.63), (4.12, 167.63), (7.27, 136.8), (7.25, 136.8), (2.65, 136.8), (4.12, 136.8), (7.76, 133.64), (7.47, 133.64), (7.76, 131.9), (7.47, 131.9), (7.19, 129.12), (7.25, 129.12), (7.27, 129.12), (2.65, 129.12), (7.19, 128.6), (7.25, 128.6), (7.27, 128.6), (7.47, 128.56), (7.76, 128.56), (7.64, 128.56), (7.27, 127.2), (7.25, 127.2), (7.47, 127.17), (7.76, 127.17), (7.64, 127.17), (4.12, 122.6), (2.65, 122.6), (2.65, 53.15), (7.25, 37.7), (4.12, 37.7).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(NC(Cc1ccccc1)C(F)(F)F)c1ccccc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f959b873-0edc-4574-960e-d639a25af2d0", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCOc1ccc(Cl)c(C(=O)Nc2cncc3ccccc23)n1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C17H14ClN3O2\n\n1H NMR: \u03b4 8.85 (dddd, J = 1.95, 1.63, 0.46, 0.45 Hz, 1H), 8.14 (dddd, J = 7.74, 1.63, 1.46, 0.47 Hz, 1H), 8.0 (dd, J = 1.95, 0.49 Hz, 1H), 7.94 (d, J = 8.09 Hz, 1H), 7.88 (ddd, J = 7.92, 6.97, 1.46 Hz, 1H), 7.77 (ddddd, J = 7.92, 1.59, 0.49, 0.47, 0.46 Hz, 1H), 7.63 (dddd, J = 7.74, 6.97, 1.59, 0.45 Hz, 1H), 6.88 (d, J = 8.09 Hz, 1H), 4.23 (q, J = 7.11 Hz, 2H), 1.17 (t, J = 7.11 Hz, 3H).\n\n13C NMR: \u03b4 164.9 (1C, s), 164.1 (1C, s), 151.6 (1C, s), 148.4 (1C, s), 143.8 (1C, s), 138.9 (1C, s), 135.9 (1C, s), 130.4 (1C, s), 128.5 (1C, s), 127.9 (1C, s), 127.68 (1C, s), 127.2 (1C, s), 125.36 (1C, s), 121.87 (1C, s), 110.55 (1C, s), 63.2 (1C, s), 14.1 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.63, 8.14), (8.85, 8.14), (8.85, 8.0), (7.63, 7.88), (7.77, 7.88), (7.63, 7.77), (7.94, 6.88), (4.23, 1.17).\n\nHSQC (\u03b4H, \u03b4C): (8.85, 151.6), (8.0, 148.4), (7.94, 130.4), (8.14, 127.9), (7.63, 127.2), (7.88, 125.36), (7.77, 121.87), (6.88, 110.55), (4.23, 63.2), (1.17, 14.1).\n\nHMBC (\u03b4H, \u03b4C): (4.23, 164.9), (6.88, 164.9), (7.94, 164.9), (8.14, 151.6), (8.0, 151.6), (8.85, 148.4), (7.94, 143.8), (7.77, 138.9), (8.0, 138.9), (6.88, 135.9), (7.94, 135.9), (6.88, 130.4), (8.85, 128.5), (8.14, 128.5), (7.63, 128.5), (7.77, 128.5), (8.85, 127.9), (7.63, 127.9), (7.88, 127.9), (8.85, 127.68), (8.0, 127.68), (8.14, 127.68), (7.88, 127.68), (7.77, 127.68), (8.14, 127.2), (7.88, 127.2), (7.77, 127.2), (8.14, 125.36), (7.77, 125.36), (7.63, 125.36), (7.63, 121.87), (7.88, 121.87), (7.94, 110.55), (1.17, 63.2), (4.23, 14.1).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCOc1ccc(Cl)c(C(=O)Nc2cncc3ccccc23)n1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d915cc18-c7ce-4827-87ea-5f87317c4f36", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C(Nc1cccnc1)NC(CO)c1ccc(Cl)c(F)c1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C14H13ClFN3O2\n\n1H NMR: \u03b4 8.41 (ddd, J = 4.69, 1.89, 1.87 Hz, 1H), 8.4 (ddd, J = 1.89, 1.85, 0.55 Hz, 1H), 7.51 (dd, J = 8.05, 0.55 Hz, 1H), 7.47 (ddd, J = 8.31, 1.87, 1.85 Hz, 1H), 7.32 (dd, J = 8.05, 0.94 Hz, 1H), 7.31 (ddd, J = 8.31, 4.69, 0.55 Hz, 1H), 7.3 (dd, J = 0.94, 0.55 Hz, 1H), 5.12 (dd, J = 5.37, 5.37 Hz, 1H), 3.67 (d, J = 5.37 Hz, 1H), 3.67 (d, J = 5.37 Hz, 1H).\n\n13C NMR: \u03b4 158.56 (1C, s), 156.25 (1C, s), 143.75 (1C, s), 143.4 (1C, s), 139.8 (1C, s), 132.25 (1C, s), 128.3 (1C, s), 128.06 (1C, s), 126.34 (1C, s), 126.1 (1C, s), 123.9 (1C, s), 115.61 (1C, s), 65.65 (1C, s), 58.95 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (8.4, 8.41), (7.32, 7.51), (8.4, 7.47), (8.41, 7.47), (7.31, 7.47), (8.41, 7.31), (5.12, 3.67).\n\nHSQC (\u03b4H, \u03b4C): (8.41, 143.75), (8.4, 139.8), (7.32, 128.3), (7.51, 126.34), (7.47, 126.1), (7.31, 123.9), (7.3, 115.61), (3.67, 65.65), (5.12, 58.95).\n\nHMBC (\u03b4H, \u03b4C): (7.3, 158.56), (7.51, 158.56), (5.12, 156.25), (8.4, 143.75), (7.31, 143.75), (7.47, 143.75), (3.67, 143.4), (5.12, 143.4), (7.3, 143.4), (7.32, 143.4), (7.51, 143.4), (8.41, 139.8), (7.47, 139.8), (8.4, 132.25), (7.31, 132.25), (7.47, 132.25), (5.12, 128.3), (7.51, 128.3), (7.3, 128.3), (7.51, 128.06), (7.32, 128.06), (7.3, 128.06), (7.32, 126.34), (8.4, 126.1), (8.41, 126.1), (7.31, 126.1), (8.41, 123.9), (7.47, 123.9), (5.12, 115.61), (7.32, 115.61), (5.12, 65.65), (7.3, 58.95), (7.32, 58.95), (3.67, 58.95).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(Nc1cccnc1)NC(CO)c1ccc(Cl)c(F)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "64921d77-3b10-47da-ab8a-cc543aa68ca1", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C(NOC1CCCCO1)c1ccccc1C(=O)c1ccccc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C19H19NO4\n\n1H NMR: \u03b4 7.87 (ddd, J = 7.77, 1.29, 0.53 Hz, 1H), 7.63 (ddd, J = 7.79, 7.73, 1.29 Hz, 1H), 7.62 (ddd, J = 7.79, 1.3, 0.53 Hz, 1H), 7.62 (ddd, J = 7.77, 7.73, 1.3 Hz, 1H), 7.57 (tt, J = 7.63, 1.49 Hz, 1H), 7.52 (dddd, J = 8.44, 1.63, 1.49, 0.45 Hz, 2H), 7.51 (dddd, J = 8.44, 7.63, 1.44, 0.45 Hz, 2H), 5.0 (dd, J = 10.26, 2.68 Hz, 1H), 3.77 (ddd, J = 10.26, 9.83, 2.69 Hz, 1H), 3.63 (ddd, J = 9.83, 2.91, 2.64 Hz, 1H), 1.92 (ddddd, J = 12.89, 10.26, 10.17, 3.48, 2.64 Hz, 1H), 1.86 (dddd, J = 14.46, 10.26, 10.17, 3.48 Hz, 1H), 1.86 (dddd, J = 14.46, 3.45, 2.68, 2.18 Hz, 1H), 1.61 (ddddd, J = 12.82, 10.17, 10.17, 3.45, 3.45 Hz, 1H), 1.53 (ddddd, J = 12.82, 3.48, 3.48, 2.18, 2.18 Hz, 1H), 1.51 (ddddd, J = 12.89, 3.45, 2.91, 2.69, 2.18 Hz, 1H).\n\n13C NMR: \u03b4 196.58 (1C, s), 165.7 (1C, s), 141.55 (1C, s), 137.04 (1C, s), 134.8 (1C, s), 132.55 (1C, s), 131.9 (1C, s), 129.92 (1C, s), 129.47 (2C, s), 128.88 (1C, s), 128.65 (1C, s), 128.4 (2C, s), 97.6 (1C, s), 62 (1C, s), 30.3 (1C, s), 25.3 (1C, s), 18.95 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.63, 7.62), (7.87, 7.62), (7.51, 7.52), (7.57, 7.51), (1.86, 5.0), (1.92, 3.77), (1.51, 3.77), (1.92, 3.63), (1.51, 3.63), (3.77, 3.63), (1.92, 1.61), (1.86, 1.61), (1.86, 1.53), (1.92, 1.53), (1.61, 1.53), (1.51, 1.53), (1.92, 1.51), (1.61, 1.51).\n\nHSQC (\u03b4H, \u03b4C): (7.62, 132.55), (7.57, 131.9), (7.63, 129.92), (7.52, 129.47), (7.62, 128.88), (7.87, 128.65), (7.51, 128.4), (5.0, 97.6), (3.77, 62), (3.63, 62), (1.86, 30.3), (1.92, 25.3), (1.51, 25.3), (1.61, 18.95), (1.53, 18.95).\n\nHMBC (\u03b4H, \u03b4C): (7.52, 196.58), (7.87, 196.58), (7.62, 165.7), (7.87, 141.55), (7.62, 141.55), (7.51, 137.04), (7.52, 137.04), (7.63, 134.8), (7.62, 134.8), (7.87, 134.8), (7.63, 132.55), (7.62, 132.55), (7.87, 132.55), (7.51, 131.9), (7.52, 131.9), (7.87, 129.92), (7.62, 129.92), (7.51, 129.47), (7.52, 129.47), (7.57, 129.47), (7.63, 128.88), (7.62, 128.88), (7.63, 128.65), (7.62, 128.65), (7.51, 128.4), (7.52, 128.4), (7.57, 128.4), (3.77, 97.6), (3.63, 97.6), (1.86, 97.6), (1.61, 97.6), (1.53, 97.6), (5.0, 62), (1.92, 62), (1.61, 62), (1.51, 62), (1.53, 62), (5.0, 30.3), (1.61, 30.3), (1.51, 30.3), (1.53, 30.3), (1.92, 30.3), (3.77, 25.3), (3.63, 25.3), (1.61, 25.3), (1.53, 25.3), (1.86, 25.3), (5.0, 18.95), (1.51, 18.95), (3.77, 18.95), (3.63, 18.95), (1.92, 18.95), (1.86, 18.95).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(NOC1CCCCO1)c1ccccc1C(=O)c1ccccc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "b3182e87-b80c-42d7-8492-81aad8c1d29d", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CC(NC(=O)CC(O)c1ccccc1)c1ccc(S(C)(=O)=O)c(F)c1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C18H20FNO4S\n\n1H NMR: \u03b4 7.98 (dd, J = 7.93, 0.53 Hz, 1H), 7.61 (dd, J = 1.75, 0.53 Hz, 1H), 7.6 (dd, J = 7.93, 1.75 Hz, 1H), 7.4 (dddd, J = 7.94, 7.69, 1.6, 0.55 Hz, 2H), 7.36 (dddd, J = 7.94, 1.24, 0.94, 0.55 Hz, 2H), 7.36 (tt, J = 7.69, 1.24 Hz, 1H), 5.1 (q, J = 6.71 Hz, 1H), 4.73 (dd, J = 4.16, 4.16 Hz, 1H), 3 (s, 3H), 2.73 (d, J = 4.16 Hz, 1H), 2.73 (d, J = 4.16 Hz, 1H), 1.49 (d, J = 6.71 Hz, 3H).\n\n13C NMR: \u03b4 169.9 (1C, s), 159.95 (1C, s), 142.8 (1C, s), 136.2 (1C, s), 135.6 (1C, s), 128.4 (2C, s), 128.3 (1C, s), 128.12 (1C, s), 126.59 (1C, s), 125.6 (2C, s), 115.61 (1C, s), 71.6 (1C, s), 49.3 (1C, s), 48.9 (1C, s), 44.2 (1C, s), 21.8 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.61, 7.6), (7.98, 7.6), (7.4, 7.36), (1.49, 5.1), (2.73, 4.73).\n\nHSQC (\u03b4H, \u03b4C): (7.4, 128.4), (7.6, 128.3), (7.36, 128.12), (7.98, 126.59), (7.36, 125.6), (7.61, 115.61), (4.73, 71.6), (5.1, 49.3), (2.73, 48.9), (3, 44.2), (1.49, 21.8).\n\nHMBC (\u03b4H, \u03b4C): (2.73, 169.9), (4.73, 169.9), (5.1, 169.9), (7.61, 159.95), (7.98, 159.95), (7.4, 142.8), (7.36, 142.8), (2.73, 142.8), (4.73, 142.8), (7.61, 136.2), (7.6, 136.2), (3, 136.2), (7.98, 136.2), (1.49, 135.6), (7.61, 135.6), (7.6, 135.6), (7.98, 135.6), (5.1, 135.6), (7.36, 128.4), (7.4, 128.4), (7.61, 128.3), (7.98, 128.3), (5.1, 128.3), (7.36, 128.12), (7.4, 128.12), (7.6, 126.59), (7.4, 125.6), (7.36, 125.6), (4.73, 125.6), (7.6, 115.61), (5.1, 115.61), (7.36, 71.6), (2.73, 71.6), (7.61, 49.3), (7.6, 49.3), (1.49, 49.3), (4.73, 48.9), (5.1, 21.8).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(NC(=O)CC(O)c1ccccc1)c1ccc(S(C)(=O)=O)c(F)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "abdfd290-a26f-4ac0-8b0d-68f162bc0eeb", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C(CCc1nc2ccccc2s1)NC1c2ccccc2CC1O", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C19H18N2O2S\n\n1H NMR: \u03b4 7.82 (ddd, J = 8.05, 1.55, 0.53 Hz, 1H), 7.71 (ddd, J = 7.54, 1.84, 0.53 Hz, 1H), 7.38 (ddd, J = 8.05, 7.54, 1.84 Hz, 1H), 7.32 (ddd, J = 7.54, 7.54, 1.55 Hz, 1H), 7.26 (ddd, J = 7.87, 7.61, 2.09 Hz, 1H), 7.19 (ddd, J = 7.9, 2.09, 0.55 Hz, 1H), 7.16 (ddd, J = 7.87, 1.69, 0.55 Hz, 1H), 7.06 (ddd, J = 7.9, 7.61, 1.69 Hz, 1H), 5.37 (d, J = 6.57 Hz, 1H), 4.28 (ddd, J = 8.07, 6.57, 6.57 Hz, 1H), 3.37 (dd, J = 6.05, 6.05 Hz, 1H), 3.37 (dd, J = 6.05, 6.05 Hz, 1H), 3.07 (dd, J = 15.77, 8.07 Hz, 1H), 3.04 (dd, J = 15.77, 6.57 Hz, 1H), 2.67 (dd, J = 6.05, 6.05 Hz, 1H), 2.67 (dd, J = 6.05, 6.05 Hz, 1H).\n\n13C NMR: \u03b4 174.5 (1C, s), 169.62 (1C, s), 152.88 (1C, s), 143.6 (1C, s), 139.97 (1C, s), 135.15 (1C, s), 128.7 (1C, s), 127.03 (1C, s), 126.2 (1C, s), 124.9 (1C, s), 124.8 (1C, s), 124.6 (1C, s), 122.45 (1C, s), 122.1 (1C, s), 72.06 (1C, s), 71.1 (1C, s), 39.06 (1C, s), 34.57 (1C, s), 25.71 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.38, 7.82), (7.32, 7.82), (7.38, 7.71), (7.32, 7.71), (7.38, 7.32), (7.06, 7.26), (7.06, 7.19), (7.26, 7.19), (7.06, 7.16), (7.26, 7.16), (4.28, 5.37), (3.07, 4.28), (3.04, 4.28), (2.67, 3.37), (3.07, 3.04).\n\nHSQC (\u03b4H, \u03b4C): (7.26, 128.7), (7.06, 127.03), (7.32, 126.2), (7.16, 124.9), (7.19, 124.8), (7.38, 124.6), (7.71, 122.45), (7.82, 122.1), (4.28, 72.06), (5.37, 71.1), (3.07, 39.06), (3.04, 39.06), (2.67, 34.57), (3.37, 25.71).\n\nHMBC (\u03b4H, \u03b4C): (5.37, 174.5), (3.37, 174.5), (2.67, 174.5), (3.37, 169.62), (2.67, 169.62), (7.82, 152.88), (7.71, 152.88), (7.32, 152.88), (3.07, 143.6), (3.04, 143.6), (4.28, 143.6), (7.06, 143.6), (5.37, 143.6), (7.16, 143.6), (7.19, 143.6), (3.07, 139.97), (3.04, 139.97), (4.28, 139.97), (5.37, 139.97), (7.26, 139.97), (7.16, 139.97), (7.19, 139.97), (7.38, 135.15), (7.82, 135.15), (7.71, 135.15), (7.06, 128.7), (7.16, 128.7), (7.19, 128.7), (7.16, 127.03), (7.19, 127.03), (7.26, 127.03), (7.38, 126.2), (7.71, 126.2), (7.82, 126.2), (3.07, 124.9), (3.04, 124.9), (7.06, 124.9), (7.26, 124.9), (5.37, 124.8), (7.06, 124.8), (7.26, 124.8), (7.71, 124.6), (7.82, 124.6), (7.32, 124.6), (7.32, 122.45), (7.38, 122.45), (7.32, 122.1), (7.38, 122.1), (5.37, 72.06), (3.07, 72.06), (3.04, 72.06), (7.19, 71.1), (3.07, 71.1), (3.04, 71.1), (4.28, 71.1), (7.16, 39.06), (4.28, 39.06), (5.37, 39.06), (3.37, 34.57), (2.67, 25.71).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(CCc1nc2ccccc2s1)NC1c2ccccc2CC1O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "cc741d92-443d-4eea-95e9-8e2a29125090", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "COc1ccc(CNC(=O)NC(CO)c2ccc(Cl)c(F)c2)cn1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C16H17ClFN3O3\n\n1H NMR: \u03b4 8.39 (dd, J = 1.88, 0.47 Hz, 1H), 7.69 (dd, J = 8.11, 1.88 Hz, 1H), 7.51 (dd, J = 8.05, 0.55 Hz, 1H), 7.32 (dd, J = 8.05, 0.94 Hz, 1H), 7.22 (dd, J = 0.94, 0.55 Hz, 1H), 6.65 (dd, J = 8.11, 0.47 Hz, 1H), 5.12 (dd, J = 5.36, 5.36 Hz, 1H), 4.46 (s, 1H), 4.46 (s, 1H), 3.67 (d, J = 5.36 Hz, 1H), 3.67 (d, J = 5.36 Hz, 1H), 3.45 (s, 3H).\n\n13C NMR: \u03b4 164.25 (1C, s), 158.56 (1C, s), 153.1 (1C, s), 149.3 (1C, s), 143.4 (1C, s), 134.94 (1C, s), 129.4 (1C, s), 128.3 (1C, s), 128.06 (1C, s), 126.34 (1C, s), 115.61 (1C, s), 110.55 (1C, s), 65.65 (1C, s), 58.95 (1C, s), 53.65 (1C, s), 43.72 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (8.39, 7.69), (7.51, 7.32), (7.69, 6.65), (5.12, 3.67).\n\nHSQC (\u03b4H, \u03b4C): (8.39, 149.3), (7.69, 129.4), (7.32, 128.3), (7.51, 126.34), (7.22, 115.61), (6.65, 110.55), (3.67, 65.65), (5.12, 58.95), (3.45, 53.65), (4.46, 43.72).\n\nHMBC (\u03b4H, \u03b4C): (8.39, 164.25), (3.45, 164.25), (6.65, 164.25), (7.69, 164.25), (7.22, 158.56), (7.51, 158.56), (4.46, 153.1), (5.12, 153.1), (7.69, 149.3), (4.46, 149.3), (3.67, 143.4), (5.12, 143.4), (7.51, 143.4), (7.22, 143.4), (7.32, 143.4), (8.39, 134.94), (4.46, 134.94), (6.65, 134.94), (7.69, 134.94), (8.39, 129.4), (4.46, 129.4), (6.65, 129.4), (5.12, 128.3), (7.51, 128.3), (7.22, 128.3), (7.51, 128.06), (7.22, 128.06), (7.32, 128.06), (7.32, 126.34), (5.12, 115.61), (7.32, 115.61), (7.69, 110.55), (5.12, 65.65), (7.22, 58.95), (7.32, 58.95), (3.67, 58.95), (8.39, 43.72), (7.69, 43.72).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "COc1ccc(CNC(=O)NC(CO)c2ccc(Cl)c(F)c2)cn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "1b8804c1-d279-422a-ad63-755bb021b922", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCCn1c(=O)c2ccccc2n(CC(=O)Nc2ccccc2)c1=O", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C19H19N3O3\n\n1H NMR: \u03b4 7.63 (ddd, J = 7.88, 1.41, 0.51 Hz, 1H), 7.6 (ddd, J = 8.14, 7.52, 1.41 Hz, 1H), 7.48 (dddd, J = 8.16, 1.47, 1.24, 0.54 Hz, 2H), 7.39 (ddd, J = 8.14, 1.39, 0.51 Hz, 1H), 7.34 (ddd, J = 7.88, 7.52, 1.39 Hz, 1H), 7.27 (dddd, J = 8.16, 7.76, 1.43, 0.54 Hz, 2H), 7.07 (tt, J = 7.76, 1.24 Hz, 1H), 4.66 (s, 2H), 3.85 (t, J = 6.97 Hz, 2H), 1.71 (tq, J = 6.97, 6.61 Hz, 2H), 0.96 (t, J = 6.61 Hz, 3H).\n\n13C NMR: \u03b4 169.1 (1C, s), 161.4 (1C, s), 152.5 (1C, s), 140.5 (1C, s), 138.07 (1C, s), 135.15 (1C, s), 129 (1C, s), 128.9 (2C, s), 126.75 (1C, s), 123.58 (1C, s), 120.2 (2C, s), 115.6 (1C, s), 115.2 (1C, s), 47.35 (1C, s), 42.6 (1C, s), 21 (1C, s), 11.15 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.6, 7.39), (7.6, 7.34), (7.63, 7.34), (7.07, 7.27), (7.48, 7.27), (3.85, 1.71), (1.71, 0.96).\n\nHSQC (\u03b4H, \u03b4C): (7.6, 135.15), (7.63, 129), (7.27, 128.9), (7.34, 126.75), (7.07, 123.58), (7.48, 120.2), (7.39, 115.2), (4.66, 47.35), (3.85, 42.6), (1.71, 21), (0.96, 11.15).\n\nHMBC (\u03b4H, \u03b4C): (4.66, 169.1), (7.63, 161.4), (3.85, 161.4), (3.85, 152.5), (4.66, 152.5), (4.66, 140.5), (7.6, 140.5), (7.63, 140.5), (7.39, 140.5), (7.48, 138.07), (7.27, 138.07), (7.63, 135.15), (7.39, 135.15), (7.34, 135.15), (7.6, 129), (7.34, 129), (7.07, 128.9), (7.48, 128.9), (7.27, 128.9), (7.6, 126.75), (7.63, 126.75), (7.39, 126.75), (7.48, 123.58), (7.27, 123.58), (7.07, 120.2), (7.48, 120.2), (7.27, 120.2), (7.63, 115.6), (7.39, 115.6), (7.34, 115.6), (7.6, 115.2), (7.34, 115.2), (1.71, 42.6), (0.96, 42.6), (3.85, 21), (0.96, 21), (3.85, 11.15), (1.71, 11.15).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCCn1c(=O)c2ccccc2n(CC(=O)Nc2ccccc2)c1=O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "5a432c2c-1004-45bc-b0b4-5b610100e81f", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "COc1cc(C=C2C(=O)NN(c3ccc(Br)cc3)C2=O)cc(OC)c1O", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C18H15BrN2O5\n\n1H NMR: \u03b4 8.47 (s, 1H), 7.57 (ddd, J = 8.2, 1.73, 0.55 Hz, 2H), 7.51 (ddd, J = 8.2, 1.47, 0.55 Hz, 2H), 7.25 (d, J = 1.79 Hz, 2H), 3.8 (s, 6H).\n\n13C NMR: \u03b4 171.5 (1C, s), 168.8 (1C, s), 147.2 (2C, s), 145.4 (1C, s), 136.95 (1C, s), 133.95 (1C, s), 131.94 (2C, s), 128.3 (1C, s), 125.95 (1C, s), 122.8 (2C, s), 116.9 (1C, s), 107.2 (2C, s), 56.4 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.51, 7.57).\n\nHSQC (\u03b4H, \u03b4C): (8.47, 145.4), (7.51, 131.94), (7.57, 122.8), (7.25, 107.2), (3.8, 56.4).\n\nHMBC (\u03b4H, \u03b4C): (8.47, 171.5), (8.47, 168.8), (3.8, 147.2), (7.25, 147.2), (7.25, 145.4), (7.25, 136.95), (7.51, 133.95), (7.57, 133.95), (7.51, 131.94), (7.57, 131.94), (8.47, 128.3), (7.25, 128.3), (8.47, 125.95), (7.51, 122.8), (7.57, 122.8), (7.51, 116.9), (7.57, 116.9), (8.47, 107.2), (7.25, 107.2).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "COc1cc(C=C2C(=O)NN(c3ccc(Br)cc3)C2=O)cc(OC)c1O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "04afcd88-6fad-4e42-8787-9751ef0ae26c", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "COC(=O)C(NC(=O)COc1ccc2cc(Br)ccc2c1)c1ccccc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C21H18BrNO4\n\n1H NMR: \u03b4 7.58 (dddd, J = 8.59, 1.46, 0.54, 0.48 Hz, 1H), 7.52 (ddd, J = 8.59, 1.58, 0.54 Hz, 1H), 7.48 (dddd, J = 8.19, 1.82, 1.24, 0.5 Hz, 2H), 7.46 (dddd, J = 8.9, 1.41, 0.54, 0.53 Hz, 1H), 7.46 (dddd, J = 8.19, 7.69, 1.41, 0.5 Hz, 2H), 7.4 (ddddd, J = 1.58, 1.41, 0.5, 0.48, 0.47 Hz, 1H), 7.38 (tt, J = 7.69, 1.82 Hz, 1H), 7.33 (ddddd, J = 1.46, 1.18, 0.54, 0.53, 0.47 Hz, 1H), 7.13 (ddd, J = 8.9, 1.18, 0.5 Hz, 1H), 6.11 (s, 1H), 4.53 (s, 1H), 4.53 (s, 1H), 3.72 (s, 3H).\n\n13C NMR: \u03b4 171.2 (1C, s), 169.1 (1C, s), 155.68 (1C, s), 136.3 (1C, s), 132.95 (1C, s), 129.8 (1C, s), 129.7 (1C, s), 129.6 (1C, s), 129 (2C, s), 128.53 (1C, s), 128.35 (1C, s), 128.12 (1C, s), 127.2 (2C, s), 119.1 (1C, s), 118.61 (1C, s), 107.1 (1C, s), 66.94 (1C, s), 56.5 (1C, s), 52.8 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.58, 7.52), (7.4, 7.52), (7.38, 7.48), (7.46, 7.48), (7.38, 7.46), (7.46, 7.13).\n\nHSQC (\u03b4H, \u03b4C): (7.4, 129.8), (7.52, 129.6), (7.46, 129), (7.46, 128.53), (7.58, 128.35), (7.38, 128.12), (7.48, 127.2), (7.13, 118.61), (7.33, 107.1), (4.53, 66.94), (6.11, 56.5), (3.72, 52.8).\n\nHMBC (\u03b4H, \u03b4C): (6.11, 171.2), (3.72, 171.2), (6.11, 169.1), (4.53, 169.1), (7.13, 155.68), (4.53, 155.68), (7.33, 155.68), (7.46, 155.68), (6.11, 136.3), (7.46, 136.3), (7.48, 136.3), (7.33, 132.95), (7.58, 132.95), (7.52, 132.95), (7.4, 132.95), (7.46, 132.95), (7.52, 129.8), (7.46, 129.8), (7.13, 129.7), (7.58, 129.7), (7.46, 129.7), (7.4, 129.7), (7.33, 129.7), (7.58, 129.6), (7.4, 129.6), (7.48, 129), (7.46, 129), (7.38, 129), (7.13, 128.53), (7.4, 128.53), (7.52, 128.35), (7.33, 128.35), (7.46, 128.12), (7.48, 128.12), (6.11, 127.2), (7.46, 127.2), (7.48, 127.2), (7.38, 127.2), (7.58, 119.1), (7.52, 119.1), (7.4, 119.1), (7.33, 118.61), (7.46, 118.61), (7.58, 107.1), (7.13, 107.1), (7.48, 56.5).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "COC(=O)C(NC(=O)COc1ccc2cc(Br)ccc2c1)c1ccccc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "7b910a65-e74b-4dfb-b441-5eca76056dea", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "COc1ccc(C(=O)N(CCc2ccccc2)Cc2ccc(C)s2)nn1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C20H21N3O2S\n\n1H NMR: \u03b4 8.38 (d, J = 8.26 Hz, 1H), 7.28 (d, J = 8.26 Hz, 1H), 7.28 (dddd, J = 7.83, 7.72, 1.81, 0.52 Hz, 2H), 7.2 (tt, J = 7.72, 1.29 Hz, 1H), 7.1 (dddd, J = 7.83, 1.29, 1.17, 0.52 Hz, 2H), 7.04 (d, J = 8.12 Hz, 1H), 7.0 (d, J = 8.12 Hz, 1H), 4.6 (s, 2H), 3.86 (s, 3H), 3.41 (t, J = 6.63 Hz, 2H), 2.84 (t, J = 6.63 Hz, 2H), 2.37 (s, 3H).\n\n13C NMR: \u03b4 168.6 (1C, s), 164.46 (1C, s), 148.4 (1C, s), 140.94 (1C, s), 138.58 (1C, s), 137.9 (1C, s), 128.5 (2C, s), 128.46 (2C, s), 127.2 (1C, s), 125.9 (1C, s), 125.02 (1C, s), 124.9 (1C, s), 110.55 (1C, s), 55.19 (1C, s), 54.3 (1C, s), 52.84 (1C, s), 35.3 (1C, s), 15.3 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (8.38, 7.28), (7.2, 7.28), (7.28, 7.1), (7.0, 7.04), (2.84, 3.41).\n\nHSQC (\u03b4H, \u03b4C): (7.28, 128.5), (7.1, 128.46), (7.2, 127.2), (7.04, 125.9), (8.38, 125.02), (7.0, 124.9), (7.28, 110.55), (3.86, 55.19), (4.6, 54.3), (3.41, 52.84), (2.84, 35.3), (2.37, 15.3).\n\nHMBC (\u03b4H, \u03b4C): (4.6, 168.6), (8.38, 168.6), (3.41, 168.6), (7.28, 164.46), (8.38, 164.46), (3.86, 164.46), (7.28, 148.4), (8.38, 148.4), (4.6, 140.94), (7.0, 140.94), (7.04, 140.94), (3.41, 138.58), (7.28, 138.58), (2.84, 138.58), (7.1, 138.58), (2.37, 137.9), (7.0, 137.9), (7.04, 137.9), (7.1, 128.5), (7.2, 128.5), (7.28, 128.5), (7.1, 128.46), (2.84, 128.46), (7.2, 128.46), (7.28, 128.46), (7.1, 127.2), (7.28, 127.2), (4.6, 125.9), (7.0, 125.9), (7.28, 125.02), (2.37, 124.9), (7.04, 124.9), (8.38, 110.55), (7.04, 54.3), (3.41, 54.3), (4.6, 52.84), (2.84, 52.84), (7.1, 35.3), (3.41, 35.3), (7.0, 15.3).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "COc1ccc(C(=O)N(CCc2ccccc2)Cc2ccc(C)s2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d29a3e89-daef-4cdc-8e50-5249c637131c", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCc1cc2cc(C)ccc2nc1SCC(=O)Nc1ccccc1OC", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C21H22N2O2S\n\n1H NMR: \u03b4 8.21 (ddd, J = 7.89, 0.44, 0.44 Hz, 1H), 7.82 (dd, J = 1.77, 0.44 Hz, 1H), 7.81 (dd, J = 7.89, 1.47 Hz, 1H), 7.64 (ddd, J = 1.77, 1.47, 0.44 Hz, 1H), 7.28 (ddd, J = 8.34, 1.14, 0.54 Hz, 1H), 7.14 (ddd, J = 8.34, 7.45, 1.36 Hz, 1H), 7.02 (ddd, J = 8.54, 7.45, 1.14 Hz, 1H), 6.86 (ddd, J = 8.54, 1.36, 0.54 Hz, 1H), 3.7 (s, 3H), 3.62 (s, 2H), 2.76 (q, J = 6.73 Hz, 2H), 2.29 (s, 3H), 1.14 (t, J = 6.73 Hz, 3H).\n\n13C NMR: \u03b4 167.19 (1C, s), 159.8 (1C, s), 148.43 (1C, s), 147.2 (1C, s), 136.6 (1C, s), 132.8 (1C, s), 132.43 (1C, s), 128.3 (1C, s), 127.6 (1C, s), 127.5 (1C, s), 126.42 (1C, s), 126.41 (1C, s), 124.13 (1C, s), 120.99 (1C, s), 120 (1C, s), 111 (1C, s), 56.05 (1C, s), 37.8 (1C, s), 24.3 (1C, s), 21.5 (1C, s), 14.41 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.64, 7.82), (8.21, 7.81), (7.14, 7.28), (7.02, 7.14), (6.86, 7.02), (2.76, 1.14).\n\nHSQC (\u03b4H, \u03b4C): (7.81, 132.8), (8.21, 128.3), (7.82, 126.42), (7.64, 126.41), (7.02, 124.13), (7.28, 120.99), (7.14, 120), (6.86, 111), (3.7, 56.05), (3.62, 37.8), (2.76, 24.3), (2.29, 21.5), (1.14, 14.41).\n\nHMBC (\u03b4H, \u03b4C): (3.62, 167.19), (2.76, 159.8), (7.82, 159.8), (3.62, 159.8), (7.28, 148.43), (3.7, 148.43), (6.86, 148.43), (7.02, 148.43), (8.21, 147.2), (7.64, 147.2), (7.81, 147.2), (7.82, 147.2), (8.21, 136.6), (2.29, 136.6), (7.81, 136.6), (7.64, 136.6), (8.21, 132.8), (2.29, 132.8), (7.64, 132.8), (1.14, 132.43), (2.76, 132.43), (7.82, 132.43), (7.81, 128.3), (8.21, 127.6), (7.64, 127.6), (7.82, 127.6), (7.14, 127.5), (7.28, 127.5), (6.86, 127.5), (2.76, 126.42), (7.64, 126.42), (2.29, 126.41), (7.81, 126.41), (7.82, 126.41), (7.14, 124.13), (7.28, 124.13), (6.86, 124.13), (7.14, 120.99), (7.02, 120.99), (7.28, 120), (6.86, 120), (7.02, 120), (7.02, 111), (7.14, 111), (1.14, 24.3), (7.82, 24.3), (7.64, 21.5), (7.81, 21.5), (2.76, 14.41).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCc1cc2cc(C)ccc2nc1SCC(=O)Nc1ccccc1OC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "1edb729e-9761-49da-8446-da4508534a5e", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "O=C(NCC(Cc1cccc(F)c1)N1CCCC1=O)c1ccc[nH]c1=O", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C19H20FN3O3\n\n1H NMR: \u03b4 7.88 (d, J = 1.92 Hz, 1H), 7.73 (d, J = 11.88 Hz, 1H), 7.33 (ddd, J = 8.11, 7.83, 0.55 Hz, 1H), 7.11 (ddd, J = 8.11, 1.18, 1.09 Hz, 1H), 7.06 (ddd, J = 1.39, 1.18, 0.55 Hz, 1H), 7.0 (ddd, J = 7.83, 1.39, 1.09 Hz, 1H), 6.6 (dd, J = 11.88, 1.92 Hz, 1H), 3.93 (dddd, J = 7.12, 7.12, 6.93, 6.93 Hz, 1H), 3.57 (ddd, J = 15.74, 7.95, 6.82 Hz, 1H), 3.47 (d, J = 6.93 Hz, 1H), 3.47 (d, J = 6.93 Hz, 1H), 3.29 (ddd, J = 15.74, 6.65, 1.67 Hz, 1H), 2.85 (d, J = 7.12 Hz, 1H), 2.85 (d, J = 7.12 Hz, 1H), 2.51 (ddd, J = 14.92, 7.91, 6.85 Hz, 1H), 2.43 (ddd, J = 14.92, 6.74, 1.73 Hz, 1H), 2.12 (ddddd, J = 13.27, 7.95, 7.91, 6.74, 6.65 Hz, 1H), 2.05 (ddddd, J = 13.27, 6.85, 6.82, 1.73, 1.67 Hz, 1H).\n\n13C NMR: \u03b4 173.1 (1C, s), 164.9 (1C, s), 164.75 (1C, s), 164.1 (1C, s), 146.11 (1C, s), 141.35 (1C, s), 132.81 (1C, s), 130.8 (1C, s), 127.51 (1C, s), 120.4 (1C, s), 117.3 (1C, s), 114.15 (1C, s), 108.54 (1C, s), 55.3 (1C, s), 49.96 (1C, s), 44.5 (1C, s), 34.8 (1C, s), 31.2 (1C, s), 17.3 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.33, 7.11), (7.33, 7.0), (7.73, 6.6), (7.88, 6.6), (3.47, 3.93), (2.05, 3.57), (2.12, 3.57), (2.05, 3.29), (2.12, 3.29), (3.57, 3.29), (3.93, 2.85), (2.05, 2.51), (2.12, 2.51), (2.05, 2.43), (2.12, 2.43), (2.51, 2.43), (2.05, 2.12).\n\nHSQC (\u03b4H, \u03b4C): (7.73, 146.11), (7.88, 141.35), (7.33, 130.8), (7.0, 127.51), (7.06, 117.3), (7.11, 114.15), (6.6, 108.54), (3.93, 55.3), (3.47, 49.96), (3.29, 44.5), (3.57, 44.5), (2.85, 34.8), (2.51, 31.2), (2.43, 31.2), (2.05, 17.3), (2.12, 17.3).\n\nHMBC (\u03b4H, \u03b4C): (3.93, 173.1), (2.05, 173.1), (2.12, 173.1), (2.51, 173.1), (2.43, 173.1), (3.57, 173.1), (3.29, 173.1), (7.73, 164.9), (7.88, 164.9), (3.47, 164.75), (7.88, 164.75), (7.33, 164.1), (7.06, 164.1), (7.11, 164.1), (7.88, 146.11), (6.6, 146.11), (7.73, 141.35), (6.6, 141.35), (3.93, 132.81), (2.85, 132.81), (7.33, 132.81), (7.06, 132.81), (7.0, 132.81), (7.11, 130.8), (7.0, 130.8), (2.85, 127.51), (7.06, 127.51), (7.11, 127.51), (7.33, 127.51), (7.88, 120.4), (6.6, 120.4), (2.85, 117.3), (7.11, 117.3), (7.0, 117.3), (7.33, 114.15), (7.06, 114.15), (7.0, 114.15), (7.73, 108.54), (7.88, 108.54), (3.29, 55.3), (2.85, 55.3), (3.57, 55.3), (3.47, 55.3), (2.85, 49.96), (3.93, 49.96), (3.93, 44.5), (2.05, 44.5), (2.12, 44.5), (2.51, 44.5), (2.43, 44.5), (7.06, 34.8), (7.0, 34.8), (3.93, 34.8), (3.47, 34.8), (3.29, 31.2), (2.05, 31.2), (2.12, 31.2), (3.57, 31.2), (3.57, 17.3), (3.29, 17.3), (2.51, 17.3), (2.43, 17.3).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(NCC(Cc1cccc(F)c1)N1CCCC1=O)c1ccc[nH]c1=O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e922144c-2634-4880-b157-e4f30effcd78", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CC1=C(C(=O)Nc2ccc(C)cc2)C(c2cccc3ccccc23)n2ncnc2N1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C24H21N5O\n\n1H NMR: \u03b4 7.97 (ddddd, J = 8.47, 1.78, 0.51, 0.49, 0.47 Hz, 1H), 7.92 (ddddd, J = 8.13, 2.72, 1.44, 0.51, 0.49 Hz, 1H), 7.92 (ddddd, J = 8.03, 2.72, 1.69, 0.51, 0.46 Hz, 1H), 7.9 (s, 1H), 7.58 (ddd, J = 8.47, 6.9, 1.69 Hz, 1H), 7.55 (ddd, J = 7.25, 1.44, 0.47 Hz, 1H), 7.51 (ddd, J = 8.13, 7.25, 0.46 Hz, 1H), 7.36 (dddd, J = 8.03, 6.9, 1.78, 0.51 Hz, 1H), 7.18 (ddd, J = 8.08, 1.34, 0.55 Hz, 2H), 7.08 (ddd, J = 8.08, 1.59, 0.55 Hz, 2H), 6.21 (s, 1H), 2.48 (s, 3H), 2.21 (s, 3H).\n\n13C NMR: \u03b4 164.75 (1C, s), 149.58 (1C, s), 149.26 (1C, s), 145.7 (1C, s), 133.75 (1C, s), 131.2 (1C, s), 129.6 (2C, s), 128.3 (1C, s), 127.9 (1C, s), 127.8 (1C, s), 127.5 (1C, s), 127.4 (1C, s), 127.37 (1C, s), 126.75 (1C, s), 126.73 (1C, s), 126.52 (1C, s), 124.1 (1C, s), 120.6 (2C, s), 99.5 (1C, s), 63.23 (1C, s), 21.4 (1C, s), 18.6 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.97, 7.58), (7.92, 7.58), (7.51, 7.55), (7.92, 7.51), (7.97, 7.36), (7.92, 7.36), (7.58, 7.36), (7.08, 7.18).\n\nHSQC (\u03b4H, \u03b4C): (7.9, 149.58), (7.08, 129.6), (7.92, 128.3), (7.51, 127.9), (7.55, 127.8), (7.92, 127.37), (7.58, 126.73), (7.36, 126.52), (7.97, 124.1), (7.18, 120.6), (6.21, 63.23), (2.21, 21.4), (2.48, 18.6).\n\nHMBC (\u03b4H, \u03b4C): (6.21, 164.75), (7.9, 149.26), (6.21, 149.26), (2.48, 145.7), (6.21, 145.7), (7.97, 133.75), (7.92, 133.75), (7.36, 133.75), (7.51, 133.75), (2.21, 131.2), (7.18, 131.2), (7.08, 131.2), (2.21, 129.6), (7.18, 129.6), (7.08, 129.6), (7.92, 128.3), (7.58, 128.3), (7.36, 128.3), (7.92, 127.9), (7.55, 127.9), (6.21, 127.8), (7.92, 127.8), (7.51, 127.8), (6.21, 127.5), (7.97, 127.5), (7.92, 127.5), (7.55, 127.5), (7.58, 127.5), (7.08, 127.4), (7.18, 127.4), (7.92, 127.37), (7.51, 127.37), (7.55, 127.37), (6.21, 126.75), (7.97, 126.75), (7.51, 126.75), (7.55, 126.75), (7.97, 126.73), (7.92, 126.73), (7.36, 126.73), (7.97, 126.52), (7.92, 126.52), (7.58, 126.52), (7.58, 124.1), (7.36, 124.1), (7.08, 120.6), (7.18, 120.6), (2.48, 99.5), (6.21, 99.5), (7.55, 63.23), (7.08, 21.4).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC1=C(C(=O)Nc2ccc(C)cc2)C(c2cccc3ccccc23)n2ncnc2N1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "c0aab512-1250-4635-a084-52adddb728b7", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCN(C1CCS(=O)(=O)C1)S(=O)(=O)c1c(C)cc(N2CCCCS2(=O)=O)cc1C", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C18H28N2O6S3\n\n1H NMR: \u03b4 7.31 (d, J = 1.31 Hz, 2H), 4.0 (dddd, J = 9.89, 9.57, 5.25, 4.13 Hz, 1H), 3.9 (ddd, J = 13.16, 2.98, 2.66 Hz, 1H), 3.85 (ddd, J = 13.16, 10.26, 2.62 Hz, 1H), 3.71 (q, J = 6.84 Hz, 1H), 3.71 (q, J = 6.84 Hz, 1H), 3.33 (ddd, J = 15.51, 8.13, 6.27 Hz, 1H), 3.29 (ddd, J = 15.52, 3.24, 2.41 Hz, 1H), 3.29 (dd, J = 15.5, 9.57 Hz, 1H), 3.29 (ddd, J = 15.51, 6.65, 1.5 Hz, 1H), 3.26 (dd, J = 15.5, 5.25 Hz, 1H), 3.05 (ddd, J = 15.52, 10.21, 2.36 Hz, 1H), 2.46 (ddddd, J = 13.79, 3.67, 3.24, 2.36, 2.11 Hz, 1H), 2.41 (dddd, J = 13.65, 6.27, 4.13, 1.5 Hz, 1H), 2.35 (dddd, J = 13.65, 9.89, 8.13, 6.65 Hz, 1H), 2.3 (s, 6H), 2.02 (ddddd, J = 15.76, 10.26, 10.12, 2.66, 2.11 Hz, 1H), 1.94 (ddddd, J = 13.79, 10.21, 10.12, 2.41, 2.09 Hz, 1H), 1.73 (ddddd, J = 15.76, 3.67, 2.98, 2.62, 2.09 Hz, 1H), 1.21 (dd, J = 6.84, 6.84 Hz, 3H).\n\n13C NMR: \u03b4 144.32 (1C, s), 139.3 (2C, s), 133.4 (1C, s), 116 (2C, s), 69.99 (1C, s), 56 (1C, s), 51.65 (1C, s), 50 (1C, s), 49.8 (1C, s), 44.62 (1C, s), 28.9 (1C, s), 25.5 (1C, s), 24.1 (1C, s), 22.8 (2C, s), 12.6 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (3.9, 3.85), (4.0, 3.29), (3.33, 3.29), (3.26, 3.29), (4.0, 3.26), (3.29, 3.05), (1.73, 2.46), (1.94, 2.46), (2.02, 2.46), (3.05, 2.46), (3.29, 2.46), (4.0, 2.41), (2.35, 2.41), (3.29, 2.41), (3.33, 2.41), (4.0, 2.35), (3.29, 2.35), (3.33, 2.35), (1.73, 2.02), (1.94, 2.02), (3.9, 2.02), (3.85, 2.02), (1.73, 1.94), (3.05, 1.94), (3.29, 1.94), (3.9, 1.73), (3.85, 1.73), (3.71, 1.21).\n\nHSQC (\u03b4H, \u03b4C): (7.31, 116), (4.0, 69.99), (3.26, 56), (3.29, 56), (3.29, 51.65), (3.33, 51.65), (3.9, 50), (3.85, 50), (3.05, 49.8), (3.29, 49.8), (3.71, 44.62), (2.35, 28.9), (2.41, 28.9), (1.73, 25.5), (2.02, 25.5), (1.94, 24.1), (2.46, 24.1), (2.3, 22.8), (1.21, 12.6).\n\nHMBC (\u03b4H, \u03b4C): (7.31, 144.32), (3.9, 144.32), (3.85, 144.32), (7.31, 139.3), (2.3, 139.3), (7.31, 133.4), (2.3, 133.4), (7.31, 116), (2.3, 116), (3.71, 69.99), (3.33, 69.99), (3.26, 69.99), (3.29, 69.99), (2.35, 69.99), (2.41, 69.99), (3.29, 56), (3.33, 56), (4.0, 56), (2.35, 56), (2.41, 56), (3.26, 51.65), (3.29, 51.65), (4.0, 51.65), (2.35, 51.65), (2.41, 51.65), (1.73, 50), (2.46, 50), (2.02, 50), (1.94, 50), (1.73, 49.8), (2.46, 49.8), (2.02, 49.8), (1.94, 49.8), (1.21, 44.62), (4.0, 44.62), (4.0, 28.9), (3.33, 28.9), (3.26, 28.9), (3.29, 28.9), (2.46, 25.5), (1.94, 25.5), (3.9, 25.5), (3.85, 25.5), (3.05, 25.5), (3.29, 25.5), (1.73, 24.1), (2.02, 24.1), (3.9, 24.1), (3.85, 24.1), (3.05, 24.1), (3.29, 24.1), (7.31, 22.8), (3.71, 12.6).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCN(C1CCS(=O)(=O)C1)S(=O)(=O)c1c(C)cc(N2CCCCS2(=O)=O)cc1C", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "8a50cdd1-dffd-4d19-8068-e377c29efad8", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cn1cnc2c1c(=O)n(CCCSc1nnc(N3CCCC3)n1C1CC1)c(=O)n2C", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C19H26N8O2S\n\n1H NMR: \u03b4 7.61 (s, 1H), 4.13 (dddd, J = 8.06, 8.06, 7.51, 7.51 Hz, 1H), 3.84 (t, J = 6.97 Hz, 2H), 3.74 (s, 3H), 3.41 (ddd, J = 14.61, 7.26, 3.96 Hz, 4H), 3.32 (s, 3H), 3.3 (t, J = 6.82 Hz, 2H), 1.99 (ddddd, J = 12.16, 7.42, 7.35, 3.87, 3.5 Hz, 4H), 1.87 (tt, J = 6.97, 6.82 Hz, 2H), 0.94 (dddd, J = 13.18, 8.06, 7.79, 7.51 Hz, 2H), 0.94 (dddd, J = 13.18, 8.06, 7.79, 7.51 Hz, 2H).\n\n13C NMR: \u03b4 159 (1C, s), 156.5 (1C, s), 151.66 (1C, s), 151 (1C, s), 143.38 (1C, s), 138.15 (1C, s), 109.9 (1C, s), 50 (2C, s), 49.9 (1C, s), 41.1 (1C, s), 34.45 (1C, s), 33.57 (1C, s), 29.8 (1C, s), 29.4 (1C, s), 25.3 (2C, s), 7.2 (2C, s).\n\nCOSY (\u03b4H, \u03b4H): (0.94, 4.13), (1.87, 3.84), (1.99, 3.41), (1.87, 3.3).\n\nHSQC (\u03b4H, \u03b4C): (7.61, 143.38), (3.41, 50), (4.13, 49.9), (3.84, 41.1), (3.3, 34.45), (3.74, 33.57), (3.32, 29.8), (1.87, 29.4), (1.99, 25.3), (0.94, 7.2).\n\nHMBC (\u03b4H, \u03b4C): (4.13, 159), (3.3, 159), (3.84, 156.5), (7.61, 151.66), (3.32, 151.66), (3.32, 151), (3.84, 151), (3.74, 143.38), (4.13, 138.15), (3.41, 138.15), (3.74, 109.9), (7.61, 109.9), (3.41, 50), (1.99, 50), (0.94, 49.9), (3.3, 41.1), (1.87, 41.1), (3.84, 34.45), (1.87, 34.45), (7.61, 33.57), (3.3, 29.4), (3.84, 29.4), (1.99, 25.3), (3.41, 25.3), (4.13, 7.2), (0.94, 7.2).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cn1cnc2c1c(=O)n(CCCSc1nnc(N3CCCC3)n1C1CC1)c(=O)n2C", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "7df58acc-c832-4c9d-9e4f-ed62500d1592", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "Cc1cc(C)cc(OCn2ccc(C(=O)Nc3c(C(=O)N(C)C)nn(C)c3C)n2)c1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C21H26N6O3\n\n1H NMR: \u03b4 7.93 (d, J = 4.1 Hz, 1H), 6.88 (t, J = 2.59 Hz, 1H), 6.64 (dd, J = 2.75, 2.59 Hz, 2H), 6.28 (d, J = 4.1 Hz, 1H), 5.63 (s, 2H), 3.65 (s, 3H), 2.64 (s, 6H), 2.36 (s, 3H), 2.31 (s, 6H).\n\n13C NMR: \u03b4 164.15 (1C, s), 160.8 (1C, s), 160.1 (1C, s), 144.45 (1C, s), 143.45 (1C, s), 139.6 (2C, s), 136.5 (1C, s), 136.3 (1C, s), 126.35 (1C, s), 123.9 (1C, s), 109.5 (1C, s), 107.5 (2C, s), 74.9 (1C, s), 36.9 (1C, s), 36.1 (2C, s), 21.3 (2C, s), 11.2 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (6.28, 7.93), (6.64, 6.88).\n\nHSQC (\u03b4H, \u03b4C): (6.88, 126.35), (7.93, 123.9), (6.28, 109.5), (6.64, 107.5), (5.63, 74.9), (3.65, 36.9), (2.64, 36.1), (2.31, 21.3), (2.36, 11.2).\n\nHMBC (\u03b4H, \u03b4C): (2.64, 164.15), (6.28, 160.8), (5.63, 160.1), (6.64, 160.1), (7.93, 143.45), (6.28, 143.45), (2.31, 139.6), (6.64, 139.6), (6.88, 139.6), (2.36, 136.5), (3.65, 136.3), (2.36, 136.3), (2.31, 126.35), (6.64, 126.35), (5.63, 123.9), (6.28, 123.9), (7.93, 109.5), (2.31, 107.5), (6.64, 107.5), (6.88, 107.5), (7.93, 74.9), (2.64, 36.1), (6.64, 21.3), (6.88, 21.3).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1cc(C)cc(OCn2ccc(C(=O)Nc3c(C(=O)N(C)C)nn(C)c3C)n2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "033bbcf5-3985-4edc-9488-b1f92a766f75", "question_category": "nmr_elucidation", "sub_category": "zinc_2d", "smiles": "CCC(=O)Oc1ccc(C2Nc3ccccc3NC3=C2C(=O)CC(C)(C)C3)cc1", "prompt": "Write the SMILES string of the molecule consistent with this data.\n\nFormula: C24H26N2O3\n\n1H NMR: \u03b4 7.17 (ddd, J = 7.96, 1.42, 0.55 Hz, 2H), 7.09 (ddd, J = 7.96, 1.0, 0.55 Hz, 2H), 7.06 (ddd, J = 7.88, 7.66, 1.24 Hz, 1H), 7.02 (ddd, J = 8.03, 7.66, 1.11 Hz, 1H), 6.95 (ddd, J = 8.03, 1.24, 0.53 Hz, 1H), 6.84 (ddd, J = 7.88, 1.11, 0.53 Hz, 1H), 5.37 (s, 1H), 2.6 (d, J = 13.98 Hz, 1H), 2.47 (d, J = 13.98 Hz, 1H), 2.43 (q, J = 7.34 Hz, 1H), 2.43 (q, J = 7.34 Hz, 1H), 2.18 (d, J = 18.2 Hz, 1H), 2.18 (d, J = 18.2 Hz, 1H), 1.06 (dd, J = 7.34, 7.34 Hz, 3H), 1.0 (s, 3H), 1.0 (s, 3H).\n\n13C NMR: \u03b4 198.8 (1C, s), 172.8 (1C, s), 153.1 (1C, s), 150.5 (1C, s), 139.2 (1C, s), 139.05 (1C, s), 138.9 (1C, s), 129.4 (1C, s), 129.4 (1C, s), 128.6 (1C, s), 128.3 (2C, s), 124.9 (1C, s), 121.25 (1C, s), 120.7 (1C, s), 114.57 (2C, s), 50.7 (1C, s), 45.8 (1C, s), 32.6 (1C, s), 28.1 (1C, s), 28.1 (1C, s), 27.7 (1C, s), 9 (1C, s).\n\nCOSY (\u03b4H, \u03b4H): (7.09, 7.17), (7.02, 7.06), (6.95, 7.02), (7.06, 6.84), (2.47, 2.6), (1.06, 2.43).\n\nHSQC (\u03b4H, \u03b4C): (7.02, 129.4), (7.06, 129.4), (7.09, 128.3), (5.37, 124.9), (6.95, 121.25), (6.84, 120.7), (7.17, 114.57), (2.18, 50.7), (2.47, 45.8), (2.6, 45.8), (1.0, 28.1), (2.43, 27.7), (1.06, 9).\n\nHMBC (\u03b4H, \u03b4C): (5.37, 198.8), (2.18, 198.8), (1.06, 172.8), (2.43, 172.8), (7.09, 153.1), (7.17, 153.1), (5.37, 150.5), (2.47, 150.5), (2.6, 150.5), (5.37, 139.2), (6.84, 139.2), (6.95, 139.2), (7.06, 139.2), (5.37, 139.05), (7.17, 139.05), (7.09, 139.05), (6.84, 138.9), (6.95, 138.9), (7.02, 138.9), (6.84, 129.4), (6.95, 129.4), (7.02, 129.4), (7.06, 129.4), (5.37, 128.6), (2.18, 128.6), (2.47, 128.6), (2.6, 128.6), (5.37, 128.3), (7.17, 128.3), (7.09, 128.3), (7.09, 124.9), (7.06, 121.25), (7.02, 121.25), (7.06, 120.7), (7.02, 120.7), (7.09, 114.57), (7.17, 114.57), (1.0, 50.7), (2.47, 50.7), (2.6, 50.7), (1.0, 45.8), (2.18, 45.8), (1.0, 32.6), (2.18, 32.6), (2.47, 32.6), (2.6, 32.6), (1.0, 28.1), (2.18, 28.1), (2.6, 28.1), (2.47, 28.1), (1.06, 27.7), (2.43, 9).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCC(=O)Oc1ccc(C2Nc3ccccc3NC3=C2C(=O)CC(C)(C)C3)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "cbfe1b13-aadb-40e4-838d-388c8878e3ee", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Nc1nnc(SC(F)F)s1", "smiles_random": "S(c1sc(N)nn1)C(F)F", "carbon_count": 3}, "prompt": "How many carbon atoms are in the molecule:\n\nS(c1sc(N)nn1)C(F)F\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "aa5dfac0-35ed-40c5-a410-d06137f8ebc2", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "N=S(N)c1cnc(N)s1", "smiles_random": "n1c(sc(S(N)=N)c1)N", "carbon_count": 3}, "prompt": "How many carbon atoms are in the molecule:\n\nn1c(sc(S(N)=N)c1)N\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3bbd5b40-755a-4bc4-9939-7914e7f7a863", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cn1nccc1I", "smiles_random": "c1cc(I)n(n1)C", "carbon_count": 4}, "prompt": "How many carbon atoms are in the molecule:\n\nc1cc(I)n(n1)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "8dacd234-3f02-4a31-ba36-af6df1d37236", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=C1NC(=O)C(F)(F)C(O)N1", "smiles_random": "FC1(C(O)NC(NC1=O)=O)F", "carbon_count": 4}, "prompt": "How many carbon atoms are in the molecule:\n\nFC1(C(O)NC(NC1=O)=O)F\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "04542126-dd33-4178-9b5b-145d18d400c5", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=NNc1ncc(Cl)cc1Cl", "smiles_random": "Clc1cc(Cl)cnc1NN=O", "carbon_count": 5}, "prompt": "How many carbon atoms are in the molecule:\n\nClc1cc(Cl)cnc1NN=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b4271510-114b-4df0-bf3e-8b1816fb1758", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1nc(N)nc(C(Cl)(Cl)Cl)n1", "smiles_random": "n1c(nc(N)nc1C)C(Cl)(Cl)Cl", "carbon_count": 5}, "prompt": "How many carbon atoms are in the molecule:\n\nn1c(nc(N)nc1C)C(Cl)(Cl)Cl\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3b031554-f22a-4429-a3ec-fa8d87095af2", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Fc1cc(F)c(F)c(I)c1", "smiles_random": "Ic1c(c(cc(c1)F)F)F", "carbon_count": 6}, "prompt": "How many carbon atoms are in the molecule:\n\nIc1c(c(cc(c1)F)F)F\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d82ac4af-cef7-4de5-a1fc-e74fc74c3bc2", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=S1(=O)CC(O)C(n2cnnc2)C1", "smiles_random": "C1C(C(CS1(=O)=O)O)n1cnnc1", "carbon_count": 6}, "prompt": "How many carbon atoms are in the molecule:\n\nC1C(C(CS1(=O)=O)O)n1cnnc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d6fcb801-da1e-4bc9-9485-f995e48b24e2", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cn1nnnc1SCC(O)COCCO", "smiles_random": "C(C(O)COCCO)Sc1nnnn1C", "carbon_count": 7}, "prompt": "How many carbon atoms are in the molecule:\n\nC(C(O)COCCO)Sc1nnnn1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "857f2284-0d5f-4539-8efd-0c8a3427a14d", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "N#CC1=CC(N)(Cl)CC=C1", "smiles_random": "C1(C=CCC(C=1)(Cl)N)C#N", "carbon_count": 7}, "prompt": "How many carbon atoms are in the molecule:\n\nC1(C=CCC(C=1)(Cl)N)C#N\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b3b89e21-7c6f-4a1a-a012-34848480bea6", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CNC(=O)NC(=O)C(C)n1cnnc1C#N", "smiles_random": "N(C(NC(=O)C(n1cnnc1C#N)C)=O)C", "carbon_count": 8}, "prompt": "How many carbon atoms are in the molecule:\n\nN(C(NC(=O)C(n1cnnc1C#N)C)=O)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "99741479-b3ce-40dc-8d2e-4096d974c0e8", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC#Cc1n[nH]c2ncnc(N)c12", "smiles_random": "c1nc(c2c(C#CC)n[nH]c2n1)N", "carbon_count": 8}, "prompt": "How many carbon atoms are in the molecule:\n\nc1nc(c2c(C#CC)n[nH]c2n1)N\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ebc0377e-13b3-4a4f-a554-128eeb44279e", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "c1cn2ccc(C3CC3)nc2n1", "smiles_random": "n1ccn2c1nc(cc2)C1CC1", "carbon_count": 9}, "prompt": "How many carbon atoms are in the molecule:\n\nn1ccn2c1nc(cc2)C1CC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "475ff158-316f-415e-9fd2-91dfcb499a8d", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "COC(=O)C(CO)NC(=O)NC1CCOC1", "smiles_random": "O1CCC(C1)NC(NC(C(OC)=O)CO)=O", "carbon_count": 9}, "prompt": "How many carbon atoms are in the molecule:\n\nO1CCC(C1)NC(NC(C(OC)=O)CO)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "6ec46160-523d-4d3b-aea8-3d5a858d949f", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Clc1ncc(Cl)c(NCC2CCOCC2)n1", "smiles_random": "C1CC(CNc2nc(Cl)ncc2Cl)CCO1", "carbon_count": 10}, "prompt": "How many carbon atoms are in the molecule:\n\nC1CC(CNc2nc(Cl)ncc2Cl)CCO1\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "441ad391-8844-468d-9c6d-5191fdd8f986", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=C(c1ccsc1)c1ccc(F)cn1", "smiles_random": "c1c(F)ccc(n1)C(=O)c1cscc1", "carbon_count": 10}, "prompt": "How many carbon atoms are in the molecule:\n\nc1c(F)ccc(n1)C(=O)c1cscc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0ba49457-5a65-46e6-bac7-977cfac5285f", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(=O)n1c(CC#N)nc2c1c(=O)n(C)c(=O)n2C", "smiles_random": "c12n(C(=O)C)c(CC#N)nc2n(C)c(n(C)c1=O)=O", "carbon_count": 11}, "prompt": "How many carbon atoms are in the molecule:\n\nc12n(C(=O)C)c(CC#N)nc2n(C)c(n(C)c1=O)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ad5a008e-b19c-4824-b5b3-75f85b5c4288", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1cc(S(=O)(=O)N2CCCC2CO)sc1C", "smiles_random": "OCC1CCCN1S(=O)(c1cc(C)c(s1)C)=O", "carbon_count": 11}, "prompt": "How many carbon atoms are in the molecule:\n\nOCC1CCCN1S(=O)(c1cc(C)c(s1)C)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "84ecd115-8c46-41c3-b4ee-35e08dc84ffa", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=C(NCc1nnc2n1CCC2)Nc1nnc(C2CC2)s1", "smiles_random": "c12CCCn2c(nn1)CNC(=O)Nc1sc(C2CC2)nn1", "carbon_count": 12}, "prompt": "How many carbon atoms are in the molecule:\n\nc12CCCn2c(nn1)CNC(=O)Nc1sc(C2CC2)nn1\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b8557eeb-1968-4110-8cf0-b6e3b2e0cac4", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1ccc(NC(=O)NCCc2nc(C(F)(F)F)cs2)s1", "smiles_random": "n1c(csc1CCNC(Nc1ccc(s1)C)=O)C(F)(F)F", "carbon_count": 12}, "prompt": "How many carbon atoms are in the molecule:\n\nn1c(csc1CCNC(Nc1ccc(s1)C)=O)C(F)(F)F\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "acad01ec-e4b7-4032-a3e1-eb3694e5fdfc", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCSCCC(C)NC(=O)NC1CCCC1C(N)=O", "smiles_random": "N(C(CCSCC)C)C(NC1C(C(N)=O)CCC1)=O", "carbon_count": 13}, "prompt": "How many carbon atoms are in the molecule:\n\nN(C(CCSCC)C)C(NC1C(C(N)=O)CCC1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "268dcf87-5fb5-4906-8f76-8a852e0ed75d", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCOC(=O)C(C)(C)n1cc(Nc2snc(Cl)c2C#N)cn1", "smiles_random": "C(C(C)(n1ncc(c1)Nc1c(C#N)c(ns1)Cl)C)(=O)OCC", "carbon_count": 13}, "prompt": "How many carbon atoms are in the molecule:\n\nC(C(C)(n1ncc(c1)Nc1c(C#N)c(ns1)Cl)C)(=O)OCC\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "7d054445-67c8-4e03-ba1e-050903bd32c3", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1cc(F)cc(C(=O)NNC(=O)c2cc(Br)cn2C)c1", "smiles_random": "c1(C(NNC(=O)c2n(C)cc(c2)Br)=O)cc(F)cc(c1)C", "carbon_count": 14}, "prompt": "How many carbon atoms are in the molecule:\n\nc1(C(NNC(=O)c2n(C)cc(c2)Br)=O)cc(F)cc(c1)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b7293502-845d-4f51-988d-b17468ec427d", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1cc(F)c(C(=O)NC(C)CC(C)C)cc1S(N)(=O)=O", "smiles_random": "c1c(c(cc(c1S(=O)(N)=O)C)F)C(NC(C)CC(C)C)=O", "carbon_count": 14}, "prompt": "How many carbon atoms are in the molecule:\n\nc1c(c(cc(c1S(=O)(N)=O)C)F)C(NC(C)CC(C)C)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f0f4b402-f21c-4893-891f-eceab8211bb2", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCn1cc(C(=O)Nc2cc(C(=O)N(C)C)ccc2F)cn1", "smiles_random": "CN(C)C(=O)c1cc(c(F)cc1)NC(c1cnn(CC)c1)=O", "carbon_count": 15}, "prompt": "How many carbon atoms are in the molecule:\n\nCN(C)C(=O)c1cc(c(F)cc1)NC(c1cnn(CC)c1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "76473fc1-53b7-4e5d-a6c1-590d12604e71", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CSc1nsc(NC(=O)c2cccc(CN3CCOCC3)c2)n1", "smiles_random": "n1c(SC)nc(NC(c2cccc(c2)CN2CCOCC2)=O)s1", "carbon_count": 15}, "prompt": "How many carbon atoms are in the molecule:\n\nn1c(SC)nc(NC(c2cccc(c2)CN2CCOCC2)=O)s1\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "fbe1dd94-50f0-4c9c-9ad3-933dabaea3db", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(C)(C)OC(=O)N1CCC(C)(c2nc(-c3cnccn3)no2)C1", "smiles_random": "C(OC(N1CC(CC1)(C)c1onc(n1)-c1cnccn1)=O)(C)(C)C", "carbon_count": 16}, "prompt": "How many carbon atoms are in the molecule:\n\nC(OC(N1CC(CC1)(C)c1onc(n1)-c1cnccn1)=O)(C)(C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4e38eb74-c3e8-4c58-af45-46eec5f15112", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCCc1cc(NC(=O)N(CC)C2CCCCC2)n(C)n1", "smiles_random": "O=C(Nc1n(nc(c1)CCC)C)N(C1CCCCC1)CC", "carbon_count": 16}, "prompt": "How many carbon atoms are in the molecule:\n\nO=C(Nc1n(nc(c1)CCC)C)N(C1CCCCC1)CC\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3c6435ce-c50d-4ce7-a60b-d21ccae3275c", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC=CC(=O)Nc1cc(-c2cn3cccnc3n2)ccc1C", "smiles_random": "n1c2nc(cn2ccc1)-c1cc(NC(=O)C=CC)c(cc1)C", "carbon_count": 17}, "prompt": "How many carbon atoms are in the molecule:\n\nn1c2nc(cn2ccc1)-c1cc(NC(=O)C=CC)c(cc1)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "2e8d5767-0951-4d8d-b85a-a2edbd4707b6", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(=O)Nc1ccc(SCC(=O)Nc2ccc(C(C)C)cc2)nn1", "smiles_random": "c1cc(SCC(Nc2ccc(C(C)C)cc2)=O)nnc1NC(=O)C", "carbon_count": 17}, "prompt": "How many carbon atoms are in the molecule:\n\nc1cc(SCC(Nc2ccc(C(C)C)cc2)=O)nnc1NC(=O)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d3e441b0-9fe3-462c-bfc6-c76a1b5cc31f", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCOc1ccccc1NC(=O)c1csc(Nc2ccccc2)n1", "smiles_random": "c1cc(NC(c2csc(n2)Nc2ccccc2)=O)c(cc1)OCC", "carbon_count": 18}, "prompt": "How many carbon atoms are in the molecule:\n\nc1cc(NC(c2csc(n2)Nc2ccccc2)=O)c(cc1)OCC\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "210531cb-d7a2-4d20-9397-4480f59692cd", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(C)Oc1ccc(NC(=O)C(=O)NC2CCCC2(C)C)c(F)c1", "smiles_random": "CC(Oc1cc(c(NC(C(=O)NC2CCCC2(C)C)=O)cc1)F)C", "carbon_count": 18}, "prompt": "How many carbon atoms are in the molecule:\n\nCC(Oc1cc(c(NC(C(=O)NC2CCCC2(C)C)=O)cc1)F)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "8be913dd-737b-4b5a-a31f-69be72da273b", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(NC(=O)NCc1cc(=O)[nH]c2ccccc12)C1CCCCC1", "smiles_random": "c1(c2c(cccc2)[nH]c(c1)=O)CNC(NC(C)C1CCCCC1)=O", "carbon_count": 19}, "prompt": "How many carbon atoms are in the molecule:\n\nc1(c2c(cccc2)[nH]c(c1)=O)CNC(NC(C)C1CCCCC1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "bb5cc5d9-b967-4225-89c8-1e7a620b6721", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(=O)NC1CCN(C(=O)c2cccc(-c3noc(C4CC4)n3)c2)CC1", "smiles_random": "C(=O)(C)NC1CCN(CC1)C(=O)c1cccc(c1)-c1noc(C2CC2)n1", "carbon_count": 19}, "prompt": "How many carbon atoms are in the molecule:\n\nC(=O)(C)NC1CCN(CC1)C(=O)c1cccc(c1)-c1noc(C2CC2)n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b4c8fdbb-3d75-4e32-a068-9ba254d24fd8", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=C(NNC(=O)c1c[nH]c2ccccc2c1=O)c1ccc(S(=O)(=O)NC2CC2)cc1", "smiles_random": "c12ccccc1[nH]cc(c2=O)C(NNC(=O)c1ccc(S(NC2CC2)(=O)=O)cc1)=O", "carbon_count": 20}, "prompt": "How many carbon atoms are in the molecule:\n\nc12ccccc1[nH]cc(c2=O)C(NNC(=O)c1ccc(S(NC2CC2)(=O)=O)cc1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "02fc1e4f-4714-4853-98db-f1b16a90289d", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CSc1ncccc1C(=O)N1CCCc2cc(S(=O)(=O)N3CCCC3)ccc21", "smiles_random": "C1CCCN1S(=O)(c1cc2c(cc1)N(CCC2)C(=O)c1c(nccc1)SC)=O", "carbon_count": 20}, "prompt": "How many carbon atoms are in the molecule:\n\nC1CCCN1S(=O)(c1cc2c(cc1)N(CCC2)C(=O)c1c(nccc1)SC)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "196d962c-e816-4532-b6b0-98fbfa8a1da7", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(C)Oc1ccc(CCNC(=O)NC2c3ccccc3CC2O)cc1", "smiles_random": "OC1Cc2c(cccc2)C1NC(=O)NCCc1ccc(cc1)OC(C)C", "carbon_count": 21}, "prompt": "How many carbon atoms are in the molecule:\n\nOC1Cc2c(cccc2)C1NC(=O)NCCc1ccc(cc1)OC(C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 21, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "85627a53-52f8-47ab-a8e8-bbb5fdef9b35", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1c(C#N)c(NC(=O)CN2CC(C)OC(C)C2)n(-c2ccccc2)c1C", "smiles_random": "O1C(C)CN(CC(=O)Nc2n(c(C)c(C)c2C#N)-c2ccccc2)CC1C", "carbon_count": 21}, "prompt": "How many carbon atoms are in the molecule:\n\nO1C(C)CN(CC(=O)Nc2n(c(C)c(C)c2C#N)-c2ccccc2)CC1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 21, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f8d7990c-769d-43ab-9698-12a3f142edef", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=C(Nc1cccc(-c2nnco2)c1)c1cn(-c2ccccc2)nc1-c1cccs1", "smiles_random": "c1nnc(o1)-c1cccc(NC(c2cn(-c3ccccc3)nc2-c2cccs2)=O)c1", "carbon_count": 22}, "prompt": "How many carbon atoms are in the molecule:\n\nc1nnc(o1)-c1cccc(NC(c2cn(-c3ccccc3)nc2-c2cccs2)=O)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 22, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "cdcb32a9-ac2a-4513-a6d1-acfdf66f96a8", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1cccc(C)c1OCC(=O)Nc1cccc(C(=O)NCC2CCCO2)c1", "smiles_random": "C1C(CNC(c2cccc(NC(=O)COc3c(C)cccc3C)c2)=O)OCC1", "carbon_count": 22}, "prompt": "How many carbon atoms are in the molecule:\n\nC1C(CNC(c2cccc(NC(=O)COc3c(C)cccc3C)c2)=O)OCC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 22, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "65695546-735a-4039-9337-fb2cbdd4f016", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCNC(=O)C(C#N)=Cc1cn(-c2ccccc2)nc1-c1ccc(OCC)c(Cl)c1", "smiles_random": "C(C)Oc1ccc(cc1Cl)-c1nn(cc1C=C(C#N)C(NCC)=O)-c1ccccc1", "carbon_count": 23}, "prompt": "How many carbon atoms are in the molecule:\n\nC(C)Oc1ccc(cc1Cl)-c1nn(cc1C=C(C#N)C(NCC)=O)-c1ccccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 23, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "e99d09cf-3de9-4336-bbce-544eadcf7e08", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1nnc(C2Cc3ccccc3CN2Cc2ccccc2N2CCOCC2)o1", "smiles_random": "C1COCCN1c1ccccc1CN1Cc2c(CC1c1nnc(o1)C)cccc2", "carbon_count": 23}, "prompt": "How many carbon atoms are in the molecule:\n\nC1COCCN1c1ccccc1CN1Cc2c(CC1c1nnc(o1)C)cccc2\n\nGive your answer as an integer. Do not write any comments.", "answer": 23, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "7c344a3e-0f6c-4b35-a1d4-3dd0dc377a6e", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "COc1ccc(NC(=O)c2ccccc2NC(=O)C(C)=Cc2ccccc2)cc1", "smiles_random": "c1ccc(NC(C(=Cc2ccccc2)C)=O)c(c1)C(=O)Nc1ccc(OC)cc1", "carbon_count": 24}, "prompt": "How many carbon atoms are in the molecule:\n\nc1ccc(NC(C(=Cc2ccccc2)C)=O)c(c1)C(=O)Nc1ccc(OC)cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 24, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "30932029-a08e-4346-9dbc-ff3de16a7968", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1ccc(C(=O)NCCc2nc3ccccc3n2CC(=O)N2CCCCC2)cc1", "smiles_random": "c1ccc2nc(CCNC(=O)c3ccc(cc3)C)n(c2c1)CC(=O)N1CCCCC1", "carbon_count": 24}, "prompt": "How many carbon atoms are in the molecule:\n\nc1ccc2nc(CCNC(=O)c3ccc(cc3)C)n(c2c1)CC(=O)N1CCCCC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 24, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "40fea15b-d967-407f-a8d6-7670c257c021", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "Cc1ccccc1C(C#N)NC(=O)CC(NC(=O)c1ccccc1)c1ccccc1", "smiles_random": "c1cc(C(NC(=O)c2ccccc2)CC(=O)NC(C#N)c2c(cccc2)C)ccc1", "carbon_count": 25}, "prompt": "How many carbon atoms are in the molecule:\n\nc1cc(C(NC(=O)c2ccccc2)CC(=O)NC(C#N)c2c(cccc2)C)ccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 25, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ed2c5927-3bf3-4ed5-aa46-8e8d7dff2dd9", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "COc1ccccc1N1CCN(C(=O)c2ccccc2SCc2ccccc2)CC1", "smiles_random": "C(c1ccccc1)Sc1c(C(=O)N2CCN(CC2)c2ccccc2OC)cccc1", "carbon_count": 25}, "prompt": "How many carbon atoms are in the molecule:\n\nC(c1ccccc1)Sc1c(C(=O)N2CCN(CC2)c2ccccc2OC)cccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 25, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "40bc56b9-cd25-4486-a67e-269cc36fe5c1", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "O=C(NCc1ccccc1)c1cccc2c1NC(c1ccccc1Cl)C1CC=CC21", "smiles_random": "C1(C2C(C=CC2)c2cccc(c2N1)C(NCc1ccccc1)=O)c1c(Cl)cccc1", "carbon_count": 26}, "prompt": "How many carbon atoms are in the molecule:\n\nC1(C2C(C=CC2)c2cccc(c2N1)C(NCc1ccccc1)=O)c1c(Cl)cccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 26, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "2e0b97fa-89e2-4d89-b7e9-cecf098a3667", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCN(C(=O)c1ccc2c(c1)C1C=CCC1C(c1cccnc1)N2)c1ccccc1", "smiles_random": "c1(C2Nc3c(cc(C(N(CC)c4ccccc4)=O)cc3)C3C=CCC32)cccnc1", "carbon_count": 26}, "prompt": "How many carbon atoms are in the molecule:\n\nc1(C2Nc3c(cc(C(N(CC)c4ccccc4)=O)cc3)C3C=CCC32)cccnc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 26, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "dc0bcaec-8999-4d31-8aa3-e90134368600", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CC(C)(C)NC(=O)c1cccc2c1NC(c1cccc3ccccc13)C1CC=CC21", "smiles_random": "c1ccc2c(C3Nc4c(C(=O)NC(C)(C)C)cccc4C4C=CCC34)cccc2c1", "carbon_count": 27}, "prompt": "How many carbon atoms are in the molecule:\n\nc1ccc2c(C3Nc4c(C(=O)NC(C)(C)C)cccc4C4C=CCC34)cccc2c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 27, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "937cd3db-0c99-4277-8a08-34bd8540571b", "question_category": "counting_carbon", "sub_category": "counting", "meta_data": {"smiles": "CCC(C)NC(=O)c1cccc2c1NC(c1ccc3ccccc3c1)C1CC=CC21", "smiles_random": "CC(CC)NC(=O)c1cccc2c1NC(C1CC=CC12)c1cc2ccccc2cc1", "carbon_count": 27}, "prompt": "How many carbon atoms are in the molecule:\n\nCC(CC)NC(=O)c1cccc2c1NC(C1CC=CC12)c1cc2ccccc2cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 27, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3a559549-01fb-4593-92f4-e97cc87a2b1c", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCOC(=O)CC(C)CNC(=O)Nc1cc(F)c(F)c(F)c1", "smiles_random": "O=C(OCC)CC(CNC(=O)Nc1cc(F)c(F)c(c1)F)C", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nO=C(OCC)CC(CNC(=O)Nc1cc(F)c(F)c(c1)F)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "8bcdc9ed-a72f-453d-9ad6-3f7167fcca3d", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "SCCCCCCSc1ncccn1", "smiles_random": "S(c1ncccn1)CCCCCCS", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nS(c1ncccn1)CCCCCCS\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ab6b902e-3a48-42ab-b328-a3427cd8734d", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC(C)CC(C)OCCC(=O)NC1CCC(=O)N(C)C1", "smiles_random": "C1C(NC(=O)CCOC(C)CC(C)C)CCC(=O)N1C", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nC1C(NC(=O)CCOC(C)CC(C)C)CCC(=O)N1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "08bc4deb-9b9d-4fec-a95c-f894c168db36", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCNC(=O)NC(=O)C(C)N1CCNC(=O)C1", "smiles_random": "N1C(=O)CN(C(C)C(=O)NC(=O)NCC)CC1", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nN1C(=O)CN(C(C)C(=O)NC(=O)NCC)CC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ca4c52b5-3771-4daf-8230-97184aa7e9b0", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "COCCCC1(CO)CCCN(C(=O)CNC(N)=O)C1", "smiles_random": "O(C)CCCC1(CO)CCCN(C(CNC(N)=O)=O)C1", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nO(C)CCCC1(CO)CCCN(C(CNC(N)=O)=O)C1\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "e2615e3e-52fb-4646-8bd0-feecda381a2e", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCC(CSC)N(C)C(=O)NC1CCC(OC(C)C)CC1", "smiles_random": "C1(CCC(NC(N(C)C(CSC)CC)=O)CC1)OC(C)C", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nC1(CCC(NC(N(C)C(CSC)CC)=O)CC1)OC(C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "2438e38c-a074-4916-bec6-22970d759c17", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "COC(=O)c1ccc(CNCC(C)(C)S(C)(=O)=O)nc1", "smiles_random": "O=S(=O)(C)C(C)(C)CNCc1ncc(cc1)C(OC)=O", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nO=S(=O)(C)C(C)(C)CNCc1ncc(cc1)C(OC)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "78d48efb-3943-4685-bbce-e6569fb818f8", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(NCCCO)Nc1cccc(F)c1", "smiles_random": "C(CO)CNC(Nc1cccc(c1)F)=O", "ring_count": 1}, "prompt": "How many rings are in the molecule:\n\nC(CO)CNC(Nc1cccc(c1)F)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 1, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "c77a9e01-14fa-411d-844f-aff9904892be", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCCC(COC)n1c(CCCl)nc2cnccc21", "smiles_random": "C(c1n(C(COC)CCC)c2ccncc2n1)CCl", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\nC(c1n(C(COC)CCC)c2ccncc2n1)CCl\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "660299c3-49e8-4526-bc2f-229128f3a728", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1cccc(CCNC(=O)c2cn(C)nc2C(C)(C)C)c1", "smiles_random": "c1(cc(CCNC(=O)c2c(nn(C)c2)C(C)(C)C)ccc1)C", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\nc1(cc(CCNC(=O)c2c(nn(C)c2)C(C)(C)C)ccc1)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "2e894827-709d-4621-aa93-d57b44f5a0f3", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC(=O)c1cccc(NC(=O)c2onc(C)c2Cl)c1", "smiles_random": "o1nc(c(Cl)c1C(Nc1cccc(c1)C(=O)C)=O)C", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\no1nc(c(Cl)c1C(Nc1cccc(c1)C(=O)C)=O)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5929b457-6388-4b4b-a060-359df6f0971d", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC(C)CCOc1ccccc1C(=O)Nc1cccc(C#N)c1", "smiles_random": "c1(ccccc1C(=O)Nc1cc(ccc1)C#N)OCCC(C)C", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\nc1(ccccc1C(=O)Nc1cc(ccc1)C#N)OCCC(C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "e47fed1a-c789-4887-a0bd-0db0c8eb70f6", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1cccc(C)c1NC(=S)NN=Cc1ccc(C#N)cc1", "smiles_random": "S=C(NN=Cc1ccc(cc1)C#N)Nc1c(cccc1C)C", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\nS=C(NN=Cc1ccc(cc1)C#N)Nc1c(cccc1C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d2b5cd34-d177-4186-b266-a7118797755a", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCOc1c(Br)cc(Cl)cc1NC(=O)c1cc[nH]n1", "smiles_random": "c1cc(n[nH]1)C(Nc1c(c(cc(Cl)c1)Br)OCC)=O", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\nc1cc(n[nH]1)C(Nc1c(c(cc(Cl)c1)Br)OCC)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "da855680-70f9-49b3-8fe2-a012f6981636", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Nc1c(Br)cnn1C1CCCC1O", "smiles_random": "C1CCC(C1O)n1c(c(cn1)Br)N", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\nC1CCC(C1O)n1c(c(cn1)Br)N\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d9e6418d-239f-4647-9fc3-b1cd35a23ff6", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1nc(C)c(C(C)N(C)C(=O)NCC(C)c2ccc(F)cc2F)s1", "smiles_random": "O=C(NCC(c1c(F)cc(F)cc1)C)N(C)C(c1c(C)nc(C)s1)C", "ring_count": 2}, "prompt": "How many rings are in the molecule:\n\nO=C(NCC(c1c(F)cc(F)cc1)C)N(C)C(c1c(C)nc(C)s1)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 2, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "074a47ae-31d9-4aa8-9c53-71d258b71182", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC(CC(C)(C)c1ccccc1)NC(=O)C1COc2ccccc21", "smiles_random": "CC(c1ccccc1)(C)CC(NC(=O)C1c2c(cccc2)OC1)C", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nCC(c1ccccc1)(C)CC(NC(=O)C1c2c(cccc2)OC1)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "2090df2a-bdbc-4bb5-a9d0-72edd2cfdbd0", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC(C)c1ccccc1-n1c(SCC(C)(C)O)nc2ccccc2c1=O", "smiles_random": "CC(O)(CSc1nc2ccccc2c(=O)n1-c1ccccc1C(C)C)C", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nCC(O)(CSc1nc2ccccc2c(=O)n1-c1ccccc1C(C)C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "1052eeec-7a3a-4755-a613-e1e2e22d4ca5", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC(CN(C)Cn1c(Cc2cccs2)n[nH]c1=S)c1ccccc1", "smiles_random": "c1(C(C)CN(Cn2c(Cc3sccc3)n[nH]c2=S)C)ccccc1", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nc1(C(C)CN(Cn2c(Cc3sccc3)n[nH]c2=S)C)ccccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5d20368d-5637-4fa9-a451-9e662794bc5d", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCN(CC)S(=O)(=O)c1ccc(NN=C(C)c2ccc3c(c2)OCO3)nc1", "smiles_random": "c1c(C(=NNc2ncc(cc2)S(=O)(=O)N(CC)CC)C)cc2c(OCO2)c1", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nc1c(C(=NNc2ncc(cc2)S(=O)(=O)N(CC)CC)C)cc2c(OCO2)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b04ab5e4-64bb-4ecf-9afe-16f816382d20", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "COc1nn(C)cc1C(=O)Nc1sc2c(c1C#N)CCN(C(C)=O)C2", "smiles_random": "C(=O)(c1cn(C)nc1OC)Nc1sc2c(c1C#N)CCN(C(=O)C)C2", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nC(=O)(c1cn(C)nc1OC)Nc1sc2c(c1C#N)CCN(C(=O)C)C2\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "af01c7fa-17f5-4a4e-a6cb-80342c4b4514", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCC(Cc1ccc(C)cc1)N(C)C(=O)NCc1nnc2n1CCC2", "smiles_random": "C(C)C(Cc1ccc(cc1)C)N(C)C(=O)NCc1nnc2n1CCC2", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nC(C)C(Cc1ccc(cc1)C)N(C)C(=O)NCc1nnc2n1CCC2\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "7f50536c-f511-4d7f-9a64-ff779d5b220c", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "COc1cccc(C(CNC(=O)C(=O)NC2CCCCCC2)N2CCOCC2)c1", "smiles_random": "c1c(cc(cc1)C(N1CCOCC1)CNC(=O)C(NC1CCCCCC1)=O)OC", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nc1c(cc(cc1)C(N1CCOCC1)CNC(=O)C(NC1CCCCCC1)=O)OC\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0b955564-7819-4329-afd5-d9fbcd7d52c6", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1ccc(C)c(C(C)NC(=O)c2ccc(CN3CCOCC3)cc2)c1", "smiles_random": "c1cc(ccc1C(=O)NC(c1c(C)ccc(c1)C)C)CN1CCOCC1", "ring_count": 3}, "prompt": "How many rings are in the molecule:\n\nc1cc(ccc1C(=O)NC(c1c(C)ccc(c1)C)C)CN1CCOCC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0af0ab3f-ec09-449e-a95e-c66f0329cc4d", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1ccccc1OCc1n[nH]c(SCC(=O)N2CCC(c3ccccc3)=N2)n1", "smiles_random": "O(Cc1n[nH]c(SCC(N2CCC(=N2)c2ccccc2)=O)n1)c1ccccc1C", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nO(Cc1n[nH]c(SCC(N2CCC(=N2)c2ccccc2)=O)n1)c1ccccc1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "001d4851-593b-4d65-a868-6802b198e592", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CN(C)c1ccc(-c2noc(C(=O)NCCc3c[nH]c4ccccc34)n2)cc1", "smiles_random": "c1cc(ccc1-c1nc(on1)C(NCCc1c2ccccc2[nH]c1)=O)N(C)C", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nc1cc(ccc1-c1nc(on1)C(NCCc1c2ccccc2[nH]c1)=O)N(C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "7a7abe5c-acf5-4047-a2fb-874ca0ef69a8", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1ccc(C)c(C(=O)C(C)Sc2nnc(C3CC3)n2-c2ccccc2)c1", "smiles_random": "c1cc(C)cc(c1C)C(=O)C(C)Sc1n(-c2ccccc2)c(nn1)C1CC1", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nc1cc(C)cc(c1C)C(=O)C(C)Sc1n(-c2ccccc2)c(nn1)C1CC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "57539d1c-5c1e-475d-9450-b4f25a806d0a", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CCC1Oc2ccc(C(O)c3ccco3)cc2N(Cc2cccc(OC)c2)C1=O", "smiles_random": "c12OC(CC)C(N(Cc3cccc(OC)c3)c2cc(C(c2occc2)O)cc1)=O", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nc12OC(CC)C(N(Cc3cccc(OC)c3)c2cc(C(c2occc2)O)cc1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d90df87b-360e-4a0d-b151-1b5f3e682209", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC1CC(C)CN(C(=O)CSc2nc3ccccc3c(=O)n2-c2ccc(F)cc2)C1", "smiles_random": "c1cc(-n2c(nc3c(c2=O)cccc3)SCC(=O)N2CC(CC(C)C2)C)ccc1F", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nc1cc(-n2c(nc3c(c2=O)cccc3)SCC(=O)N2CC(CC(C)C2)C)ccc1F\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "da4121c1-9b89-429b-8bb4-552de8960d00", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1[nH]c2ncnn2c(=O)c1CCC(=O)Nc1cccc2ncccc12", "smiles_random": "c1c2c(cccn2)c(NC(=O)CCc2c(C)[nH]c3n(ncn3)c2=O)cc1", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nc1c2c(cccn2)c(NC(=O)CCc2c(C)[nH]c3n(ncn3)c2=O)cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "df6ddd19-a29a-4fca-8e60-165d49c91015", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(CSc1nc2ccccc2o1)OCc1cc(-c2cccs2)on1", "smiles_random": "n1c(cc(-c2cccs2)o1)COC(=O)CSc1oc2ccccc2n1", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nn1c(cc(-c2cccs2)o1)COC(=O)CSc1oc2ccccc2n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3e1ce51a-577c-4b3a-8fec-8f355afb4ae9", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(Nc1nc(CN2CCOCC2)cs1)C1(c2ccc(F)cc2)CCCC1", "smiles_random": "C1CN(CCO1)Cc1nc(sc1)NC(C1(c2ccc(cc2)F)CCCC1)=O", "ring_count": 4}, "prompt": "How many rings are in the molecule:\n\nC1CN(CCO1)Cc1nc(sc1)NC(C1(c2ccc(cc2)F)CCCC1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "c3f2068b-f6bd-478f-9dbb-4eb5d41a9257", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "Cc1c(C(=O)N2CCC(Nc3ccccc3)C2)nnn1-c1cccc2ncccc12", "smiles_random": "O=C(c1c(n(nn1)-c1cccc2c1cccn2)C)N1CCC(C1)Nc1ccccc1", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\nO=C(c1c(n(nn1)-c1cccc2c1cccn2)C)N1CCC(C1)Nc1ccccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4d7679cb-2450-4fd4-83fb-a0a4945ece18", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC(=O)c1cc(CC(=O)N2CCc3c([nH]c4ccccc34)C2c2ccccn2)cs1", "smiles_random": "C1N(C(=O)Cc2csc(c2)C(C)=O)C(c2c(C1)c1c(cccc1)[nH]2)c1ccccn1", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\nC1N(C(=O)Cc2csc(c2)C(C)=O)C(c2c(C1)c1c(cccc1)[nH]2)c1ccccn1\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "47a13e7d-3ccc-46c7-9ab6-18a77fe4e361", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(CCN1CCn2cnnc2C1)N1c2ccccc2Sc2ccccc21", "smiles_random": "c12nncn1CCN(C2)CCC(N1c2c(Sc3c1cccc3)cccc2)=O", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\nc12nncn1CCN(C2)CCC(N1c2c(Sc3c1cccc3)cccc2)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "34f680d5-7ca8-44dc-8bef-6587312c5633", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "c1csc(-c2csc3nc(CN4CCOCC4)nc(N4CCOCC4)c23)c1", "smiles_random": "n1c2scc(c2c(N2CCOCC2)nc1CN1CCOCC1)-c1sccc1", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\nn1c2scc(c2c(N2CCOCC2)nc1CN1CCOCC1)-c1sccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "2eaece5e-784a-4f46-ba75-d0dc47af9e17", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(Cn1cc(C2CC2)nn1)NC1c2ccccc2Oc2ccccc21", "smiles_random": "c1(cn(nn1)CC(NC1c2c(cccc2)Oc2ccccc12)=O)C1CC1", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\nc1(cn(nn1)CC(NC1c2c(cccc2)Oc2ccccc12)=O)C1CC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "673ee5fd-a3f2-44f4-b9f1-a4f62e03fbcf", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC1C(c2ccccc2)CCN1C(=O)c1nc(C2CC2)n2ccccc12", "smiles_random": "c1ccccc1C1CCN(C1C)C(=O)c1c2n(c(C3CC3)n1)cccc2", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\nc1ccccc1C1CCN(C1C)C(=O)c1c2n(c(C3CC3)n1)cccc2\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "84b3e2d6-4db0-434d-a283-019c71e34c86", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C1c2ccccc2NC(c2cnn(-c3ccccc3)c2)N1Cc1ccccc1", "smiles_random": "N1c2ccccc2C(N(C1c1cn(-c2ccccc2)nc1)Cc1ccccc1)=O", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\nN1c2ccccc2C(N(C1c1cn(-c2ccccc2)nc1)Cc1ccccc1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "a5eff30f-812e-4507-a960-f8d2eac97acb", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "COc1ccc(-n2ncc3c2CCCC3NC(=O)c2noc3c2CC(C)CC3)cc1", "smiles_random": "o1nc(c2CC(C)CCc12)C(NC1c2cnn(-c3ccc(cc3)OC)c2CCC1)=O", "ring_count": 5}, "prompt": "How many rings are in the molecule:\n\no1nc(c2CC(C)CCc12)C(NC1c2cnn(-c3ccc(cc3)OC)c2CCC1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "77b54f23-7be4-4a41-8efb-af0bfb2da7d8", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(c1cn2ccsc2n1)N1CCc2c([nH]c3ccccc23)C1c1ccccn1", "smiles_random": "s1c2n(cc1)cc(n2)C(N1C(c2ccccn2)c2c(CC1)c1ccccc1[nH]2)=O", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\ns1c2n(cc1)cc(n2)C(N1C(c2ccccn2)c2c(CC1)c1ccccc1[nH]2)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "8e64860f-dc4b-48b2-bf1a-d980bfab6725", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "c1ccc2c(c1)Cc1cc(-c3nccn3Cc3nnc4n3CCC4)ccc1-2", "smiles_random": "c1cc2-c3c(cccc3)Cc2cc1-c1nccn1Cc1n2c(nn1)CCC2", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\nc1cc2-c3c(cccc3)Cc2cc1-c1nccn1Cc1n2c(nn1)CCC2\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "6be0f910-6e18-4586-a91d-2a18cc0a5d8d", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(Nc1ccc2nc(C3CC3)oc2c1)c1nc(C2CC2)n2ccccc12", "smiles_random": "c12oc(nc2ccc(NC(c2nc(C3CC3)n3c2cccc3)=O)c1)C1CC1", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\nc12oc(nc2ccc(NC(c2nc(C3CC3)n3c2cccc3)=O)c1)C1CC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "1ae2a2a0-e993-4cc2-9506-c6a6640915b0", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "CC1Cc2ccccc2N1C(=O)C1(c2cc(-c3ccc4c(c3)OCO4)on2)CC1", "smiles_random": "c12c(cc(-c3cc(no3)C3(CC3)C(=O)N3c4c(cccc4)CC3C)cc1)OCO2", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\nc12c(cc(-c3cc(no3)C3(CC3)C(=O)N3c4c(cccc4)CC3C)cc1)OCO2\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "6d9ad319-6d2d-4b81-b53a-0e15e5a6ef3a", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(c1cc(C2CC2)nc2ccccc12)N1CCCC1c1ccc2c(c1)OCCO2", "smiles_random": "N1(C(c2cc(C3CC3)nc3c2cccc3)=O)CCCC1c1cc2c(OCCO2)cc1", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\nN1(C(c2cc(C3CC3)nc3c2cccc3)=O)CCCC1c1cc2c(OCCO2)cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "2ad9f734-0cb7-4a15-a53d-2337dec41a48", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C1c2ccc3c4c(ccc(c24)C(=O)N1c1nccs1)C(=O)N(c1nccs1)C3=O", "smiles_random": "n1ccsc1N1C(c2ccc3C(=O)N(C(c4c3c2c(cc4)C1=O)=O)c1sccn1)=O", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\nn1ccsc1N1C(c2ccc3C(=O)N(C(c4c3c2c(cc4)C1=O)=O)c1sccn1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "c277ca87-1474-4def-98c2-330415ce801b", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "O=C(c1cccc2c1NC(c1cccc3ccccc13)C1CC=CC21)N1CCCC1", "smiles_random": "O=C(c1c2NC(C3C(c2ccc1)C=CC3)c1c2ccccc2ccc1)N1CCCC1", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\nO=C(c1c2NC(C3C(c2ccc1)C=CC3)c1c2ccccc2ccc1)N1CCCC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3d157ae8-c073-4f5a-9ea5-6d7e0dad9a11", "question_category": "counting_ring", "sub_category": "counting", "meta_data": {"smiles": "COc1ccc2[nH]c3c(c2c1)CN(Cc1c[nH]nc1-c1cc2ccccc2o1)CC3", "smiles_random": "[nH]1c2CCN(Cc3c[nH]nc3-c3cc4ccccc4o3)Cc2c2cc(OC)ccc12", "ring_count": 6}, "prompt": "How many rings are in the molecule:\n\n[nH]1c2CCN(Cc3c[nH]nc3-c3cc4ccccc4o3)Cc2c2cc(OC)ccc12\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "907d64f5-ea52-4b1b-b427-0cf78b0d31f6", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(CS)CSCc1ccco1", "linker_canonical": "*CC(*)(CS)CSCc1ccco1", "linker_random": "c1(occc1)CSCC(CS)(C*)*", "linker_length": 3}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(occc1)CSCC(CS)(C*)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "1f14794b-a803-4dd0-8e4c-ec6fc738c89a", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(CS)CSCc1ccco1", "linker_canonical": "*CC(*)(CS)CSCc1ccco1", "linker_random": "c1(occc1)CSCC(CS)(C*)*", "linker_length": 3}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(*)(CS)CSCc1ccco1\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "7768c7a2-cdea-4efa-a1a6-10d9a692a064", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCSc1nnc(NC(=O)CCc2ccc(C)o2)s1", "linker_canonical": "*CC(*)Sc1nnc(NC(=O)CCc2ccc(C)o2)s1", "linker_random": "c1c(oc(C)c1)CCC(Nc1nnc(SC(C*)*)s1)=O", "linker_length": 3}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(oc(C)c1)CCC(Nc1nnc(SC(C*)*)s1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "c477a0ec-e03c-4599-bd84-83f8ac297672", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCSc1nnc(NC(=O)CCc2ccc(C)o2)s1", "linker_canonical": "*CC(*)Sc1nnc(NC(=O)CCc2ccc(C)o2)s1", "linker_random": "c1c(oc(C)c1)CCC(Nc1nnc(SC(C*)*)s1)=O", "linker_length": 3}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(*)Sc1nnc(NC(=O)CCc2ccc(C)o2)s1\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "702d3734-b75e-44f8-b34c-4e0a6203a11d", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(CS(C)(=O)=O)NC(=O)C(=O)Nc1cc(F)ccc1F", "linker_canonical": "*CC(*)(CS(C)(=O)=O)NC(=O)C(=O)Nc1cc(F)ccc1F", "linker_random": "O=C(C(=O)NC(CS(C)(=O)=O)(*)C*)Nc1cc(F)ccc1F", "linker_length": 3}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nO=C(C(=O)NC(CS(C)(=O)=O)(*)C*)Nc1cc(F)ccc1F\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "06665bc6-3d74-41e6-ace5-44c401966700", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(CS(C)(=O)=O)NC(=O)C(=O)Nc1cc(F)ccc1F", "linker_canonical": "*CC(*)(CS(C)(=O)=O)NC(=O)C(=O)Nc1cc(F)ccc1F", "linker_random": "O=C(C(=O)NC(CS(C)(=O)=O)(*)C*)Nc1cc(F)ccc1F", "linker_length": 3}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(*)(CS(C)(=O)=O)NC(=O)C(=O)Nc1cc(F)ccc1F\n\nGive your answer as an integer. Do not write any comments.", "answer": 3, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d4e97d08-2fe7-4c36-9cce-4c804f87e90b", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(C)c1ccc(CNc2ncc(Br)cn2)cc1", "linker_canonical": "*c1cc(CNc2ncc(Br)cn2)ccc1C(*)(C)C", "linker_random": "c1(ncc(Br)cn1)NCc1cc(c(cc1)C(C)(C)*)*", "linker_length": 4}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(ncc(Br)cn1)NCc1cc(c(cc1)C(C)(C)*)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f052c9af-e086-4242-a206-bb81eb48bcb3", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(C)c1ccc(CNc2ncc(Br)cn2)cc1", "linker_canonical": "*c1cc(CNc2ncc(Br)cn2)ccc1C(*)(C)C", "linker_random": "c1(ncc(Br)cn1)NCc1cc(c(cc1)C(C)(C)*)*", "linker_length": 4}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cc(CNc2ncc(Br)cn2)ccc1C(*)(C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "774c2b0e-fdb2-43ac-952a-f1c3a775973f", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(=O)C(C)Oc1ccc(Cl)c2ccccc12", "linker_canonical": "*CC(=O)C(*)(C)Oc1ccc(Cl)c2ccccc12", "linker_random": "c1cc2c(Cl)ccc(c2cc1)OC(C(=O)C*)(*)C", "linker_length": 4}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1cc2c(Cl)ccc(c2cc1)OC(C(=O)C*)(*)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "8d7c2c36-eda6-4912-a2ee-9087bd6da96f", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(=O)C(C)Oc1ccc(Cl)c2ccccc12", "linker_canonical": "*CC(=O)C(*)(C)Oc1ccc(Cl)c2ccccc12", "linker_random": "c1cc2c(Cl)ccc(c2cc1)OC(C(=O)C*)(*)C", "linker_length": 4}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(=O)C(*)(C)Oc1ccc(Cl)c2ccccc12\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "1db5b205-7edc-461c-96cd-2fb4474dbccd", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(C)C(NC(=O)c1ccc(C(C)(C)C)cc1)C(=O)Nc1cccc(S(N)(=O)=O)c1", "linker_canonical": "*CC(C)C(*)(NC(=O)c1ccc(C(C)(C)C)cc1)C(=O)Nc1cccc(S(N)(=O)=O)c1", "linker_random": "c1c(S(N)(=O)=O)cc(cc1)NC(C(NC(c1ccc(cc1)C(C)(C)C)=O)(*)C(C)C*)=O", "linker_length": 4}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(S(N)(=O)=O)cc(cc1)NC(C(NC(c1ccc(cc1)C(C)(C)C)=O)(*)C(C)C*)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4406367c-3e25-4a11-9be2-d436decc5a57", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(C)C(NC(=O)c1ccc(C(C)(C)C)cc1)C(=O)Nc1cccc(S(N)(=O)=O)c1", "linker_canonical": "*CC(C)C(*)(NC(=O)c1ccc(C(C)(C)C)cc1)C(=O)Nc1cccc(S(N)(=O)=O)c1", "linker_random": "c1c(S(N)(=O)=O)cc(cc1)NC(C(NC(c1ccc(cc1)C(C)(C)C)=O)(*)C(C)C*)=O", "linker_length": 4}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(C)C(*)(NC(=O)c1ccc(C(C)(C)C)cc1)C(=O)Nc1cccc(S(N)(=O)=O)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 4, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "45235f05-734f-45d2-bd80-0d50e6126346", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "O=C(Nc1cc(C(F)(F)F)c[nH]c1=O)c1cc(F)c(F)c(F)c1F", "linker_canonical": "*c1c(F)c(F)c(F)c(F)c1C(=O)N(*)c1cc(C(F)(F)F)c[nH]c1=O", "linker_random": "Fc1c(F)c(*)c(c(c1F)F)C(=O)N(*)c1cc(c[nH]c1=O)C(F)(F)F", "linker_length": 5}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nFc1c(F)c(*)c(c(c1F)F)C(=O)N(*)c1cc(c[nH]c1=O)C(F)(F)F\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "66a86cbb-3fce-41fe-aefb-8b8be28e432d", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "O=C(Nc1cc(C(F)(F)F)c[nH]c1=O)c1cc(F)c(F)c(F)c1F", "linker_canonical": "*c1c(F)c(F)c(F)c(F)c1C(=O)N(*)c1cc(C(F)(F)F)c[nH]c1=O", "linker_random": "Fc1c(F)c(*)c(c(c1F)F)C(=O)N(*)c1cc(c[nH]c1=O)C(F)(F)F", "linker_length": 5}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1c(F)c(F)c(F)c(F)c1C(=O)N(*)c1cc(C(F)(F)F)c[nH]c1=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "99bca635-5315-4b00-a4f8-6c4534358d25", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCCC(C)N1CC(C(=O)NC2c3ccccc3CC2O)CC1=O", "linker_canonical": "*CCCC(*)(C)N1CC(C(=O)NC2c3ccccc3CC2O)CC1=O", "linker_random": "C1(CC(CN1C(*)(C)CCC*)C(=O)NC1c2ccccc2CC1O)=O", "linker_length": 5}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC1(CC(CN1C(*)(C)CCC*)C(=O)NC1c2ccccc2CC1O)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "29ee50e4-903d-4be4-80eb-6937d74c8264", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCCC(C)N1CC(C(=O)NC2c3ccccc3CC2O)CC1=O", "linker_canonical": "*CCCC(*)(C)N1CC(C(=O)NC2c3ccccc3CC2O)CC1=O", "linker_random": "C1(CC(CN1C(*)(C)CCC*)C(=O)NC1c2ccccc2CC1O)=O", "linker_length": 5}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CCCC(*)(C)N1CC(C(=O)NC2c3ccccc3CC2O)CC1=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "9a992da6-3fe7-46a0-a495-02a0713e4127", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "O=C1c2ccccc2C(=O)N1CC(=O)N(C(=O)NC1CCCCC1)C1CCCCC1", "linker_canonical": "*c1ccc(*)c2c1C(=O)N(CC(=O)N(C(=O)NC1CCCCC1)C1CCCCC1)C2=O", "linker_random": "C1(CCCCC1)NC(N(C1CCCCC1)C(=O)CN1C(=O)c2c(c(ccc2*)*)C1=O)=O", "linker_length": 5}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC1(CCCCC1)NC(N(C1CCCCC1)C(=O)CN1C(=O)c2c(c(ccc2*)*)C1=O)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0f606cb0-e171-4cbc-a46c-eb268dbffdbd", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "O=C1c2ccccc2C(=O)N1CC(=O)N(C(=O)NC1CCCCC1)C1CCCCC1", "linker_canonical": "*c1ccc(*)c2c1C(=O)N(CC(=O)N(C(=O)NC1CCCCC1)C1CCCCC1)C2=O", "linker_random": "C1(CCCCC1)NC(N(C1CCCCC1)C(=O)CN1C(=O)c2c(c(ccc2*)*)C1=O)=O", "linker_length": 5}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccc(*)c2c1C(=O)N(CC(=O)N(C(=O)NC1CCCCC1)C1CCCCC1)C2=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 5, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0cff8ee9-1872-49e7-9d72-ea778376b097", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(Cc1ccsc1)N(C)C(=O)NC(Cn1cncn1)c1ccccc1", "linker_canonical": "*CC(Cc1cscc1*)N(C)C(=O)NC(Cn1cncn1)c1ccccc1", "linker_random": "c1scc(c1CC(C*)N(C(NC(c1ccccc1)Cn1cncn1)=O)C)*", "linker_length": 6}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1scc(c1CC(C*)N(C(NC(c1ccccc1)Cn1cncn1)=O)C)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d92c755d-0cf0-4051-9439-237a0623b79e", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(Cc1ccsc1)N(C)C(=O)NC(Cn1cncn1)c1ccccc1", "linker_canonical": "*CC(Cc1cscc1*)N(C)C(=O)NC(Cn1cncn1)c1ccccc1", "linker_random": "c1scc(c1CC(C*)N(C(NC(c1ccccc1)Cn1cncn1)=O)C)*", "linker_length": 6}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(Cc1cscc1*)N(C)C(=O)NC(Cn1cncn1)c1ccccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "fbb4f9a4-79fd-4602-b609-afb86d4d18dd", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1c(CNCCc2ccncc2)cnn1C", "linker_canonical": "*Cn1ncc(C(*)NCCc2ccncc2)c1C", "linker_random": "C(c1ccncc1)CNC(c1cnn(C*)c1C)*", "linker_length": 6}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC(c1ccncc1)CNC(c1cnn(C*)c1C)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d4996e79-c43b-47a7-8191-e79fb5f27586", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1c(CNCCc2ccncc2)cnn1C", "linker_canonical": "*Cn1ncc(C(*)NCCc2ccncc2)c1C", "linker_random": "C(c1ccncc1)CNC(c1cnn(C*)c1C)*", "linker_length": 6}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cn1ncc(C(*)NCCc2ccncc2)c1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ed77a6b3-9609-46ad-9ad8-d12246c69297", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(C)C(NC(=O)Nc1ccccc1C(F)(F)F)C(=O)N1CCOCC1", "linker_canonical": "*C1COCCN1C(=O)C(NC(=O)Nc1ccccc1C(F)(F)F)C(*)(C)C", "linker_random": "FC(c1ccccc1NC(NC(C(N1CCOCC1*)=O)C(C)(C)*)=O)(F)F", "linker_length": 6}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nFC(c1ccccc1NC(NC(C(N1CCOCC1*)=O)C(C)(C)*)=O)(F)F\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f8328d1a-6038-44bc-adfe-c5ffd8103eb7", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(C)C(NC(=O)Nc1ccccc1C(F)(F)F)C(=O)N1CCOCC1", "linker_canonical": "*C1COCCN1C(=O)C(NC(=O)Nc1ccccc1C(F)(F)F)C(*)(C)C", "linker_random": "FC(c1ccccc1NC(NC(C(N1CCOCC1*)=O)C(C)(C)*)=O)(F)F", "linker_length": 6}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C1COCCN1C(=O)C(NC(=O)Nc1ccccc1C(F)(F)F)C(*)(C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 6, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4502ca46-d1d8-4d7d-86e1-2a9e19189ee0", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "C=CCOc1ccc(C(=O)NC2CC2C)cc1OC", "linker_canonical": "*C(=C)COc1ccc(C(=O)NC2CC2C)c(*)c1OC", "linker_random": "c1(OC)c(OCC(*)=C)ccc(C(=O)NC2CC2C)c1*", "linker_length": 7}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(OC)c(OCC(*)=C)ccc(C(=O)NC2CC2C)c1*\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "098f7951-1c0f-46db-9be5-145004c9165c", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "C=CCOc1ccc(C(=O)NC2CC2C)cc1OC", "linker_canonical": "*C(=C)COc1ccc(C(=O)NC2CC2C)c(*)c1OC", "linker_random": "c1(OC)c(OCC(*)=C)ccc(C(=O)NC2CC2C)c1*", "linker_length": 7}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C(=C)COc1ccc(C(=O)NC2CC2C)c(*)c1OC\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "99df2f53-b5eb-4290-94da-614450b0cda9", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1ccccc1-c1nc(C(=O)NCc2ccc(C(N)=O)o2)cs1", "linker_canonical": "*c1cccc(-c2nc(C(=O)NCc3ccc(C(N)=O)o3)c(*)s2)c1C", "linker_random": "NC(c1oc(cc1)CNC(=O)c1nc(-c2cccc(*)c2C)sc1*)=O", "linker_length": 7}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nNC(c1oc(cc1)CNC(=O)c1nc(-c2cccc(*)c2C)sc1*)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "23f622c6-a837-460f-b67f-480f454edf5f", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1ccccc1-c1nc(C(=O)NCc2ccc(C(N)=O)o2)cs1", "linker_canonical": "*c1cccc(-c2nc(C(=O)NCc3ccc(C(N)=O)o3)c(*)s2)c1C", "linker_random": "NC(c1oc(cc1)CNC(=O)c1nc(-c2cccc(*)c2C)sc1*)=O", "linker_length": 7}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cccc(-c2nc(C(=O)NCc3ccc(C(N)=O)o3)c(*)s2)c1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "54cb767e-164f-413f-becf-e4841bf3cd1b", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "O=C(CCNC(=O)N1CCCCCC1c1ccccc1)N1CCCC1", "linker_canonical": "*C(CNC(=O)N1C(*)CCCCC1c1ccccc1)C(=O)N1CCCC1", "linker_random": "C1CCCC(c2ccccc2)N(C(=O)NCC(*)C(N2CCCC2)=O)C1*", "linker_length": 7}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC1CCCC(c2ccccc2)N(C(=O)NCC(*)C(N2CCCC2)=O)C1*\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "9f081551-efda-4c88-873f-91dbfad35086", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "O=C(CCNC(=O)N1CCCCCC1c1ccccc1)N1CCCC1", "linker_canonical": "*C(CNC(=O)N1C(*)CCCCC1c1ccccc1)C(=O)N1CCCC1", "linker_random": "C1CCCC(c2ccccc2)N(C(=O)NCC(*)C(N2CCCC2)=O)C1*", "linker_length": 7}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C(CNC(=O)N1C(*)CCCCC1c1ccccc1)C(=O)N1CCCC1\n\nGive your answer as an integer. Do not write any comments.", "answer": 7, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "72ae58dc-65a1-40ed-8e94-cd4647539ddf", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "O=C(NOC1CCCCO1)C1(c2ccc(F)cc2F)CCCC1", "linker_canonical": "*C1CCC(C(=O)NOC2(*)CCCCO2)(c2ccc(F)cc2F)C1", "linker_random": "C1C(c2ccc(cc2F)F)(CCC1*)C(=O)NOC1(*)CCCCO1", "linker_length": 8}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC1C(c2ccc(cc2F)F)(CCC1*)C(=O)NOC1(*)CCCCO1\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "dc0fc37b-aa8c-4c93-b67b-38635c25b38b", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "O=C(NOC1CCCCO1)C1(c2ccc(F)cc2F)CCCC1", "linker_canonical": "*C1CCC(C(=O)NOC2(*)CCCCO2)(c2ccc(F)cc2F)C1", "linker_random": "C1C(c2ccc(cc2F)F)(CCC1*)C(=O)NOC1(*)CCCCO1", "linker_length": 8}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C1CCC(C(=O)NOC2(*)CCCCO2)(c2ccc(F)cc2F)C1\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "de586a36-a068-4c87-ad5e-22176a4f9675", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1ccc(OCc2cccc(C(=O)NC(C3CC3)C3CC3)c2)cn1", "linker_canonical": "*Cc1ccc(OC(*)c2cccc(C(=O)NC(C3CC3)C3CC3)c2)cn1", "linker_random": "c1(cnc(cc1)C*)OC(c1cccc(C(NC(C2CC2)C2CC2)=O)c1)*", "linker_length": 8}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(cnc(cc1)C*)OC(c1cccc(C(NC(C2CC2)C2CC2)=O)c1)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "7c389221-e0f0-4640-9179-b8794337017a", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1ccc(OCc2cccc(C(=O)NC(C3CC3)C3CC3)c2)cn1", "linker_canonical": "*Cc1ccc(OC(*)c2cccc(C(=O)NC(C3CC3)C3CC3)c2)cn1", "linker_random": "c1(cnc(cc1)C*)OC(c1cccc(C(NC(C2CC2)C2CC2)=O)c1)*", "linker_length": 8}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1ccc(OC(*)c2cccc(C(=O)NC(C3CC3)C3CC3)c2)cn1\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f569980e-0f05-415b-97dd-c0c99eddfe33", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "O=C(CN1CCN(C(=O)c2ccccn2)CC1)Nc1cccc(F)c1", "linker_canonical": "*c1ccc(F)cc1NC(=O)CN1CCN(C(=O)c2ccccn2)CC1*", "linker_random": "c1c(ccc(c1NC(=O)CN1C(*)CN(C(=O)c2ncccc2)CC1)*)F", "linker_length": 8}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(ccc(c1NC(=O)CN1C(*)CN(C(=O)c2ncccc2)CC1)*)F\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d532db70-4c17-451f-a3f3-2a7a7a5e5f63", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "O=C(CN1CCN(C(=O)c2ccccn2)CC1)Nc1cccc(F)c1", "linker_canonical": "*c1ccc(F)cc1NC(=O)CN1CCN(C(=O)c2ccccn2)CC1*", "linker_random": "c1c(ccc(c1NC(=O)CN1C(*)CN(C(=O)c2ncccc2)CC1)*)F", "linker_length": 8}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccc(F)cc1NC(=O)CN1CCN(C(=O)c2ccccn2)CC1*\n\nGive your answer as an integer. Do not write any comments.", "answer": 8, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3258223d-aa80-4cd8-bb03-83726a4bc97b", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CN1CC(NC(=O)NC(CO)c2ccc(Cl)c(F)c2)CCC1=O", "linker_canonical": "*c1c(C(CO)NC(=O)NC2CCC(=O)N(C)C2*)ccc(Cl)c1F", "linker_random": "*C1N(C(CCC1NC(=O)NC(c1c(c(c(cc1)Cl)F)*)CO)=O)C", "linker_length": 9}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C1N(C(CCC1NC(=O)NC(c1c(c(c(cc1)Cl)F)*)CO)=O)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f533d89f-bb10-47e1-8dd6-df770e6365a5", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CN1CC(NC(=O)NC(CO)c2ccc(Cl)c(F)c2)CCC1=O", "linker_canonical": "*c1c(C(CO)NC(=O)NC2CCC(=O)N(C)C2*)ccc(Cl)c1F", "linker_random": "*C1N(C(CCC1NC(=O)NC(c1c(c(c(cc1)Cl)F)*)CO)=O)C", "linker_length": 9}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1c(C(CO)NC(=O)NC2CCC(=O)N(C)C2*)ccc(Cl)c1F\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d1e26921-7c24-42b4-b664-c5fe983b9a4b", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "COc1ccccc1NC(=O)Nc1ccc(Cl)cc1", "linker_canonical": "*c1cc(Cl)ccc1NC(=O)Nc1cccc(*)c1OC", "linker_random": "O(c1c(NC(Nc2ccc(Cl)cc2*)=O)cccc1*)C", "linker_length": 9}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nO(c1c(NC(Nc2ccc(Cl)cc2*)=O)cccc1*)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3e3e29f6-2397-4d52-a8d1-01bf4d5b2e83", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "COc1ccccc1NC(=O)Nc1ccc(Cl)cc1", "linker_canonical": "*c1cc(Cl)ccc1NC(=O)Nc1cccc(*)c1OC", "linker_random": "O(c1c(NC(Nc2ccc(Cl)cc2*)=O)cccc1*)C", "linker_length": 9}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cc(Cl)ccc1NC(=O)Nc1cccc(*)c1OC\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "9adfffb4-7ec3-4322-8fae-71430a08c844", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCC(C(=O)NCc1ccc(F)cc1)n1nc(C)c2sc3ccccc3c2c1=O", "linker_canonical": "*c1cccc2c1sc1c(C)nn(C(C(=O)NCc3ccc(F)cc3)C(*)C)c(=O)c12", "linker_random": "C(NC(C(C(C)*)n1nc(c2c(c3c(c(ccc3)*)s2)c1=O)C)=O)c1ccc(F)cc1", "linker_length": 9}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC(NC(C(C(C)*)n1nc(c2c(c3c(c(ccc3)*)s2)c1=O)C)=O)c1ccc(F)cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4838c72f-20fe-4461-b39e-83a8c2e4d794", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCC(C(=O)NCc1ccc(F)cc1)n1nc(C)c2sc3ccccc3c2c1=O", "linker_canonical": "*c1cccc2c1sc1c(C)nn(C(C(=O)NCc3ccc(F)cc3)C(*)C)c(=O)c12", "linker_random": "C(NC(C(C(C)*)n1nc(c2c(c3c(c(ccc3)*)s2)c1=O)C)=O)c1ccc(F)cc1", "linker_length": 9}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cccc2c1sc1c(C)nn(C(C(=O)NCc3ccc(F)cc3)C(*)C)c(=O)c12\n\nGive your answer as an integer. Do not write any comments.", "answer": 9, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ec469198-ee0c-466a-a79b-22b0d5f81ba5", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(C)(O)CCC1CC(C(C)(C)C)CCC1=O", "linker_canonical": "*CC(C)(O)CCC1CC(C(C)(C)C*)CCC1=O", "linker_random": "C1(CCC(C*)(C)O)C(CCC(C(C)(C)C*)C1)=O", "linker_length": 10}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC1(CCC(C*)(C)O)C(CCC(C(C)(C)C*)C1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "51fc9d00-0772-4cd2-885d-b476af71c9ef", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(C)(O)CCC1CC(C(C)(C)C)CCC1=O", "linker_canonical": "*CC(C)(O)CCC1CC(C(C)(C)C*)CCC1=O", "linker_random": "C1(CCC(C*)(C)O)C(CCC(C(C)(C)C*)C1)=O", "linker_length": 10}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(C)(O)CCC1CC(C(C)(C)C*)CCC1=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "07bf72da-6739-4c39-8add-4f892358fd14", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1nnc(SCCC(C)(C)O)n1C", "linker_canonical": "*Cc1nnc(SCCC(C)(C)O*)n1C", "linker_random": "CC(O*)(C)CCSc1n(c(nn1)C*)C", "linker_length": 10}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nCC(O*)(C)CCSc1n(c(nn1)C*)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4409e783-8a3b-4b71-9da9-4ade0692bc7c", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1nnc(SCCC(C)(C)O)n1C", "linker_canonical": "*Cc1nnc(SCCC(C)(C)O*)n1C", "linker_random": "CC(O*)(C)CCSc1n(c(nn1)C*)C", "linker_length": 10}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1nnc(SCCC(C)(C)O*)n1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "30b08c13-0c5b-4875-8344-24e4b9a5f1fc", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CNS(=O)(=O)c1ccc(Cl)c(C(=O)NC2CCCCC2C)c1", "linker_canonical": "*N(C)S(=O)(=O)c1ccc(Cl)c(C(=O)NC2CCCCC2(*)C)c1", "linker_random": "O=S(=O)(c1ccc(c(c1)C(=O)NC1CCCCC1(C)*)Cl)N(C)*", "linker_length": 10}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nO=S(=O)(c1ccc(c(c1)C(=O)NC1CCCCC1(C)*)Cl)N(C)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "027fd9e5-6810-4e6c-865b-b66156c84a43", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CNS(=O)(=O)c1ccc(Cl)c(C(=O)NC2CCCCC2C)c1", "linker_canonical": "*N(C)S(=O)(=O)c1ccc(Cl)c(C(=O)NC2CCCCC2(*)C)c1", "linker_random": "O=S(=O)(c1ccc(c(c1)C(=O)NC1CCCCC1(C)*)Cl)N(C)*", "linker_length": 10}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*N(C)S(=O)(=O)c1ccc(Cl)c(C(=O)NC2CCCCC2(*)C)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 10, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "dca11452-60bb-44b3-96cb-f6b4e0e99146", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "O=C(c1coc(COc2ccc(F)cc2Cl)n1)N1CCC1c1cccs1", "linker_canonical": "*c1ccc(C2CCN2C(=O)c2coc(C(*)Oc3ccc(F)cc3Cl)n2)s1", "linker_random": "c1c(F)ccc(c1Cl)OC(c1occ(C(N2CCC2c2sc(*)cc2)=O)n1)*", "linker_length": 11}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(F)ccc(c1Cl)OC(c1occ(C(N2CCC2c2sc(*)cc2)=O)n1)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f12d7f7a-cae2-47ff-a7d1-7ce97748434f", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "O=C(c1coc(COc2ccc(F)cc2Cl)n1)N1CCC1c1cccs1", "linker_canonical": "*c1ccc(C2CCN2C(=O)c2coc(C(*)Oc3ccc(F)cc3Cl)n2)s1", "linker_random": "c1c(F)ccc(c1Cl)OC(c1occ(C(N2CCC2c2sc(*)cc2)=O)n1)*", "linker_length": 11}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccc(C2CCN2C(=O)c2coc(C(*)Oc3ccc(F)cc3Cl)n2)s1\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f89f06ea-06d4-4e24-b2cd-fa74c41690c8", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(=O)NCC(=O)NC(C)C(C)c1ccccc1", "linker_canonical": "*c1ccc(C(C)C(C)NC(=O)CN(*)C(C)=O)cc1", "linker_random": "N(C(=O)CN(C(=O)C)*)C(C(C)c1ccc(cc1)*)C", "linker_length": 11}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nN(C(=O)CN(C(=O)C)*)C(C(C)c1ccc(cc1)*)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5e2739b0-aff8-4a6c-af9b-e7882d1e3fa8", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(=O)NCC(=O)NC(C)C(C)c1ccccc1", "linker_canonical": "*c1ccc(C(C)C(C)NC(=O)CN(*)C(C)=O)cc1", "linker_random": "N(C(=O)CN(C(=O)C)*)C(C(C)c1ccc(cc1)*)C", "linker_length": 11}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccc(C(C)C(C)NC(=O)CN(*)C(C)=O)cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "675a5bce-dfb7-4bd2-8f6c-ec84285ccab7", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CS(=O)(=O)Cc1ccccc1NCc1c[nH]nc1-c1ccc(F)cc1", "linker_canonical": "*c1cc(-c2n[nH]cc2CNc2ccccc2C(*)S(C)(=O)=O)ccc1F", "linker_random": "c1cc(-c2c(CNc3ccccc3C(S(=O)(C)=O)*)c[nH]n2)cc(c1F)*", "linker_length": 11}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1cc(-c2c(CNc3ccccc3C(S(=O)(C)=O)*)c[nH]n2)cc(c1F)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "014aa3c7-4e0a-41f6-8b99-e85fb141a45c", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CS(=O)(=O)Cc1ccccc1NCc1c[nH]nc1-c1ccc(F)cc1", "linker_canonical": "*c1cc(-c2n[nH]cc2CNc2ccccc2C(*)S(C)(=O)=O)ccc1F", "linker_random": "c1cc(-c2c(CNc3ccccc3C(S(=O)(C)=O)*)c[nH]n2)cc(c1F)*", "linker_length": 11}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cc(-c2n[nH]cc2CNc2ccccc2C(*)S(C)(=O)=O)ccc1F\n\nGive your answer as an integer. Do not write any comments.", "answer": 11, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "441591e8-7672-46ea-abe3-77cf24deb081", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CNC(=O)c1cc(Cl)ccc1NCC(=O)N(c1ccccc1)C(C)C", "linker_canonical": "*c1cccc(N(C(=O)CNc2ccc(Cl)cc2C(=O)N(*)C)C(C)C)c1", "linker_random": "c1(C(N(C)*)=O)cc(Cl)ccc1NCC(N(C(C)C)c1cc(*)ccc1)=O", "linker_length": 12}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(C(N(C)*)=O)cc(Cl)ccc1NCC(N(C(C)C)c1cc(*)ccc1)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "8e86fb6c-0547-469c-b96c-792bb9fb11ff", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CNC(=O)c1cc(Cl)ccc1NCC(=O)N(c1ccccc1)C(C)C", "linker_canonical": "*c1cccc(N(C(=O)CNc2ccc(Cl)cc2C(=O)N(*)C)C(C)C)c1", "linker_random": "c1(C(N(C)*)=O)cc(Cl)ccc1NCC(N(C(C)C)c1cc(*)ccc1)=O", "linker_length": 12}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cccc(N(C(=O)CNc2ccc(Cl)cc2C(=O)N(*)C)C(C)C)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "1b2f01a3-e44a-4b51-97dc-3b1bab2e5392", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1noc(C)c1C(C)NC(=O)NC(CS(C)(=O)=O)c1ccccc1", "linker_canonical": "*Cc1onc(C)c1C(C)NC(=O)NC(CS(C)(=O)=O)c1cccc(*)c1", "linker_random": "c1(*)cc(C(NC(NC(C)c2c(noc2C*)C)=O)CS(C)(=O)=O)ccc1", "linker_length": 12}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(*)cc(C(NC(NC(C)c2c(noc2C*)C)=O)CS(C)(=O)=O)ccc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "eb636216-c46e-4e44-9c30-64b6d06efd16", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1noc(C)c1C(C)NC(=O)NC(CS(C)(=O)=O)c1ccccc1", "linker_canonical": "*Cc1onc(C)c1C(C)NC(=O)NC(CS(C)(=O)=O)c1cccc(*)c1", "linker_random": "c1(*)cc(C(NC(NC(C)c2c(noc2C*)C)=O)CS(C)(=O)=O)ccc1", "linker_length": 12}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1onc(C)c1C(C)NC(=O)NC(CS(C)(=O)=O)c1cccc(*)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "6e331ce0-73ff-42d2-b3f7-3f2c91c51b16", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CN(Cc1ccc(Br)cc1)C(=O)Cc1csc(Cc2ccccc2)n1", "linker_canonical": "*c1cccc(Cc2nc(CC(=O)N(C)C(*)c3ccc(Br)cc3)cs2)c1", "linker_random": "c1c(ccc(Br)c1)C(*)N(C)C(=O)Cc1nc(Cc2cc(*)ccc2)sc1", "linker_length": 12}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(ccc(Br)c1)C(*)N(C)C(=O)Cc1nc(Cc2cc(*)ccc2)sc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d16a26c2-d5e6-4a92-a2d9-53e4421f1dfa", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CN(Cc1ccc(Br)cc1)C(=O)Cc1csc(Cc2ccccc2)n1", "linker_canonical": "*c1cccc(Cc2nc(CC(=O)N(C)C(*)c3ccc(Br)cc3)cs2)c1", "linker_random": "c1c(ccc(Br)c1)C(*)N(C)C(=O)Cc1nc(Cc2cc(*)ccc2)sc1", "linker_length": 12}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cccc(Cc2nc(CC(=O)N(C)C(*)c3ccc(Br)cc3)cs2)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 12, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "1307dca0-a1b9-4e16-bb94-8c93c367d761", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(C#N)CNC(=O)C(=O)Nc1ccccc1C(=O)NC(C)(C)C", "linker_canonical": "*CC(C)(C)NC(=O)c1ccccc1NC(=O)C(=O)NCC(*)(C)C#N", "linker_random": "O=C(Nc1ccccc1C(=O)NC(C*)(C)C)C(=O)NCC(C#N)(C)*", "linker_length": 13}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nO=C(Nc1ccccc1C(=O)NC(C*)(C)C)C(=O)NCC(C#N)(C)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f6b9ae84-8afe-4bea-8379-455cc16f5682", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(C#N)CNC(=O)C(=O)Nc1ccccc1C(=O)NC(C)(C)C", "linker_canonical": "*CC(C)(C)NC(=O)c1ccccc1NC(=O)C(=O)NCC(*)(C)C#N", "linker_random": "O=C(Nc1ccccc1C(=O)NC(C*)(C)C)C(=O)NCC(C#N)(C)*", "linker_length": 13}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(C)(C)NC(=O)c1ccccc1NC(=O)C(=O)NCC(*)(C)C#N\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "26f04010-c4a4-4142-b917-deb437164606", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CS(=O)(=O)c1ccccc1-c1nnc(NC(=O)CSc2ccc(F)cc2)o1", "linker_canonical": "*c1cc(F)ccc1SCC(=O)Nc1nnc(-c2cccc(*)c2S(C)(=O)=O)o1", "linker_random": "c1c(F)cc(c(SCC(=O)Nc2nnc(-c3cccc(*)c3S(=O)(C)=O)o2)c1)*", "linker_length": 13}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(F)cc(c(SCC(=O)Nc2nnc(-c3cccc(*)c3S(=O)(C)=O)o2)c1)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "11eff25a-9310-4c22-b7bd-897dd39c4ee2", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CS(=O)(=O)c1ccccc1-c1nnc(NC(=O)CSc2ccc(F)cc2)o1", "linker_canonical": "*c1cc(F)ccc1SCC(=O)Nc1nnc(-c2cccc(*)c2S(C)(=O)=O)o1", "linker_random": "c1c(F)cc(c(SCC(=O)Nc2nnc(-c3cccc(*)c3S(=O)(C)=O)o2)c1)*", "linker_length": 13}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cc(F)ccc1SCC(=O)Nc1nnc(-c2cccc(*)c2S(C)(=O)=O)o1\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "e15bcb0f-bea0-4e54-8850-711e17c53b08", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "COCCn1cc(NC(=O)N2CCCC2c2cccc(OC)c2)cn1", "linker_canonical": "*c1cc(OC)cc(C2CCCN2C(=O)Nc2cnn(CC(*)OC)c2)c1", "linker_random": "c1(cnn(c1)CC(OC)*)NC(N1C(CCC1)c1cc(*)cc(c1)OC)=O", "linker_length": 13}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(cnn(c1)CC(OC)*)NC(N1C(CCC1)c1cc(*)cc(c1)OC)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0f2cd71b-96c5-4d89-a3b5-cfbcb00a8570", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "COCCn1cc(NC(=O)N2CCCC2c2cccc(OC)c2)cn1", "linker_canonical": "*c1cc(OC)cc(C2CCCN2C(=O)Nc2cnn(CC(*)OC)c2)c1", "linker_random": "c1(cnn(c1)CC(OC)*)NC(N1C(CCC1)c1cc(*)cc(c1)OC)=O", "linker_length": 13}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cc(OC)cc(C2CCCN2C(=O)Nc2cnn(CC(*)OC)c2)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 13, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5142c16e-918b-4506-b6ae-81cf33938d23", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1nccn1-c1cncc(NCCC2=CCCCC2)n1", "linker_canonical": "*c1cn(-c2cncc(NCCC3=CCC(*)CC3)n2)c(C)n1", "linker_random": "C(C1CCC(*)CC=1)CNc1cncc(n1)-n1cc(*)nc1C", "linker_length": 14}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC(C1CCC(*)CC=1)CNc1cncc(n1)-n1cc(*)nc1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "703bd7fc-1ca5-4013-87e0-d0f30c4a38f3", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1nccn1-c1cncc(NCCC2=CCCCC2)n1", "linker_canonical": "*c1cn(-c2cncc(NCCC3=CCC(*)CC3)n2)c(C)n1", "linker_random": "C(C1CCC(*)CC=1)CNc1cncc(n1)-n1cc(*)nc1C", "linker_length": 14}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cn(-c2cncc(NCCC3=CCC(*)CC3)n2)c(C)n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ee109ba1-10d0-4b45-b08e-2b7e34c69136", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1cnc(C(C)(C)NC(=O)c2cccc(C(=O)OC(C)(C)C)c2)s1", "linker_canonical": "*CC(C)(C)OC(=O)c1cccc(C(=O)NC(C)(C)c2nc(*)c(C)s2)c1", "linker_random": "*c1nc(C(NC(=O)c2cc(ccc2)C(OC(C)(C)C*)=O)(C)C)sc1C", "linker_length": 14}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1nc(C(NC(=O)c2cc(ccc2)C(OC(C)(C)C*)=O)(C)C)sc1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0fb2187d-ee29-4ccf-9d5f-9280a165c28c", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1cnc(C(C)(C)NC(=O)c2cccc(C(=O)OC(C)(C)C)c2)s1", "linker_canonical": "*CC(C)(C)OC(=O)c1cccc(C(=O)NC(C)(C)c2nc(*)c(C)s2)c1", "linker_random": "*c1nc(C(NC(=O)c2cc(ccc2)C(OC(C)(C)C*)=O)(C)C)sc1C", "linker_length": 14}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(C)(C)OC(=O)c1cccc(C(=O)NC(C)(C)c2nc(*)c(C)s2)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5134b2b8-f02c-49e1-b711-924fc77e925f", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "COc1ccc(Cl)cc1NC(=O)CCNC(=O)C=Cc1ccccc1", "linker_canonical": "*c1ccccc1C=CC(=O)NCCC(=O)Nc1cc(Cl)cc(*)c1OC", "linker_random": "O=C(NCCC(Nc1c(c(cc(c1)Cl)*)OC)=O)C=Cc1ccccc1*", "linker_length": 14}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nO=C(NCCC(Nc1c(c(cc(c1)Cl)*)OC)=O)C=Cc1ccccc1*\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "c1c2da33-1400-4652-b6e4-a65d22c04601", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "COc1ccc(Cl)cc1NC(=O)CCNC(=O)C=Cc1ccccc1", "linker_canonical": "*c1ccccc1C=CC(=O)NCCC(=O)Nc1cc(Cl)cc(*)c1OC", "linker_random": "O=C(NCCC(Nc1c(c(cc(c1)Cl)*)OC)=O)C=Cc1ccccc1*", "linker_length": 14}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccccc1C=CC(=O)NCCC(=O)Nc1cc(Cl)cc(*)c1OC\n\nGive your answer as an integer. Do not write any comments.", "answer": 14, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "7b5bbd03-c87a-4db1-9910-acc7c4b47566", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCOc1ccc2c(c1)CN(C(=O)Nc1nc(-c3cccnc3)cs1)CC2", "linker_canonical": "*c1ncccc1-c1csc(NC(=O)N2CCc3ccc(OC(*)C)cc3C2)n1", "linker_random": "C1N(C(=O)Nc2nc(-c3c(*)nccc3)cs2)Cc2cc(ccc2C1)OC(*)C", "linker_length": 15}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC1N(C(=O)Nc2nc(-c3c(*)nccc3)cs2)Cc2cc(ccc2C1)OC(*)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "aa31b1d7-61e5-472a-98f7-1f164781368a", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCOc1ccc2c(c1)CN(C(=O)Nc1nc(-c3cccnc3)cs1)CC2", "linker_canonical": "*c1ncccc1-c1csc(NC(=O)N2CCc3ccc(OC(*)C)cc3C2)n1", "linker_random": "C1N(C(=O)Nc2nc(-c3c(*)nccc3)cs2)Cc2cc(ccc2C1)OC(*)C", "linker_length": 15}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ncccc1-c1csc(NC(=O)N2CCc3ccc(OC(*)C)cc3C2)n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "feb4bc9b-6506-408d-8c5d-a26170d490cb", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(C)c(NC(=O)C(=O)NCC(C)Oc2ccccc2F)c(C)c1", "linker_canonical": "*c1ccc(OC(C)CNC(=O)C(=O)Nc2c(C)cc(C)c(*)c2C)c(F)c1", "linker_random": "c1(OC(C)CNC(C(Nc2c(C)cc(c(*)c2C)C)=O)=O)ccc(*)cc1F", "linker_length": 15}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(OC(C)CNC(C(Nc2c(C)cc(c(*)c2C)C)=O)=O)ccc(*)cc1F\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b2c63367-4108-41b1-8ebd-cb9f9301f53d", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1cc(C)c(NC(=O)C(=O)NCC(C)Oc2ccccc2F)c(C)c1", "linker_canonical": "*c1ccc(OC(C)CNC(=O)C(=O)Nc2c(C)cc(C)c(*)c2C)c(F)c1", "linker_random": "c1(OC(C)CNC(C(Nc2c(C)cc(c(*)c2C)C)=O)=O)ccc(*)cc1F", "linker_length": 15}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccc(OC(C)CNC(=O)C(=O)Nc2c(C)cc(C)c(*)c2C)c(F)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "da326821-8008-466a-a1fd-ac928fb3a7a7", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(C)(C)OC(=O)c1cccc(C(=O)N2CCOC(c3nccs3)C2)c1", "linker_canonical": "*CC(C)(C)OC(=O)c1cccc(C(=O)N2CCOC(c3ncc(*)s3)C2)c1", "linker_random": "*c1cnc(C2CN(C(c3cccc(c3)C(OC(C*)(C)C)=O)=O)CCO2)s1", "linker_length": 15}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1cnc(C2CN(C(c3cccc(c3)C(OC(C*)(C)C)=O)=O)CCO2)s1\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "3eef2c6b-ae3b-4116-91a8-a7c6e2c0101e", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(C)(C)OC(=O)c1cccc(C(=O)N2CCOC(c3nccs3)C2)c1", "linker_canonical": "*CC(C)(C)OC(=O)c1cccc(C(=O)N2CCOC(c3ncc(*)s3)C2)c1", "linker_random": "*c1cnc(C2CN(C(c3cccc(c3)C(OC(C*)(C)C)=O)=O)CCO2)s1", "linker_length": 15}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(C)(C)OC(=O)c1cccc(C(=O)N2CCOC(c3ncc(*)s3)C2)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 15, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ce30de20-4d6d-4170-87d5-3ae993f7b238", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCc1nnc(NC(=O)NC(C)c2ccc(N3CCCC3=O)cc2)s1", "linker_canonical": "*C1CCN(c2ccc(C(C)NC(=O)Nc3nnc(C(*)C)s3)cc2)C1=O", "linker_random": "C(c1sc(NC(=O)NC(C)c2ccc(N3CCC(C3=O)*)cc2)nn1)(C)*", "linker_length": 16}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC(c1sc(NC(=O)NC(C)c2ccc(N3CCC(C3=O)*)cc2)nn1)(C)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "980b0bb5-9604-417f-b8ad-961083286bf0", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCc1nnc(NC(=O)NC(C)c2ccc(N3CCCC3=O)cc2)s1", "linker_canonical": "*C1CCN(c2ccc(C(C)NC(=O)Nc3nnc(C(*)C)s3)cc2)C1=O", "linker_random": "C(c1sc(NC(=O)NC(C)c2ccc(N3CCC(C3=O)*)cc2)nn1)(C)*", "linker_length": 16}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C1CCN(c2ccc(C(C)NC(=O)Nc3nnc(C(*)C)s3)cc2)C1=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ad3d8093-cbc8-44f3-a01f-fdf4a0cba5de", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCCCc1ccc(N2C(=O)SC(=C(C)c3cccc(N)c3)C2=O)cc1", "linker_canonical": "*Nc1cccc(C(C)=C2SC(=O)N(c3ccc(CCC(*)C)cc3)C2=O)c1", "linker_random": "N1(C(C(SC1=O)=C(C)c1cccc(N*)c1)=O)c1ccc(CCC(C)*)cc1", "linker_length": 16}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nN1(C(C(SC1=O)=C(C)c1cccc(N*)c1)=O)c1ccc(CCC(C)*)cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b5146292-95b7-4567-8394-3f0c95aff8e0", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCCCc1ccc(N2C(=O)SC(=C(C)c3cccc(N)c3)C2=O)cc1", "linker_canonical": "*Nc1cccc(C(C)=C2SC(=O)N(c3ccc(CCC(*)C)cc3)C2=O)c1", "linker_random": "N1(C(C(SC1=O)=C(C)c1cccc(N*)c1)=O)c1ccc(CCC(C)*)cc1", "linker_length": 16}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Nc1cccc(C(C)=C2SC(=O)N(c3ccc(CCC(*)C)cc3)C2=O)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "57a2d9aa-8cc4-4176-beec-9ff91493b105", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CC(C)Cc1cc(C(=O)Nc2ccc(CN3CCOCC3)cc2)[nH]n1", "linker_canonical": "*C1CN(Cc2ccc(NC(=O)c3cc(CC(*)(C)C)n[nH]3)cc2)CCO1", "linker_random": "*C(C)(C)Cc1cc(C(=O)Nc2ccc(cc2)CN2CC(OCC2)*)[nH]n1", "linker_length": 16}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C(C)(C)Cc1cc(C(=O)Nc2ccc(cc2)CN2CC(OCC2)*)[nH]n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0fa56819-67b3-4c47-99c8-02c42dc65542", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CC(C)Cc1cc(C(=O)Nc2ccc(CN3CCOCC3)cc2)[nH]n1", "linker_canonical": "*C1CN(Cc2ccc(NC(=O)c3cc(CC(*)(C)C)n[nH]3)cc2)CCO1", "linker_random": "*C(C)(C)Cc1cc(C(=O)Nc2ccc(cc2)CN2CC(OCC2)*)[nH]n1", "linker_length": 16}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*C1CN(Cc2ccc(NC(=O)c3cc(CC(*)(C)C)n[nH]3)cc2)CCO1\n\nGive your answer as an integer. Do not write any comments.", "answer": 16, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "81432019-c1eb-480c-a635-f606ca64f4b6", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(C)cc(-n2ccn3c(CCC(=O)NCc4cccnc4)nnc3c2=O)c1", "linker_canonical": "*c1ccncc1CNC(=O)CCc1nnc2c(=O)n(-c3cc(C)c(*)c(C)c3)ccn12", "linker_random": "c1(cc(cc(c1*)C)-n1ccn2c(CCC(NCc3c(*)ccnc3)=O)nnc2c1=O)C", "linker_length": 17}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(cc(cc(c1*)C)-n1ccn2c(CCC(NCc3c(*)ccnc3)=O)nnc2c1=O)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d2cae75d-26a3-4f60-b11e-5b67f95fedea", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1cc(C)cc(-n2ccn3c(CCC(=O)NCc4cccnc4)nnc3c2=O)c1", "linker_canonical": "*c1ccncc1CNC(=O)CCc1nnc2c(=O)n(-c3cc(C)c(*)c(C)c3)ccn12", "linker_random": "c1(cc(cc(c1*)C)-n1ccn2c(CCC(NCc3c(*)ccnc3)=O)nnc2c1=O)C", "linker_length": 17}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccncc1CNC(=O)CCc1nnc2c(=O)n(-c3cc(C)c(*)c(C)c3)ccn12\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "55798b53-27ef-4594-a5e2-5bd75edc3f42", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCC(=O)Nc1ccc(F)c(NC(=O)NCCCn2nc(C)nc2C)c1", "linker_canonical": "*Cc1nc(C)n(CCCNC(=O)Nc2cc(NC(=O)C(*)C)ccc2F)n1", "linker_random": "C(c1nn(c(n1)C)CCCNC(Nc1c(ccc(NC(C(*)C)=O)c1)F)=O)*", "linker_length": 17}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nC(c1nn(c(n1)C)CCCNC(Nc1c(ccc(NC(C(*)C)=O)c1)F)=O)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "d69b6a02-31cf-4c95-8ec5-e6dde7902200", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCC(=O)Nc1ccc(F)c(NC(=O)NCCCn2nc(C)nc2C)c1", "linker_canonical": "*Cc1nc(C)n(CCCNC(=O)Nc2cc(NC(=O)C(*)C)ccc2F)n1", "linker_random": "C(c1nn(c(n1)C)CCCNC(Nc1c(ccc(NC(C(*)C)=O)c1)F)=O)*", "linker_length": 17}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1nc(C)n(CCCNC(=O)Nc2cc(NC(=O)C(*)C)ccc2F)n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "219fab25-cbbf-46a6-8b17-43623eb7e933", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCOC(=O)c1ccc(N2CC(C(=O)Nc3cccc(C)n3)CC2=O)cc1", "linker_canonical": "*Cc1cccc(NC(=O)C2CC(=O)N(c3ccc(C(=O)OC(*)C)cc3)C2)n1", "linker_random": "O=C1N(CC(C1)C(=O)Nc1cccc(n1)C*)c1ccc(cc1)C(=O)OC(C)*", "linker_length": 17}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nO=C1N(CC(C1)C(=O)Nc1cccc(n1)C*)c1ccc(cc1)C(=O)OC(C)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "828a228a-ed8c-4c9d-9ce3-b2c0e13ec476", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCOC(=O)c1ccc(N2CC(C(=O)Nc3cccc(C)n3)CC2=O)cc1", "linker_canonical": "*Cc1cccc(NC(=O)C2CC(=O)N(c3ccc(C(=O)OC(*)C)cc3)C2)n1", "linker_random": "O=C1N(CC(C1)C(=O)Nc1cccc(n1)C*)c1ccc(cc1)C(=O)OC(C)*", "linker_length": 17}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1cccc(NC(=O)C2CC(=O)N(c3ccc(C(=O)OC(*)C)cc3)C2)n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 17, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "b82aa5b1-f774-4c61-8daf-bc318e23ed30", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCc1nc2cc(NC(=O)C3CCC(CNC(=O)OC(C)(C)C)O3)ccc2o1", "linker_canonical": "*CC(C)(C)OC(=O)NCC1CCC(C(=O)Nc2ccc3oc(C(*)C)nc3c2)O1", "linker_random": "c1(NC(C2CCC(O2)CNC(OC(C)(C)C*)=O)=O)ccc2oc(C(*)C)nc2c1", "linker_length": 18}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(NC(C2CCC(O2)CNC(OC(C)(C)C*)=O)=O)ccc2oc(C(*)C)nc2c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "dd32c7d6-d41d-4593-9151-46decfea8982", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCc1nc2cc(NC(=O)C3CCC(CNC(=O)OC(C)(C)C)O3)ccc2o1", "linker_canonical": "*CC(C)(C)OC(=O)NCC1CCC(C(=O)Nc2ccc3oc(C(*)C)nc3c2)O1", "linker_random": "c1(NC(C2CCC(O2)CNC(OC(C)(C)C*)=O)=O)ccc2oc(C(*)C)nc2c1", "linker_length": 18}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CC(C)(C)OC(=O)NCC1CCC(C(=O)Nc2ccc3oc(C(*)C)nc3c2)O1\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "12937314-4205-48a4-b778-64b71fdc4efc", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCOc1ccc(NC(=O)CSCc2cc(=O)c3c(C)cc(C)cc3[nH]2)cc1", "linker_canonical": "*Cc1cc(C)c2c(=O)cc(CSCC(=O)Nc3ccc(OC(*)C)cc3)[nH]c2c1", "linker_random": "c1c(C*)cc(C)c2c1[nH]c(CSCC(Nc1ccc(cc1)OC(C)*)=O)cc2=O", "linker_length": 18}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(C*)cc(C)c2c1[nH]c(CSCC(Nc1ccc(cc1)OC(C)*)=O)cc2=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ee2cf81f-1c03-4d52-a52a-b0629d37a9cb", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCOc1ccc(NC(=O)CSCc2cc(=O)c3c(C)cc(C)cc3[nH]2)cc1", "linker_canonical": "*Cc1cc(C)c2c(=O)cc(CSCC(=O)Nc3ccc(OC(*)C)cc3)[nH]c2c1", "linker_random": "c1c(C*)cc(C)c2c1[nH]c(CSCC(Nc1ccc(cc1)OC(C)*)=O)cc2=O", "linker_length": 18}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1cc(C)c2c(=O)cc(CSCC(=O)Nc3ccc(OC(*)C)cc3)[nH]c2c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "39969de0-2519-4f4a-9a2d-9a37c3647707", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1csc(SCc2ccc(C(=O)NCc3ccc4c(c3)OCO4)cc2)n1", "linker_canonical": "*c1sc(SCc2ccc(C(=O)NCc3ccc4c(c3)OC(*)O4)cc2)nc1C", "linker_random": "O=C(c1ccc(CSc2sc(*)c(n2)C)cc1)NCc1ccc2c(OC(*)O2)c1", "linker_length": 18}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nO=C(c1ccc(CSc2sc(*)c(n2)C)cc1)NCc1ccc2c(OC(*)O2)c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "93d80443-c87b-454d-95fa-eba4c5d46490", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1csc(SCc2ccc(C(=O)NCc3ccc4c(c3)OCO4)cc2)n1", "linker_canonical": "*c1sc(SCc2ccc(C(=O)NCc3ccc4c(c3)OC(*)O4)cc2)nc1C", "linker_random": "O=C(c1ccc(CSc2sc(*)c(n2)C)cc1)NCc1ccc2c(OC(*)O2)c1", "linker_length": 18}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1sc(SCc2ccc(C(=O)NCc3ccc4c(c3)OC(*)O4)cc2)nc1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 18, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5f0f658d-deb8-48f5-9531-981de98cd64b", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCc1ccc(NC(=O)Cn2cnc3c(cnn3-c3ccc(C)c(C)c3)c2=O)cc1", "linker_canonical": "*Cc1ccc(-n2ncc3c(=O)n(CC(=O)Nc4ccc(C(*)C)cc4)cnc32)cc1C", "linker_random": "c1nn(-c2ccc(C*)c(C)c2)c2ncn(CC(=O)Nc3ccc(C(C)*)cc3)c(c12)=O", "linker_length": 19}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1nn(-c2ccc(C*)c(C)c2)c2ncn(CC(=O)Nc3ccc(C(C)*)cc3)c(c12)=O\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5e964bc9-6fc0-48c3-9b2e-9fe6d17bbb48", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCc1ccc(NC(=O)Cn2cnc3c(cnn3-c3ccc(C)c(C)c3)c2=O)cc1", "linker_canonical": "*Cc1ccc(-n2ncc3c(=O)n(CC(=O)Nc4ccc(C(*)C)cc4)cnc32)cc1C", "linker_random": "c1nn(-c2ccc(C*)c(C)c2)c2ncn(CC(=O)Nc3ccc(C(C)*)cc3)c(c12)=O", "linker_length": 19}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1ccc(-n2ncc3c(=O)n(CC(=O)Nc4ccc(C(*)C)cc4)cnc32)cc1C\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "a4898b02-9611-4050-99bd-b6868de02c15", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(C)c(NC(=O)CSc2nnc(NC(=O)C=Cc3ccccc3)s2)c(C)c1", "linker_canonical": "*c1ccc(C=CC(=O)Nc2nnc(SCC(=O)Nc3c(C)cc(C)c(*)c3C)s2)cc1", "linker_random": "*c1c(cc(c(c1C)NC(CSc1sc(nn1)NC(=O)C=Cc1ccc(*)cc1)=O)C)C", "linker_length": 19}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1c(cc(c(c1C)NC(CSc1sc(nn1)NC(=O)C=Cc1ccc(*)cc1)=O)C)C\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "6f6add3a-6620-4d9c-b207-1f1557145cbe", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cc1cc(C)c(NC(=O)CSc2nnc(NC(=O)C=Cc3ccccc3)s2)c(C)c1", "linker_canonical": "*c1ccc(C=CC(=O)Nc2nnc(SCC(=O)Nc3c(C)cc(C)c(*)c3C)s2)cc1", "linker_random": "*c1c(cc(c(c1C)NC(CSc1sc(nn1)NC(=O)C=Cc1ccc(*)cc1)=O)C)C", "linker_length": 19}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccc(C=CC(=O)Nc2nnc(SCC(=O)Nc3c(C)cc(C)c(*)c3C)s2)cc1\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "e62d4971-1a59-4601-b05f-f049a83d3fcb", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CN(C)c1nc(CNC(=O)NCc2ccc(Cn3ccnc3)cc2)cs1", "linker_canonical": "*CN(C)c1nc(CNC(=O)NCc2ccc(Cn3cnc(*)c3)cc2)cs1", "linker_random": "c1c(*)ncn1Cc1ccc(cc1)CNC(=O)NCc1csc(n1)N(C)C*", "linker_length": 19}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1c(*)ncn1Cc1ccc(cc1)CNC(=O)NCc1csc(n1)N(C)C*\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4b31a77c-52b5-460b-8701-64fdc34be9f0", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CN(C)c1nc(CNC(=O)NCc2ccc(Cn3ccnc3)cc2)cs1", "linker_canonical": "*CN(C)c1nc(CNC(=O)NCc2ccc(Cn3cnc(*)c3)cc2)cs1", "linker_random": "c1c(*)ncn1Cc1ccc(cc1)CNC(=O)NCc1csc(n1)N(C)C*", "linker_length": 19}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CN(C)c1nc(CNC(=O)NCc2ccc(Cn3cnc(*)c3)cc2)cs1\n\nGive your answer as an integer. Do not write any comments.", "answer": 19, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "25fb3b84-0fd7-4860-9416-d6d294731806", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCc1ncc(C(=O)NCCC(=O)N2CCN(C(=O)c3cnc(CC)s3)CC2)s1", "linker_canonical": "*CCc1ncc(C(=O)N2CCN(C(=O)CCNC(=O)c3cnc(C(*)C)s3)CC2)s1", "linker_random": "CC(c1sc(cn1)C(=O)NCCC(=O)N1CCN(C(c2cnc(s2)CC*)=O)CC1)*", "linker_length": 20}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nCC(c1sc(cn1)C(=O)NCCC(=O)N1CCN(C(c2cnc(s2)CC*)=O)CC1)*\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "90bc72f9-b7fd-49fe-af82-1f2a4af2593a", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCc1ncc(C(=O)NCCC(=O)N2CCN(C(=O)c3cnc(CC)s3)CC2)s1", "linker_canonical": "*CCc1ncc(C(=O)N2CCN(C(=O)CCNC(=O)c3cnc(C(*)C)s3)CC2)s1", "linker_random": "CC(c1sc(cn1)C(=O)NCCC(=O)N1CCN(C(c2cnc(s2)CC*)=O)CC1)*", "linker_length": 20}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*CCc1ncc(C(=O)N2CCN(C(=O)CCNC(=O)c3cnc(C(*)C)s3)CC2)s1\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "574a8c7e-e3e4-47f7-b9a9-438ee73d6daf", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "Cn1cnnc1SCc1ccc(C(=O)NNC(=O)Cc2c[nH]c3ccccc23)cc1", "linker_canonical": "*c1ccc2c(CC(=O)NNC(=O)c3ccc(CSc4nnc(*)n4C)cc3)c[nH]c2c1", "linker_random": "c1[nH]c2c(c1CC(NNC(=O)c1ccc(cc1)CSc1nnc(*)n1C)=O)ccc(*)c2", "linker_length": 20}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1[nH]c2c(c1CC(NNC(=O)c1ccc(cc1)CSc1nnc(*)n1C)=O)ccc(*)c2\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "cda20dea-ce04-42f9-881f-2eb79cfe0cea", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "Cn1cnnc1SCc1ccc(C(=O)NNC(=O)Cc2c[nH]c3ccccc23)cc1", "linker_canonical": "*c1ccc2c(CC(=O)NNC(=O)c3ccc(CSc4nnc(*)n4C)cc3)c[nH]c2c1", "linker_random": "c1[nH]c2c(c1CC(NNC(=O)c1ccc(cc1)CSc1nnc(*)n1C)=O)ccc(*)c2", "linker_length": 20}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*c1ccc2c(CC(=O)NNC(=O)c3ccc(CSc4nnc(*)n4C)cc3)c[nH]c2c1\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5a90335a-cb49-4e42-956d-a939177913db", "question_category": "shortest_path", "sub_category": "random", "meta_data": {"smiles": "CCOc1ccc(NC(=O)N2CCC(C(=O)NCc3nc(C)no3)CC2)cc1", "linker_canonical": "*Cc1noc(CNC(=O)C2CCN(C(=O)Nc3ccc(OC(*)C)cc3)CC2)n1", "linker_random": "c1(nc(on1)CNC(C1CCN(C(=O)Nc2ccc(cc2)OC(*)C)CC1)=O)C*", "linker_length": 20}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\nc1(nc(on1)CNC(C1CCN(C(=O)Nc2ccc(cc2)OC(*)C)CC1)=O)C*\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "fa8e2e61-e1ba-4b16-9e06-cdbedd861a7e", "question_category": "shortest_path", "sub_category": "canonical", "meta_data": {"smiles": "CCOc1ccc(NC(=O)N2CCC(C(=O)NCc3nc(C)no3)CC2)cc1", "linker_canonical": "*Cc1noc(CNC(=O)C2CCN(C(=O)Nc3ccc(OC(*)C)cc3)CC2)n1", "linker_random": "c1(nc(on1)CNC(C1CCN(C(=O)Nc2ccc(cc2)OC(*)C)CC1)=O)C*", "linker_length": 20}, "prompt": "Determine the number of bonds along the shortest path connecting the two dummy atoms (denoted by '*').Count each bond equally, including those directly attached to the dummy atoms.\n\n*Cc1noc(CNC(=O)C2CCN(C(=O)Nc3ccc(OC(*)C)cc3)CC2)n1\n\nGive your answer as an integer. Do not write any comments.", "answer": 20, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "569f8e92-146e-40f8-b1a2-220300bf29b9", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cn1nccc1I", "smiles1": "c1cnn(C)c1I", "smiles2": "Ic1ccnn1C", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 1), (6, 0)]", "n_atoms": 7}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cnn(C)c1I\n\nMolecule 2: Ic1ccnn1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 1), (6, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "96d1c5af-12fc-435d-8c23-aeb650c00c9a", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1scnc1Br", "smiles1": "n1csc(C)c1Br", "smiles2": "Brc1ncsc1C", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 1), (6, 0)]", "n_atoms": 7}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1csc(C)c1Br\n\nMolecule 2: Brc1ncsc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 1), (6, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b2fb1fca-cacb-4fd3-a629-5b372da03669", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cn1nc(Br)cc1N", "smiles1": "c1(Br)cc(N)n(C)n1", "smiles2": "Brc1cc(N)n(C)n1", "answer": "[(0, 1), (1, 0), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(Br)cc(N)n(C)n1\n\nMolecule 2: Brc1cc(N)n(C)n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 0), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "51d70a35-b212-4a3a-8263-d4d38c639e3b", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "FC1CCCCC1Br", "smiles1": "C1CCC(Br)C(F)C1", "smiles2": "C1CCC(F)C(Br)C1", "answer": "[(0, 1), (1, 0), (2, 7), (3, 5), (4, 6), (5, 3), (6, 4), (7, 2)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1CCC(Br)C(F)C1\n\nMolecule 2: C1CCC(F)C(Br)C1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 0), (2, 7), (3, 5), (4, 6), (5, 3), (6, 4), (7, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "4c34eb64-d0d2-4b1e-8a7e-0b40ec99b3ed", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1nc(=O)[nH]cc1Br", "smiles1": "c1(C)nc(=O)[nH]cc1Br", "smiles2": "c1(=O)nc(C)c(Br)c[nH]1", "answer": "[(0, 3), (1, 4), (2, 2), (3, 0), (4, 1), (5, 8), (6, 7), (7, 5), (8, 6)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C)nc(=O)[nH]cc1Br\n\nMolecule 2: c1(=O)nc(C)c(Br)c[nH]1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 4), (2, 2), (3, 0), (4, 1), (5, 8), (6, 7), (7, 5), (8, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "ae28b470-0eea-4a00-8dba-39f5aab20461", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "OCc1ccccc1I", "smiles1": "C(O)c1ccccc1I", "smiles2": "c1cccc(I)c1CO", "answer": "[(0, 7), (1, 8), (2, 6), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(O)c1ccccc1I\n\nMolecule 2: c1cccc(I)c1CO\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 8), (2, 6), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "cc1211ab-09d2-43c9-8064-b5db834f1637", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC(Br)c1ccccc1F", "smiles1": "BrC(C)c1ccccc1F", "smiles2": "c1cccc(F)c1C(C)Br", "answer": "[(0, 9), (1, 7), (2, 8), (3, 6), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: BrC(C)c1ccccc1F\n\nMolecule 2: c1cccc(F)c1C(C)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 7), (2, 8), (3, 6), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "8e03ab20-dbcf-424c-a4d1-0c638c100770", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCC(=O)c1cscc1Br", "smiles1": "C(=O)(CC)c1cscc1Br", "smiles2": "c1(C(=O)CC)cscc1Br", "answer": "[(0, 1), (1, 2), (2, 3), (3, 4), (4, 0), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(=O)(CC)c1cscc1Br\n\nMolecule 2: c1(C(=O)CC)cscc1Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 2), (2, 3), (3, 4), (4, 0), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "17b2ba84-acdc-4cbd-8b13-990abb6704ec", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1ccc(C(=O)C(=O)Br)o1", "smiles1": "c1cc(C)oc1C(=O)C(=O)Br", "smiles2": "C(=O)(Br)C(=O)c1ccc(C)o1", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 5), (6, 3), (7, 4), (8, 0), (9, 1), (10, 2)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cc(C)oc1C(=O)C(=O)Br\n\nMolecule 2: C(=O)(Br)C(=O)c1ccc(C)o1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 5), (6, 3), (7, 4), (8, 0), (9, 1), (10, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5fd2515a-c240-4544-8d8b-e62f71b4db72", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC(O)CNc1nc(Br)cs1", "smiles1": "C(Nc1nc(Br)cs1)C(C)O", "smiles2": "c1(Br)csc(NCC(C)O)n1", "answer": "[(0, 6), (1, 5), (2, 4), (3, 10), (4, 0), (5, 1), (6, 2), (7, 3), (8, 7), (9, 8), (10, 9)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(Nc1nc(Br)cs1)C(C)O\n\nMolecule 2: c1(Br)csc(NCC(C)O)n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 5), (2, 4), (3, 10), (4, 0), (5, 1), (6, 2), (7, 3), (8, 7), (9, 8), (10, 9)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "25ba6b3a-24e9-4e54-9e85-5416dc033799", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cscc1CNC(C)C#N", "smiles1": "C(C)(C#N)NCc1cscc1C", "smiles2": "N#CC(C)NCc1cscc1C", "answer": "[(0, 2), (1, 3), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C)(C#N)NCc1cscc1C\n\nMolecule 2: N#CC(C)NCc1cscc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "418b1c05-6c47-4d0e-af47-b99381f7b1d6", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCn1cc(CC)cc1C#N", "smiles1": "c1c(CC)cn(CCC)c1C#N", "smiles2": "N#Cc1cc(CC)cn1CCC", "answer": "[(0, 3), (1, 4), (2, 5), (3, 6), (4, 7), (5, 8), (6, 9), (7, 10), (8, 11), (9, 2), (10, 1), (11, 0)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(CC)cn(CCC)c1C#N\n\nMolecule 2: N#Cc1cc(CC)cn1CCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 4), (2, 5), (3, 6), (4, 7), (5, 8), (6, 9), (7, 10), (8, 11), (9, 2), (10, 1), (11, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "270f6662-3ae9-4579-a267-ba8af299d19f", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Nc1nc(-c2ccc(Cl)cn2)n[nH]1", "smiles1": "c1(-c2n[nH]c(N)n2)ccc(Cl)cn1", "smiles2": "n1cc(Cl)ccc1-c1n[nH]c(N)n1", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 5), (8, 4), (9, 2), (10, 3), (11, 1), (12, 0)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(-c2n[nH]c(N)n2)ccc(Cl)cn1\n\nMolecule 2: n1cc(Cl)ccc1-c1n[nH]c(N)n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 5), (8, 4), (9, 2), (10, 3), (11, 1), (12, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "bb610020-625d-4757-a06a-3e5aee4c3607", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC1CCC(n2nnnc2N)C1C", "smiles1": "C1(n2nnnc2N)CCC(C)C1C", "smiles2": "Nc1nnnn1C1CCC(C)C1C", "answer": "[(0, 6), (1, 5), (2, 4), (3, 3), (4, 2), (5, 1), (6, 0), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1(n2nnnc2N)CCC(C)C1C\n\nMolecule 2: Nc1nnnn1C1CCC(C)C1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 5), (2, 4), (3, 3), (4, 2), (5, 1), (6, 0), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "45cf29c4-379a-400d-bff2-b4723e32d458", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1ccccc1Nc1n[nH]c(N)n1", "smiles1": "c1cccc(C)c1Nc1n[nH]c(N)n1", "smiles2": "n1[nH]c(N)nc1Nc1ccccc1C", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 12), (5, 13), (6, 7), (7, 6), (8, 5), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cccc(C)c1Nc1n[nH]c(N)n1\n\nMolecule 2: n1[nH]c(N)nc1Nc1ccccc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 12), (5, 13), (6, 7), (7, 6), (8, 5), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "2266d837-2849-4a35-86ff-17bcec8bd393", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "COc1cc(OC)c(OC)cc1CS", "smiles1": "O(C)c1cc(OC)c(CS)cc1OC", "smiles2": "COc1cc(CS)c(OC)cc1OC", "answer": "[(0, 12), (1, 13), (2, 11), (3, 10), (4, 7), (5, 8), (6, 9), (7, 4), (8, 5), (9, 6), (10, 3), (11, 2), (12, 1), (13, 0)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O(C)c1cc(OC)c(CS)cc1OC\n\nMolecule 2: COc1cc(CS)c(OC)cc1OC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 13), (2, 11), (3, 10), (4, 7), (5, 8), (6, 9), (7, 4), (8, 5), (9, 6), (10, 3), (11, 2), (12, 1), (13, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "546464c5-c97f-4917-ba5c-3d23ca5b2fb3", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1ccc(NC2CSC(C)C2)cc1Br", "smiles1": "N(c1ccc(C)c(Br)c1)C1CSC(C)C1", "smiles2": "C1C(Nc2ccc(C)c(Br)c2)CSC1C", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 9), (8, 10), (9, 1), (10, 11), (11, 12), (12, 13), (13, 14), (14, 0)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(c1ccc(C)c(Br)c1)C1CSC(C)C1\n\nMolecule 2: C1C(Nc2ccc(C)c(Br)c2)CSC1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 9), (8, 10), (9, 1), (10, 11), (11, 12), (12, 13), (13, 14), (14, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "309f84f9-8326-452e-92a0-12284b97e63e", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1noc(C2CCCN(CC#N)C2)n1", "smiles1": "C1(c2nc(C)no2)CCCN(CC#N)C1", "smiles2": "C(#N)CN1CCCC(c2nc(C)no2)C1", "answer": "[(0, 7), (1, 8), (2, 9), (3, 10), (4, 11), (5, 12), (6, 13), (7, 6), (8, 5), (9, 4), (10, 3), (11, 2), (12, 0), (13, 1), (14, 14)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1(c2nc(C)no2)CCCN(CC#N)C1\n\nMolecule 2: C(#N)CN1CCCC(c2nc(C)no2)C1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 8), (2, 9), (3, 10), (4, 11), (5, 12), (6, 13), (7, 6), (8, 5), (9, 4), (10, 3), (11, 2), (12, 0), (13, 1), (14, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "445613fd-f801-451f-b285-b2dcbd599dd4", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCC(C)CNC(=O)c1ccc(Br)cc1N", "smiles1": "CCC(C)CNC(=O)c1ccc(Br)cc1N", "smiles2": "c1cc(C(=O)NCC(C)CC)c(N)cc1Br", "answer": "[(0, 10), (1, 9), (2, 7), (3, 8), (4, 6), (5, 5), (6, 3), (7, 4), (8, 2), (9, 1), (10, 0), (11, 14), (12, 15), (13, 13), (14, 11), (15, 12)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CCC(C)CNC(=O)c1ccc(Br)cc1N\n\nMolecule 2: c1cc(C(=O)NCC(C)CC)c(N)cc1Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 9), (2, 7), (3, 8), (4, 6), (5, 5), (6, 3), (7, 4), (8, 2), (9, 1), (10, 0), (11, 14), (12, 15), (13, 13), (14, 11), (15, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "674d8d63-ac3c-490f-b033-d9474cbafc13", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCc1cccc(NC2CCCSC2C)c1", "smiles1": "CCc1cccc(NC2CCCSC2C)c1", "smiles2": "C1CSC(C)C(Nc2cccc(CC)c2)C1", "answer": "[(0, 13), (1, 12), (2, 11), (3, 10), (4, 9), (5, 8), (6, 7), (7, 6), (8, 5), (9, 15), (10, 0), (11, 1), (12, 2), (13, 3), (14, 4), (15, 14)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CCc1cccc(NC2CCCSC2C)c1\n\nMolecule 2: C1CSC(C)C(Nc2cccc(CC)c2)C1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 13), (1, 12), (2, 11), (3, 10), (4, 9), (5, 8), (6, 7), (7, 6), (8, 5), (9, 15), (10, 0), (11, 1), (12, 2), (13, 3), (14, 4), (15, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9c284adc-81cb-4f64-b90c-6869cd14a1b1", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC(O)c1cccc(OCc2ccc(Cl)s2)c1", "smiles1": "C(C)(O)c1cccc(OCc2ccc(Cl)s2)c1", "smiles2": "C(Oc1cccc(C(C)O)c1)c1ccc(Cl)s1", "answer": "[(0, 7), (1, 8), (2, 9), (3, 6), (4, 5), (5, 4), (6, 3), (7, 2), (8, 1), (9, 0), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 10)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C)(O)c1cccc(OCc2ccc(Cl)s2)c1\n\nMolecule 2: C(Oc1cccc(C(C)O)c1)c1ccc(Cl)s1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 8), (2, 9), (3, 6), (4, 5), (5, 4), (6, 3), (7, 2), (8, 1), (9, 0), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9260cc63-ccde-42c9-a908-96a25c9a5eba", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCCC(O)C1(C#N)CCc2ccccc21", "smiles1": "C(C)CCC(O)C1(C#N)CCc2ccccc21", "smiles2": "C1Cc2ccccc2C1(C#N)C(O)CCCC", "answer": "[(0, 15), (1, 16), (2, 14), (3, 13), (4, 11), (5, 12), (6, 8), (7, 9), (8, 10), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C)CCC(O)C1(C#N)CCc2ccccc21\n\nMolecule 2: C1Cc2ccccc2C1(C#N)C(O)CCCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 16), (2, 14), (3, 13), (4, 11), (5, 12), (6, 8), (7, 9), (8, 10), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "a40ec508-27aa-45ef-a9a3-1b3c7cae4391", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCNC(=O)CNC(=O)c1cccc(OC)c1F", "smiles1": "c1cc(OC)c(F)c(C(=O)NCC(=O)NCC)c1", "smiles2": "c1(F)c(OC)cccc1C(=O)NCC(=O)NCC", "answer": "[(0, 6), (1, 5), (2, 2), (3, 3), (4, 4), (5, 0), (6, 1), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 7)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cc(OC)c(F)c(C(=O)NCC(=O)NCC)c1\n\nMolecule 2: c1(F)c(OC)cccc1C(=O)NCC(=O)NCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 5), (2, 2), (3, 3), (4, 4), (5, 0), (6, 1), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "54201e2b-a862-4624-bd23-f5c6fe39c66d", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "COC(=O)CCNC(=O)c1cc(Cl)cc(Br)c1O", "smiles1": "c1(Cl)cc(Br)c(O)c(C(=O)NCCC(=O)OC)c1", "smiles2": "c1(O)c(Br)cc(Cl)cc1C(=O)NCCC(=O)OC", "answer": "[(0, 5), (1, 6), (2, 4), (3, 2), (4, 3), (5, 0), (6, 1), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 7)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(Cl)cc(Br)c(O)c(C(=O)NCCC(=O)OC)c1\n\nMolecule 2: c1(O)c(Br)cc(Cl)cc1C(=O)NCCC(=O)OC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 6), (2, 4), (3, 2), (4, 3), (5, 0), (6, 1), (7, 8), (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "a8952c4d-3e1f-48ee-8f52-33fabbf5d76c", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1n[nH]c(NCc2ccc3c(c2)OCO3)nc1=O", "smiles1": "n1[nH]c(NCc2ccc3c(c2)OCO3)nc(=O)c1C", "smiles2": "c12ccc(CNc3nc(=O)c(C)n[nH]3)cc1OCO2", "answer": "[(0, 12), (1, 13), (2, 6), (3, 5), (4, 4), (5, 3), (6, 2), (7, 1), (8, 0), (9, 15), (10, 14), (11, 16), (12, 17), (13, 18), (14, 7), (15, 8), (16, 9), (17, 10), (18, 11)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1[nH]c(NCc2ccc3c(c2)OCO3)nc(=O)c1C\n\nMolecule 2: c12ccc(CNc3nc(=O)c(C)n[nH]3)cc1OCO2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 13), (2, 6), (3, 5), (4, 4), (5, 3), (6, 2), (7, 1), (8, 0), (9, 15), (10, 14), (11, 16), (12, 17), (13, 18), (14, 7), (15, 8), (16, 9), (17, 10), (18, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "57ef5160-8ab6-43e4-8854-44d7547d6af0", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "COC(C)CCOC(=O)C1CCOc2ccccc21", "smiles1": "C(C)(CCOC(=O)C1CCOc2ccccc21)OC", "smiles2": "C1COc2ccccc2C1C(=O)OCCC(C)OC", "answer": "[(0, 15), (1, 16), (2, 14), (3, 13), (4, 12), (5, 10), (6, 11), (7, 9), (8, 0), (9, 1), (10, 2), (11, 3), (12, 4), (13, 5), (14, 6), (15, 7), (16, 8), (17, 17), (18, 18)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C)(CCOC(=O)C1CCOc2ccccc21)OC\n\nMolecule 2: C1COc2ccccc2C1C(=O)OCCC(C)OC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 16), (2, 14), (3, 13), (4, 12), (5, 10), (6, 11), (7, 9), (8, 0), (9, 1), (10, 2), (11, 3), (12, 4), (13, 5), (14, 6), (15, 7), (16, 8), (17, 17), (18, 18)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "1f0314ef-68d6-4eb8-a7df-d9b88f640b13", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CNc1ccc2nc(-c3ccc(F)c(F)c3F)[nH]c2n1", "smiles1": "CNc1ccc2nc(-c3ccc(F)c(F)c3F)[nH]c2n1", "smiles2": "c1cc2nc(-c3ccc(F)c(F)c3F)[nH]c2nc1NC", "answer": "[(0, 19), (1, 18), (2, 17), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CNc1ccc2nc(-c3ccc(F)c(F)c3F)[nH]c2n1\n\nMolecule 2: c1cc2nc(-c3ccc(F)c(F)c3F)[nH]c2nc1NC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 19), (1, 18), (2, 17), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9d3b30a4-75bb-4ef1-b1f1-306f10c3a4d5", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC1Oc2ccccc2OC1C(=O)NCc1cc[nH]n1", "smiles1": "CC1Oc2ccccc2OC1C(=O)NCc1cc[nH]n1", "smiles2": "c12ccccc1OC(C(=O)NCc1cc[nH]n1)C(C)O2", "answer": "[(0, 18), (1, 17), (2, 19), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CC1Oc2ccccc2OC1C(=O)NCc1cc[nH]n1\n\nMolecule 2: c12ccccc1OC(C(=O)NCc1cc[nH]n1)C(C)O2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 18), (1, 17), (2, 19), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "21b0924e-d88f-43d4-9aff-dff149540662", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cn1cnc(Cl)c1Cl", "smiles1": "n1cn(C)c(Cl)c1Cl", "smiles2": "c1(Cl)ncn(C)c1Cl", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 0), (7, 1)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1cn(C)c(Cl)c1Cl\n\nMolecule 2: c1(Cl)ncn(C)c1Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 0), (7, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "af39c52c-da23-4377-a8c4-839702338af3", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1c(I)cnn1C", "smiles1": "Ic1cnn(C)c1C", "smiles2": "c1nn(C)c(C)c1I", "answer": "[(0, 7), (1, 6), (2, 0), (3, 1), (4, 2), (5, 3), (6, 4), (7, 5)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Ic1cnn(C)c1C\n\nMolecule 2: c1nn(C)c(C)c1I\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 6), (2, 0), (3, 1), (4, 2), (5, 3), (6, 4), (7, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "bce86f76-ab14-47b4-b99f-d64b8121c1f9", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cn1nccc1CBr", "smiles1": "c1cc(CBr)n(C)n1", "smiles2": "c1cnn(C)c1CBr", "answer": "[(0, 1), (1, 0), (2, 5), (3, 6), (4, 7), (5, 3), (6, 4), (7, 2)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cc(CBr)n(C)n1\n\nMolecule 2: c1cnn(C)c1CBr\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 0), (2, 5), (3, 6), (4, 7), (5, 3), (6, 4), (7, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "d75e35ac-d2ae-4fe0-a549-5fb02f214626", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "BrCC=Cc1cccs1", "smiles1": "C(Br)C=Cc1cccs1", "smiles2": "C(=CCBr)c1cccs1", "answer": "[(0, 2), (1, 3), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(Br)C=Cc1cccs1\n\nMolecule 2: C(=CCBr)c1cccs1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "11806e25-dabd-4697-9d1f-754ed806c289", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Nc1nc(=O)[nH]cc1Br", "smiles1": "c1(N)nc(=O)[nH]cc1Br", "smiles2": "c1(=O)nc(N)c(Br)c[nH]1", "answer": "[(0, 3), (1, 4), (2, 2), (3, 0), (4, 1), (5, 8), (6, 7), (7, 5), (8, 6)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(N)nc(=O)[nH]cc1Br\n\nMolecule 2: c1(=O)nc(N)c(Br)c[nH]1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 4), (2, 2), (3, 0), (4, 1), (5, 8), (6, 7), (7, 5), (8, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "332992ff-d2b0-40e2-9850-023825dd96fa", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1[nH]c(=O)ncc1Br", "smiles1": "c1(C)[nH]c(=O)ncc1Br", "smiles2": "c1(=O)ncc(Br)c(C)[nH]1", "answer": "[(0, 6), (1, 7), (2, 8), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C)[nH]c(=O)ncc1Br\n\nMolecule 2: c1(=O)ncc(Br)c(C)[nH]1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 7), (2, 8), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "35416013-8435-4980-92aa-378ad06b5274", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "OCC1OC(O)C(F)C1O", "smiles1": "C1(CO)OC(O)C(F)C1O", "smiles2": "C1(O)OC(CO)C(O)C1F", "answer": "[(0, 3), (1, 4), (2, 5), (3, 2), (4, 0), (5, 1), (6, 8), (7, 9), (8, 6), (9, 7)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1(CO)OC(O)C(F)C1O\n\nMolecule 2: C1(O)OC(CO)C(O)C1F\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 4), (2, 5), (3, 2), (4, 0), (5, 1), (6, 8), (7, 9), (8, 6), (9, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9de1ec38-0998-424b-96b3-7339d49464ff", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Fc1c(I)ccc(Br)c1Cl", "smiles1": "c1(I)ccc(Br)c(Cl)c1F", "smiles2": "c1cc(Br)c(Cl)c(F)c1I", "answer": "[(0, 8), (1, 9), (2, 0), (3, 1), (4, 2), (5, 3), (6, 4), (7, 5), (8, 6), (9, 7)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(I)ccc(Br)c(Cl)c1F\n\nMolecule 2: c1cc(Br)c(Cl)c(F)c1I\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 0), (3, 1), (4, 2), (5, 3), (6, 4), (7, 5), (8, 6), (9, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "033fe984-e80f-47ca-9acc-487291c484c7", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "O=Cc1ncc(Cl)cc1Br", "smiles1": "c1(C=O)ncc(Cl)cc1Br", "smiles2": "c1nc(C=O)c(Br)cc1Cl", "answer": "[(0, 2), (1, 3), (2, 4), (3, 1), (4, 0), (5, 8), (6, 9), (7, 7), (8, 5), (9, 6)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C=O)ncc(Cl)cc1Br\n\nMolecule 2: c1nc(C=O)c(Br)cc1Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 1), (4, 0), (5, 8), (6, 9), (7, 7), (8, 5), (9, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "d8037117-3232-4abd-82d0-46c7d3cf56dd", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "O=c1[nH]c2cc(Cl)ccc2s1", "smiles1": "c12cc(Cl)ccc1sc(=O)[nH]2", "smiles2": "c1cc2sc(=O)[nH]c2cc1Cl", "answer": "[(0, 7), (1, 8), (2, 9), (3, 10), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5), (10, 6)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c12cc(Cl)ccc1sc(=O)[nH]2\n\nMolecule 2: c1cc2sc(=O)[nH]c2cc1Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 8), (2, 9), (3, 10), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5), (10, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "ab5aa816-418f-46d4-b7ee-82169d4fa198", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCC(O)C1CN(C)CCO1", "smiles1": "OC(CC)C1CN(C)CCO1", "smiles2": "CN1CCOC(C(O)CC)C1", "answer": "[(0, 7), (1, 6), (2, 8), (3, 9), (4, 5), (5, 10), (6, 1), (7, 0), (8, 2), (9, 3), (10, 4)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: OC(CC)C1CN(C)CCO1\n\nMolecule 2: CN1CCOC(C(O)CC)C1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 6), (2, 8), (3, 9), (4, 5), (5, 10), (6, 1), (7, 0), (8, 2), (9, 3), (10, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e96e2d32-3b4f-4fc0-94f2-61bd1ed55dc1", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc(C(=O)CCl)sc1C", "smiles1": "c1(C(=O)CCl)cc(C)c(C)s1", "smiles2": "ClCC(=O)c1cc(C)c(C)s1", "answer": "[(0, 4), (1, 2), (2, 3), (3, 1), (4, 0), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C(=O)CCl)cc(C)c(C)s1\n\nMolecule 2: ClCC(=O)c1cc(C)c(C)s1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 2), (2, 3), (3, 1), (4, 0), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "1461d4bb-3f25-421f-8c45-9f6713ec8e81", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc(Br)cc2cn(C)nc12", "smiles1": "n1(C)cc2cc(Br)cc(C)c2n1", "smiles2": "c12nn(C)cc1cc(Br)cc2C", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 9), (8, 10), (9, 11), (10, 0), (11, 1)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1(C)cc2cc(Br)cc(C)c2n1\n\nMolecule 2: c12nn(C)cc1cc(Br)cc2C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 9), (8, 10), (9, 11), (10, 0), (11, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "1885f889-a2df-4eb2-acf5-2ac9c5f0af99", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCC1CC1(O)c1cscn1", "smiles1": "c1scnc1C1(O)CC1CCC", "smiles2": "n1cscc1C1(O)CC1CCC", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1scnc1C1(O)CC1CCC\n\nMolecule 2: n1cscc1C1(O)CC1CCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5043b0b4-3811-4144-bf97-3705cb798189", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Brc1nccc(-n2cccn2)n1", "smiles1": "c1cnn(-c2ccnc(Br)n2)c1", "smiles2": "n1c(-n2cccn2)ccnc1Br", "answer": "[(0, 4), (1, 5), (2, 6), (3, 2), (4, 1), (5, 7), (6, 8), (7, 9), (8, 10), (9, 11), (10, 0), (11, 3)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cnn(-c2ccnc(Br)n2)c1\n\nMolecule 2: n1c(-n2cccn2)ccnc1Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 5), (2, 6), (3, 2), (4, 1), (5, 7), (6, 8), (7, 9), (8, 10), (9, 11), (10, 0), (11, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5e5ce2ca-27b1-48bf-a75a-31dc7353a9e4", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCC(O)(COC)c1cscc1Br", "smiles1": "C(OC)C(O)(CC)c1cscc1Br", "smiles2": "c1scc(C(O)(CC)COC)c1Br", "answer": "[(0, 8), (1, 9), (2, 10), (3, 4), (4, 5), (5, 6), (6, 7), (7, 3), (8, 2), (9, 1), (10, 0), (11, 11), (12, 12)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(OC)C(O)(CC)c1cscc1Br\n\nMolecule 2: c1scc(C(O)(CC)COC)c1Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 10), (3, 4), (4, 5), (5, 6), (6, 7), (7, 3), (8, 2), (9, 1), (10, 0), (11, 11), (12, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "a9c64498-1fc7-4fa7-894f-087f12de530f", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCC(=O)NC1CCCC(C)C1C", "smiles1": "N(C(=O)CC)C1CCCC(C)C1C", "smiles2": "CC1CCCC(NC(=O)CC)C1C", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 5), (6, 4), (7, 3), (8, 2), (9, 1), (10, 0), (11, 11), (12, 12)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(C(=O)CC)C1CCCC(C)C1C\n\nMolecule 2: CC1CCCC(NC(=O)CC)C1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 5), (6, 4), (7, 3), (8, 2), (9, 1), (10, 0), (11, 11), (12, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c06958a2-d573-4782-8d85-6e3a025c8367", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCCOc1cc(C)c(N)cn1", "smiles1": "O(CCCC)c1cc(C)c(N)cn1", "smiles2": "Nc1cnc(OCCCC)cc1C", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 9), (5, 4), (6, 10), (7, 11), (8, 12), (9, 1), (10, 0), (11, 2), (12, 3)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O(CCCC)c1cc(C)c(N)cn1\n\nMolecule 2: Nc1cnc(OCCCC)cc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 9), (5, 4), (6, 10), (7, 11), (8, 12), (9, 1), (10, 0), (11, 2), (12, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0d644bb4-bdcd-4787-998a-cb2ed7c8df56", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCOC(=O)C(=NO)c1csc(N)n1", "smiles1": "C(=NO)(C(=O)OCC)c1csc(N)n1", "smiles2": "c1sc(N)nc1C(=NO)C(=O)OCC", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 13), (8, 5), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(=NO)(C(=O)OCC)c1csc(N)n1\n\nMolecule 2: c1sc(N)nc1C(=NO)C(=O)OCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 13), (8, 5), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "94e42023-8652-4059-bc8d-eb45df74bbda", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CONC(=O)CSc1ccccc1C", "smiles1": "C(Sc1ccccc1C)C(=O)NOC", "smiles2": "c1ccc(C)c(SCC(=O)NOC)c1", "answer": "[(0, 7), (1, 6), (2, 5), (3, 13), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(Sc1ccccc1C)C(=O)NOC\n\nMolecule 2: c1ccc(C)c(SCC(=O)NOC)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 6), (2, 5), (3, 13), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 8), (10, 9), (11, 10), (12, 11), (13, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "3d607282-ee2b-4648-b0c9-45fde7fc0b9c", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CN(Cc1cncs1)CC1CCOC1", "smiles1": "n1csc(CN(C)CC2CCOC2)c1", "smiles2": "C1(CN(C)Cc2cncs2)CCOC1", "answer": "[(0, 7), (1, 8), (2, 9), (3, 5), (4, 4), (5, 2), (6, 3), (7, 1), (8, 0), (9, 10), (10, 11), (11, 12), (12, 13), (13, 6)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1csc(CN(C)CC2CCOC2)c1\n\nMolecule 2: C1(CN(C)Cc2cncs2)CCOC1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 8), (2, 9), (3, 5), (4, 4), (5, 2), (6, 3), (7, 1), (8, 0), (9, 10), (10, 11), (11, 12), (12, 13), (13, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "7b8d1668-f84c-4298-b7c7-f21cc7abe033", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCOc1cc(Br)c2c(c1)C(O)CCC2", "smiles1": "c1(Br)cc(OCC)cc2c1CCCC2O", "smiles2": "OC1CCCc2c(Br)cc(OCC)cc21", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 13), (8, 14), (9, 5), (10, 4), (11, 3), (12, 2), (13, 1), (14, 0)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(Br)cc(OCC)cc2c1CCCC2O\n\nMolecule 2: OC1CCCc2c(Br)cc(OCC)cc21\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 7), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 13), (8, 14), (9, 5), (10, 4), (11, 3), (12, 2), (13, 1), (14, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "17742b90-dc56-406f-9671-4540e702ca64", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC1(CNc2ncccc2Br)CCCO1", "smiles1": "n1cccc(Br)c1NCC1(C)CCCO1", "smiles2": "C1CCOC1(C)CNc1ncccc1Br", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 8), (7, 7), (8, 6), (9, 4), (10, 5), (11, 0), (12, 1), (13, 2), (14, 3)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1cccc(Br)c1NCC1(C)CCCO1\n\nMolecule 2: C1CCOC1(C)CNc1ncccc1Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 8), (7, 7), (8, 6), (9, 4), (10, 5), (11, 0), (12, 1), (13, 2), (14, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "61826b4d-a8e7-43e0-bbd6-bf11d07a5edd", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC(C#N)N(C)Cc1cc(F)cc(Br)c1", "smiles1": "CN(Cc1cc(F)cc(Br)c1)C(C)C#N", "smiles2": "c1c(F)cc(CN(C)C(C)C#N)cc1Br", "answer": "[(0, 7), (1, 6), (2, 5), (3, 4), (4, 3), (5, 1), (6, 2), (7, 0), (8, 13), (9, 14), (10, 12), (11, 8), (12, 9), (13, 10), (14, 11)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CN(Cc1cc(F)cc(Br)c1)C(C)C#N\n\nMolecule 2: c1c(F)cc(CN(C)C(C)C#N)cc1Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 6), (2, 5), (3, 4), (4, 3), (5, 1), (6, 2), (7, 0), (8, 13), (9, 14), (10, 12), (11, 8), (12, 9), (13, 10), (14, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "8bd157e0-4d47-4ea4-8714-7c46129b81f8", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCCOCCSc1ccc(N)c(C)c1", "smiles1": "CCCCOCCSc1ccc(N)c(C)c1", "smiles2": "c1cc(SCCOCCCC)cc(C)c1N", "answer": "[(0, 10), (1, 9), (2, 8), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 2), (9, 1), (10, 0), (11, 14), (12, 15), (13, 12), (14, 13), (15, 11)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CCCCOCCSc1ccc(N)c(C)c1\n\nMolecule 2: c1cc(SCCOCCCC)cc(C)c1N\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 9), (2, 8), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 2), (9, 1), (10, 0), (11, 14), (12, 15), (13, 12), (14, 13), (15, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "cfabc06a-e53b-4463-8224-739c17ec780c", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCC(C#N)OC(=O)c1ccc(C)c(Cl)c1", "smiles1": "CCC(C#N)OC(=O)c1ccc(C)c(Cl)c1", "smiles2": "c1cc(C(=O)OC(C#N)CC)cc(Cl)c1C", "answer": "[(0, 10), (1, 9), (2, 6), (3, 7), (4, 8), (5, 5), (6, 3), (7, 4), (8, 2), (9, 1), (10, 0), (11, 14), (12, 15), (13, 12), (14, 13), (15, 11)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CCC(C#N)OC(=O)c1ccc(C)c(Cl)c1\n\nMolecule 2: c1cc(C(=O)OC(C#N)CC)cc(Cl)c1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 9), (2, 6), (3, 7), (4, 8), (5, 5), (6, 3), (7, 4), (8, 2), (9, 1), (10, 0), (11, 14), (12, 15), (13, 12), (14, 13), (15, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b1d725a1-0633-42b5-bc20-bb28e7364ea5", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCC(C#N)NC(=O)c1cccc(OC)c1", "smiles1": "CCC(C#N)NC(=O)c1cccc(OC)c1", "smiles2": "c1cc(OC)cc(C(=O)NC(C#N)CC)c1", "answer": "[(0, 14), (1, 13), (2, 10), (3, 11), (4, 12), (5, 9), (6, 7), (7, 8), (8, 6), (9, 15), (10, 0), (11, 1), (12, 2), (13, 3), (14, 4), (15, 5)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CCC(C#N)NC(=O)c1cccc(OC)c1\n\nMolecule 2: c1cc(OC)cc(C(=O)NC(C#N)CC)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 14), (1, 13), (2, 10), (3, 11), (4, 12), (5, 9), (6, 7), (7, 8), (8, 6), (9, 15), (10, 0), (11, 1), (12, 2), (13, 3), (14, 4), (15, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "ad9c5445-6b88-4b58-b5f9-eea7e1ee116a", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "COc1nc(C)cc(=O)n1Cc1cccnc1", "smiles1": "O(C)c1nc(C)cc(=O)n1Cc1cccnc1", "smiles2": "n1(Cc2cccnc2)c(OC)nc(C)cc1=O", "answer": "[(0, 9), (1, 10), (2, 8), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 16), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O(C)c1nc(C)cc(=O)n1Cc1cccnc1\n\nMolecule 2: n1(Cc2cccnc2)c(OC)nc(C)cc1=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 10), (2, 8), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 16), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "8b433670-7c4d-4555-9a9d-93e892ab88c6", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "NC(=O)NC(=O)COC(=O)c1ccccc1Br", "smiles1": "C(N)(=O)NC(=O)COC(=O)c1ccccc1Br", "smiles2": "O=C(OCC(=O)NC(N)=O)c1ccccc1Br", "answer": "[(0, 7), (1, 8), (2, 9), (3, 6), (4, 4), (5, 5), (6, 3), (7, 2), (8, 1), (9, 0), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(N)(=O)NC(=O)COC(=O)c1ccccc1Br\n\nMolecule 2: O=C(OCC(=O)NC(N)=O)c1ccccc1Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 8), (2, 9), (3, 6), (4, 4), (5, 5), (6, 3), (7, 2), (8, 1), (9, 0), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e5ae4f11-e2e0-4742-9870-7d8357932923", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "N#Cc1c(F)cccc1Sc1ccc(Cl)cn1", "smiles1": "C(#N)c1c(F)cccc1Sc1ccc(Cl)cn1", "smiles2": "S(c1ccc(Cl)cn1)c1cccc(F)c1C#N", "answer": "[(0, 15), (1, 16), (2, 14), (3, 12), (4, 13), (5, 11), (6, 10), (7, 9), (8, 8), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(#N)c1c(F)cccc1Sc1ccc(Cl)cn1\n\nMolecule 2: S(c1ccc(Cl)cn1)c1cccc(F)c1C#N\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 16), (2, 14), (3, 12), (4, 13), (5, 11), (6, 10), (7, 9), (8, 8), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f35111e9-0e4b-4ae5-b7be-c7dba50b2196", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc(-c2nc3c(s2)C(=O)CCC3)ccc1Br", "smiles1": "C1CCc2nc(-c3ccc(Br)c(C)c3)sc2C1=O", "smiles2": "c1(Br)ccc(-c2nc3c(s2)C(=O)CCC3)cc1C", "answer": "[(0, 12), (1, 13), (2, 14), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 2), (9, 0), (10, 1), (11, 16), (12, 17), (13, 15), (14, 9), (15, 8), (16, 10), (17, 11)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1CCc2nc(-c3ccc(Br)c(C)c3)sc2C1=O\n\nMolecule 2: c1(Br)ccc(-c2nc3c(s2)C(=O)CCC3)cc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 13), (2, 14), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 2), (9, 0), (10, 1), (11, 16), (12, 17), (13, 15), (14, 9), (15, 8), (16, 10), (17, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "71c4bcb3-2a10-4d9b-b103-76482e7585e3", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc2c(NC(C)C3CCOC3)ncnc2s1", "smiles1": "O1CCC(C(C)Nc2ncnc3sc(C)cc23)C1", "smiles2": "c12ncnc(NC(C)C3CCOC3)c1cc(C)s2", "answer": "[(0, 11), (1, 10), (2, 9), (3, 8), (4, 6), (5, 7), (6, 5), (7, 4), (8, 3), (9, 2), (10, 1), (11, 0), (12, 17), (13, 15), (14, 16), (15, 14), (16, 13), (17, 12)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O1CCC(C(C)Nc2ncnc3sc(C)cc23)C1\n\nMolecule 2: c12ncnc(NC(C)C3CCOC3)c1cc(C)s2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 11), (1, 10), (2, 9), (3, 8), (4, 6), (5, 7), (6, 5), (7, 4), (8, 3), (9, 2), (10, 1), (11, 0), (12, 17), (13, 15), (14, 16), (15, 14), (16, 13), (17, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "dd4884fd-ec9f-4583-a929-a3213161519f", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1[nH]nc(C(N)=O)c1NC(=O)C1CCOC1C", "smiles1": "O=C(Nc1c(C(N)=O)n[nH]c1C)C1CCOC1C", "smiles2": "C1(C)OCCC1C(=O)Nc1c(C(N)=O)n[nH]c1C", "answer": "[(0, 7), (1, 6), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 13), (8, 14), (9, 15), (10, 16), (11, 17), (12, 5), (13, 4), (14, 3), (15, 2), (16, 0), (17, 1)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O=C(Nc1c(C(N)=O)n[nH]c1C)C1CCOC1C\n\nMolecule 2: C1(C)OCCC1C(=O)Nc1c(C(N)=O)n[nH]c1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 6), (2, 8), (3, 9), (4, 10), (5, 11), (6, 12), (7, 13), (8, 14), (9, 15), (10, 16), (11, 17), (12, 5), (13, 4), (14, 3), (15, 2), (16, 0), (17, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e9be1e66-72da-4182-9bb1-9b103822a6bd", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCNC(=O)c1nc(-c2ccc3c(c2)OCO3)no1", "smiles1": "N(CC)C(=O)c1nc(-c2ccc3c(c2)OCO3)no1", "smiles2": "c1cc(-c2noc(C(=O)NCC)n2)cc2c1OCO2", "answer": "[(0, 9), (1, 10), (2, 11), (3, 7), (4, 8), (5, 6), (6, 12), (7, 3), (8, 2), (9, 1), (10, 0), (11, 15), (12, 14), (13, 13), (14, 18), (15, 17), (16, 16), (17, 4), (18, 5)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(CC)C(=O)c1nc(-c2ccc3c(c2)OCO3)no1\n\nMolecule 2: c1cc(-c2noc(C(=O)NCC)n2)cc2c1OCO2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 10), (2, 11), (3, 7), (4, 8), (5, 6), (6, 12), (7, 3), (8, 2), (9, 1), (10, 0), (11, 15), (12, 14), (13, 13), (14, 18), (15, 17), (16, 16), (17, 4), (18, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "2eeb1fd5-6ecd-4da9-893d-0bc66347106c", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Oc1ccc(Cl)cc1CNc1ccc2c(c1)CCC2", "smiles1": "c1cc(Cl)cc(CNc2ccc3c(c2)CCC3)c1O", "smiles2": "c1(NCc2cc(Cl)ccc2O)ccc2c(c1)CCC2", "answer": "[(0, 8), (1, 7), (2, 5), (3, 6), (4, 4), (5, 3), (6, 2), (7, 1), (8, 0), (9, 11), (10, 12), (11, 13), (12, 14), (13, 15), (14, 16), (15, 17), (16, 18), (17, 9), (18, 10)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cc(Cl)cc(CNc2ccc3c(c2)CCC3)c1O\n\nMolecule 2: c1(NCc2cc(Cl)ccc2O)ccc2c(c1)CCC2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 7), (2, 5), (3, 6), (4, 4), (5, 3), (6, 2), (7, 1), (8, 0), (9, 11), (10, 12), (11, 13), (12, 14), (13, 15), (14, 16), (15, 17), (16, 18), (17, 9), (18, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "fb7018ca-4cea-49a1-bc6b-a542a0fa93e1", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCN1c2ncccc2NC(=O)c2cc(Br)cnc21", "smiles1": "N1(CC)c2ncccc2NC(=O)c2cc(Br)cnc21", "smiles2": "C1(=O)Nc2cccnc2N(CC)c2ncc(Br)cc21", "answer": "[(0, 9), (1, 10), (2, 11), (3, 8), (4, 7), (5, 6), (6, 5), (7, 4), (8, 3), (9, 2), (10, 0), (11, 1), (12, 18), (13, 17), (14, 15), (15, 16), (16, 14), (17, 13), (18, 12)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N1(CC)c2ncccc2NC(=O)c2cc(Br)cnc21\n\nMolecule 2: C1(=O)Nc2cccnc2N(CC)c2ncc(Br)cc21\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 10), (2, 11), (3, 8), (4, 7), (5, 6), (6, 5), (7, 4), (8, 3), (9, 2), (10, 0), (11, 1), (12, 18), (13, 17), (14, 15), (15, 16), (16, 14), (17, 13), (18, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b6761035-08a0-4d83-8a9d-654df9104a52", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1c(CCC(=O)OC(C)c2ccc(Cl)s2)cnn1C", "smiles1": "Cc1c(CCC(=O)OC(C)c2ccc(Cl)s2)cnn1C", "smiles2": "C(CC(=O)OC(C)c1ccc(Cl)s1)c1cnn(C)c1C", "answer": "[(0, 19), (1, 18), (2, 13), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 14), (17, 15), (18, 16), (19, 17)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Cc1c(CCC(=O)OC(C)c2ccc(Cl)s2)cnn1C\n\nMolecule 2: C(CC(=O)OC(C)c1ccc(Cl)s1)c1cnn(C)c1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 19), (1, 18), (2, 13), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 14), (17, 15), (18, 16), (19, 17)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "1c3d419a-00e0-49e6-8f41-9a2ef1613c0f", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCCCCNC(=O)C(=O)Nc1ccc(C)c(Cl)c1", "smiles1": "CCCCCCNC(=O)C(=O)Nc1ccc(C)c(Cl)c1", "smiles2": "C(CCC)CCNC(=O)C(=O)Nc1ccc(C)c(Cl)c1", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CCCCCCNC(=O)C(=O)Nc1ccc(C)c(Cl)c1\n\nMolecule 2: C(CCC)CCNC(=O)C(=O)Nc1ccc(C)c(Cl)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0e1a19d4-89ce-45b2-88e7-7c0b56e3c474", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC1Cc2cc(C(=O)Cc3ccccc3Cl)ccc2O1", "smiles1": "CC1Cc2cc(C(=O)Cc3ccccc3Cl)ccc2O1", "smiles2": "c12cc(C(=O)Cc3ccccc3Cl)ccc1OC(C)C2", "answer": "[(0, 18), (1, 17), (2, 19), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CC1Cc2cc(C(=O)Cc3ccccc3Cl)ccc2O1\n\nMolecule 2: c12cc(C(=O)Cc3ccccc3Cl)ccc1OC(C)C2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 18), (1, 17), (2, 19), (3, 0), (4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f5345f1f-1d4d-47db-8d3f-81a4e77f7333", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCOc1ccc(NC(=O)N(C)CCC(C)O)cc1OC", "smiles1": "C(C)Oc1ccc(NC(=O)N(C)CCC(C)O)cc1OC", "smiles2": "O(C)c1cc(NC(=O)N(C)CCC(C)O)ccc1OCC", "answer": "[(0, 19), (1, 20), (2, 18), (3, 17), (4, 16), (5, 15), (6, 4), (7, 5), (8, 6), (9, 7), (10, 8), (11, 9), (12, 10), (13, 11), (14, 12), (15, 13), (16, 14), (17, 3), (18, 2), (19, 0), (20, 1)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C)Oc1ccc(NC(=O)N(C)CCC(C)O)cc1OC\n\nMolecule 2: O(C)c1cc(NC(=O)N(C)CCC(C)O)ccc1OCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 19), (1, 20), (2, 18), (3, 17), (4, 16), (5, 15), (6, 4), (7, 5), (8, 6), (9, 7), (10, 8), (11, 9), (12, 10), (13, 11), (14, 12), (15, 13), (16, 14), (17, 3), (18, 2), (19, 0), (20, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "636681e9-97e3-48d7-8955-f2ee7bb68fd3", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "COc1ccccc1OCC(=O)NCc1nc(C)c(C)s1", "smiles1": "O(C)c1ccccc1OCC(=O)NCc1nc(C)c(C)s1", "smiles2": "Cc1sc(CNC(=O)COc2ccccc2OC)nc1C", "answer": "[(0, 16), (1, 17), (2, 15), (3, 14), (4, 13), (5, 12), (6, 11), (7, 10), (8, 9), (9, 8), (10, 6), (11, 7), (12, 5), (13, 4), (14, 3), (15, 18), (16, 19), (17, 20), (18, 1), (19, 0), (20, 2)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O(C)c1ccccc1OCC(=O)NCc1nc(C)c(C)s1\n\nMolecule 2: Cc1sc(CNC(=O)COc2ccccc2OC)nc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 17), (2, 15), (3, 14), (4, 13), (5, 12), (6, 11), (7, 10), (8, 9), (9, 8), (10, 6), (11, 7), (12, 5), (13, 4), (14, 3), (15, 18), (16, 19), (17, 20), (18, 1), (19, 0), (20, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b7f04c23-3106-44de-bfaf-f849c2aeaff9", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1ccc(F)c(NC(=O)C(=O)NCC2CC=CCC2)c1", "smiles1": "c1(C)ccc(F)c(NC(=O)C(=O)NCC2CC=CCC2)c1", "smiles2": "C1CC=CCC1CNC(=O)C(=O)Nc1cc(C)ccc1F", "answer": "[(0, 15), (1, 16), (2, 17), (3, 18), (4, 19), (5, 20), (6, 13), (7, 12), (8, 10), (9, 11), (10, 8), (11, 9), (12, 7), (13, 6), (14, 5), (15, 4), (16, 3), (17, 2), (18, 1), (19, 0), (20, 14)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C)ccc(F)c(NC(=O)C(=O)NCC2CC=CCC2)c1\n\nMolecule 2: C1CC=CCC1CNC(=O)C(=O)Nc1cc(C)ccc1F\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 16), (2, 17), (3, 18), (4, 19), (5, 20), (6, 13), (7, 12), (8, 10), (9, 11), (10, 8), (11, 9), (12, 7), (13, 6), (14, 5), (15, 4), (16, 3), (17, 2), (18, 1), (19, 0), (20, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f8ff5039-5fdf-4a78-a858-a2cd8a088c18", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc(CSCc2coc(-c3cccc(F)c3)n2)no1", "smiles1": "c1(C)cc(CSCc2coc(-c3cccc(F)c3)n2)no1", "smiles2": "n1oc(C)cc1CSCc1coc(-c2cccc(F)c2)n1", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14), (13, 15), (14, 16), (15, 17), (16, 18), (17, 19), (18, 20), (19, 0), (20, 1)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C)cc(CSCc2coc(-c3cccc(F)c3)n2)no1\n\nMolecule 2: n1oc(C)cc1CSCc1coc(-c2cccc(F)c2)n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 9), (8, 10), (9, 11), (10, 12), (11, 13), (12, 14), (13, 15), (14, 16), (15, 17), (16, 18), (17, 19), (18, 20), (19, 0), (20, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9d9c713c-ef53-45dc-b63b-ad0b2756b897", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc(F)cc2[nH]c(C(=O)N3CCC(C)C(O)C3)cc12", "smiles1": "c1(C)cc(F)cc2[nH]c(C(=O)N3CCC(C)C(O)C3)cc12", "smiles2": "c1c(C(=O)N2CCC(C)C(O)C2)[nH]c2cc(F)cc(C)c12", "answer": "[(0, 18), (1, 19), (2, 17), (3, 15), (4, 16), (5, 14), (6, 13), (7, 12), (8, 1), (9, 2), (10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10), (18, 11), (19, 0), (20, 20)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C)cc(F)cc2[nH]c(C(=O)N3CCC(C)C(O)C3)cc12\n\nMolecule 2: c1c(C(=O)N2CCC(C)C(O)C2)[nH]c2cc(F)cc(C)c12\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 18), (1, 19), (2, 17), (3, 15), (4, 16), (5, 14), (6, 13), (7, 12), (8, 1), (9, 2), (10, 3), (11, 4), (12, 5), (13, 6), (14, 7), (15, 8), (16, 9), (17, 10), (18, 11), (19, 0), (20, 20)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b344cdd8-2e9b-4a8a-958c-a3c0e6e82a16", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1ccn2c(=O)c(C(=O)N(C)CC3CCCO3)cnc2c1", "smiles1": "c1cn2c(=O)c(C(=O)N(C)CC3CCCO3)cnc2cc1C", "smiles2": "O=c1c(C(=O)N(C)CC2CCCO2)cnc2cc(C)ccn12", "answer": "[(0, 19), (1, 20), (2, 21), (3, 1), (4, 0), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16), (20, 17), (21, 18)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cn2c(=O)c(C(=O)N(C)CC3CCCO3)cnc2cc1C\n\nMolecule 2: O=c1c(C(=O)N(C)CC2CCCO2)cnc2cc(C)ccn12\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 19), (1, 20), (2, 21), (3, 1), (4, 0), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 15), (19, 16), (20, 17), (21, 18)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "1816e356-a9c3-4bef-9cb3-86e9ab3fb5cd", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCSC1CCC(NC(=O)C(=O)Nc2ccc(F)c(Cl)c2)C1", "smiles1": "S(CC)C1CCC(NC(=O)C(=O)Nc2ccc(F)c(Cl)c2)C1", "smiles2": "C1(NC(=O)C(=O)Nc2ccc(F)c(Cl)c2)CCC(SCC)C1", "answer": "[(0, 18), (1, 19), (2, 20), (3, 17), (4, 16), (5, 15), (6, 0), (7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11), (18, 12), (19, 13), (20, 14), (21, 21)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: S(CC)C1CCC(NC(=O)C(=O)Nc2ccc(F)c(Cl)c2)C1\n\nMolecule 2: C1(NC(=O)C(=O)Nc2ccc(F)c(Cl)c2)CCC(SCC)C1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 18), (1, 19), (2, 20), (3, 17), (4, 16), (5, 15), (6, 0), (7, 1), (8, 2), (9, 3), (10, 4), (11, 5), (12, 6), (13, 7), (14, 8), (15, 9), (16, 10), (17, 11), (18, 12), (19, 13), (20, 14), (21, 21)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "ce1e59fe-b39d-4f6e-9f98-72e432c60d1d", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc(C(C)NC(=O)CCCN2C(=O)CNC2=O)c(C)s1", "smiles1": "c1c(C)sc(C)c1C(C)NC(=O)CCCN1C(=O)CNC1=O", "smiles2": "N(C(=O)CCCN1C(=O)CNC1=O)C(C)c1cc(C)sc1C", "answer": "[(0, 16), (1, 17), (2, 18), (3, 19), (4, 20), (5, 21), (6, 15), (7, 13), (8, 14), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7), (17, 8), (18, 9), (19, 10), (20, 11), (21, 12)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(C)sc(C)c1C(C)NC(=O)CCCN1C(=O)CNC1=O\n\nMolecule 2: N(C(=O)CCCN1C(=O)CNC1=O)C(C)c1cc(C)sc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 17), (2, 18), (3, 19), (4, 20), (5, 21), (6, 15), (7, 13), (8, 14), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7), (17, 8), (18, 9), (19, 10), (20, 11), (21, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c2ad36cb-6b71-4043-94a5-827bcbcbac14", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC1c2ccccc2OC1C(=O)NCc1ccc(C(N)=O)o1", "smiles1": "c12ccccc1OC(C(=O)NCc1ccc(C(N)=O)o1)C2C", "smiles2": "c1cccc2c1OC(C(=O)NCc1ccc(C(N)=O)o1)C2C", "answer": "[(0, 4), (1, 3), (2, 2), (3, 1), (4, 0), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c12ccccc1OC(C(=O)NCc1ccc(C(N)=O)o1)C2C\n\nMolecule 2: c1cccc2c1OC(C(=O)NCc1ccc(C(N)=O)o1)C2C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 3), (2, 2), (3, 1), (4, 0), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0c5a393d-b390-4fcb-a066-cef52288ae36", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "O=C(Cn1nnc(-c2cccs2)n1)Nc1cccc(Cl)c1Cl", "smiles1": "C(C(=O)Nc1cccc(Cl)c1Cl)n1nnc(-c2cccs2)n1", "smiles2": "c1(-c2cccs2)nnn(CC(=O)Nc2cccc(Cl)c2Cl)n1", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 19), (11, 20), (12, 8), (13, 7), (14, 6), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 21)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C(=O)Nc1cccc(Cl)c1Cl)n1nnc(-c2cccs2)n1\n\nMolecule 2: c1(-c2cccs2)nnn(CC(=O)Nc2cccc(Cl)c2Cl)n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 19), (11, 20), (12, 8), (13, 7), (14, 6), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 21)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "634f5777-ef2d-4d79-9eea-97480f481825", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "O=C(NCc1cc(-c2cccs2)on1)c1ccc2nsnc2c1", "smiles1": "c1(-c2cc(CNC(=O)c3ccc4nsnc4c3)no2)cccs1", "smiles2": "c1cc2nsnc2cc1C(=O)NCc1cc(-c2cccs2)on1", "answer": "[(0, 16), (1, 15), (2, 14), (3, 13), (4, 12), (5, 11), (6, 9), (7, 10), (8, 8), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7), (17, 22), (18, 21), (19, 17), (20, 18), (21, 19), (22, 20)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(-c2cc(CNC(=O)c3ccc4nsnc4c3)no2)cccs1\n\nMolecule 2: c1cc2nsnc2cc1C(=O)NCc1cc(-c2cccs2)on1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 15), (2, 14), (3, 13), (4, 12), (5, 11), (6, 9), (7, 10), (8, 8), (9, 0), (10, 1), (11, 2), (12, 3), (13, 4), (14, 5), (15, 6), (16, 7), (17, 22), (18, 21), (19, 17), (20, 18), (21, 19), (22, 20)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b9104e99-84f2-4b82-8803-ff400eb1d7c5", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CSc1cccc(NC(=O)C2CCCN2C(=O)c2cccs2)c1", "smiles1": "N(C(=O)C1CCCN1C(=O)c1cccs1)c1cccc(SC)c1", "smiles2": "C(=O)(c1cccs1)N1CCCC1C(=O)Nc1cccc(SC)c1", "answer": "[(0, 14), (1, 12), (2, 13), (3, 11), (4, 10), (5, 9), (6, 8), (7, 7), (8, 0), (9, 1), (10, 2), (11, 3), (12, 4), (13, 5), (14, 6), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(C(=O)C1CCCN1C(=O)c1cccs1)c1cccc(SC)c1\n\nMolecule 2: C(=O)(c1cccs1)N1CCCC1C(=O)Nc1cccc(SC)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 14), (1, 12), (2, 13), (3, 11), (4, 10), (5, 9), (6, 8), (7, 7), (8, 0), (9, 1), (10, 2), (11, 3), (12, 4), (13, 5), (14, 6), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "bcaad00c-323e-404e-824e-f7e92d884e49", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCOCC(=O)NNC(=O)c1sc2cccc(F)c2c1COC", "smiles1": "N(NC(=O)COCC)C(=O)c1sc2cccc(F)c2c1COC", "smiles2": "c1ccc2sc(C(=O)NNC(=O)COCC)c(COC)c2c1F", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 6), (9, 7), (10, 5), (11, 4), (12, 3), (13, 2), (14, 1), (15, 0), (16, 21), (17, 22), (18, 20), (19, 16), (20, 17), (21, 18), (22, 19)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(NC(=O)COCC)C(=O)c1sc2cccc(F)c2c1COC\n\nMolecule 2: c1ccc2sc(C(=O)NNC(=O)COCC)c(COC)c2c1F\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 6), (9, 7), (10, 5), (11, 4), (12, 3), (13, 2), (14, 1), (15, 0), (16, 21), (17, 22), (18, 20), (19, 16), (20, 17), (21, 18), (22, 19)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "80e0c3a7-cf25-4fa8-8be5-926a1cd1ee3a", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CC(=O)N1c2ccccc2CC1C(=O)Nc1cnc(Cl)c(C)c1", "smiles1": "c1ccc2c(c1)CC(C(=O)Nc1cnc(Cl)c(C)c1)N2C(C)=O", "smiles2": "c1(NC(=O)C2Cc3ccccc3N2C(C)=O)cnc(Cl)c(C)c1", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 6), (5, 7), (6, 5), (7, 4), (8, 2), (9, 3), (10, 1), (11, 0), (12, 16), (13, 17), (14, 18), (15, 19), (16, 20), (17, 21), (18, 22), (19, 12), (20, 13), (21, 14), (22, 15)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1ccc2c(c1)CC(C(=O)Nc1cnc(Cl)c(C)c1)N2C(C)=O\n\nMolecule 2: c1(NC(=O)C2Cc3ccccc3N2C(C)=O)cnc(Cl)c(C)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 6), (5, 7), (6, 5), (7, 4), (8, 2), (9, 3), (10, 1), (11, 0), (12, 16), (13, 17), (14, 18), (15, 19), (16, 20), (17, 21), (18, 22), (19, 12), (20, 13), (21, 14), (22, 15)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "871a79a0-b406-4e2d-b350-0f74245eb0b2", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "COC(=O)C1(NC(=O)c2coc(-c3csc(C)n3)c2)CCOC1", "smiles1": "O=C(NC1(C(=O)OC)CCOC1)c1coc(-c2csc(C)n2)c1", "smiles2": "c1(C)nc(-c2cc(C(=O)NC3(C(=O)OC)CCOC3)co2)cs1", "answer": "[(0, 8), (1, 7), (2, 9), (3, 10), (4, 11), (5, 12), (6, 13), (7, 14), (8, 15), (9, 16), (10, 17), (11, 18), (12, 6), (13, 19), (14, 20), (15, 4), (16, 3), (17, 21), (18, 22), (19, 0), (20, 1), (21, 2), (22, 5)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O=C(NC1(C(=O)OC)CCOC1)c1coc(-c2csc(C)n2)c1\n\nMolecule 2: c1(C)nc(-c2cc(C(=O)NC3(C(=O)OC)CCOC3)co2)cs1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 7), (2, 9), (3, 10), (4, 11), (5, 12), (6, 13), (7, 14), (8, 15), (9, 16), (10, 17), (11, 18), (12, 6), (13, 19), (14, 20), (15, 4), (16, 3), (17, 21), (18, 22), (19, 0), (20, 1), (21, 2), (22, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5250aaf7-6b0e-49b2-9e91-205b91a5c016", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1csc(C(C#N)C(=O)C2CC(=O)N(c3ccccc3Cl)C2)n1", "smiles1": "C1(C(=O)C(C#N)c2nc(C)cs2)CC(=O)N(c2ccccc2Cl)C1", "smiles2": "N1(c2ccccc2Cl)CC(C(=O)C(C#N)c2nc(C)cs2)CC1=O", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 19), (11, 20), (12, 21), (13, 22), (14, 23), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 6), (22, 7), (23, 8)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1(C(=O)C(C#N)c2nc(C)cs2)CC(=O)N(c2ccccc2Cl)C1\n\nMolecule 2: N1(c2ccccc2Cl)CC(C(=O)C(C#N)c2nc(C)cs2)CC1=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 19), (11, 20), (12, 21), (13, 22), (14, 23), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 6), (22, 7), (23, 8)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "30e161c2-6161-4b24-90cf-6e213e60bfba", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCc1ccc(CC)c(NC(=O)C(C)Oc2cccc(C=O)c2)c1", "smiles1": "C(=O)(Nc1cc(CC)ccc1CC)C(C)Oc1cccc(C=O)c1", "smiles2": "O(c1cccc(C=O)c1)C(C)C(=O)Nc1cc(CC)ccc1CC", "answer": "[(0, 11), (1, 12), (2, 13), (3, 14), (4, 15), (5, 16), (6, 17), (7, 18), (8, 19), (9, 20), (10, 21), (11, 22), (12, 23), (13, 9), (14, 10), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 6), (22, 7), (23, 8)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(=O)(Nc1cc(CC)ccc1CC)C(C)Oc1cccc(C=O)c1\n\nMolecule 2: O(c1cccc(C=O)c1)C(C)C(=O)Nc1cc(CC)ccc1CC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 11), (1, 12), (2, 13), (3, 14), (4, 15), (5, 16), (6, 17), (7, 18), (8, 19), (9, 20), (10, 21), (11, 22), (12, 23), (13, 9), (14, 10), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 6), (22, 7), (23, 8)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "4b3d098f-33da-4d85-b485-675c7ecc7cce", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCOc1ccccc1NC(=O)NC1CCCc2c1cnn2C", "smiles1": "N(C(=O)NC1CCCc2c1cnn2C)c1ccccc1OCCC", "smiles2": "C1(NC(=O)Nc2ccccc2OCCC)CCCc2c1cnn2C", "answer": "[(0, 4), (1, 2), (2, 3), (3, 1), (4, 0), (5, 15), (6, 16), (7, 17), (8, 18), (9, 19), (10, 20), (11, 21), (12, 22), (13, 23), (14, 5), (15, 6), (16, 7), (17, 8), (18, 9), (19, 10), (20, 11), (21, 12), (22, 13), (23, 14)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(C(=O)NC1CCCc2c1cnn2C)c1ccccc1OCCC\n\nMolecule 2: C1(NC(=O)Nc2ccccc2OCCC)CCCc2c1cnn2C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 2), (2, 3), (3, 1), (4, 0), (5, 15), (6, 16), (7, 17), (8, 18), (9, 19), (10, 20), (11, 21), (12, 22), (13, 23), (14, 5), (15, 6), (16, 7), (17, 8), (18, 9), (19, 10), (20, 11), (21, 12), (22, 13), (23, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b23a184f-fbd5-4b0c-bc5c-e860c3092986", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCc1cccc2c(CCNC(=O)CC3SC(N)=NC3=O)c[nH]c12", "smiles1": "N(CCc1c[nH]c2c(CC)cccc12)C(=O)CC1SC(N)=NC1=O", "smiles2": "C1(CC(=O)NCCc2c[nH]c3c(CC)cccc23)SC(N)=NC1=O", "answer": "[(0, 4), (1, 5), (2, 6), (3, 7), (4, 8), (5, 9), (6, 10), (7, 11), (8, 12), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 2), (15, 3), (16, 1), (17, 0), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(CCc1c[nH]c2c(CC)cccc12)C(=O)CC1SC(N)=NC1=O\n\nMolecule 2: C1(CC(=O)NCCc2c[nH]c3c(CC)cccc23)SC(N)=NC1=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 5), (2, 6), (3, 7), (4, 8), (5, 9), (6, 10), (7, 11), (8, 12), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 2), (15, 3), (16, 1), (17, 0), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e5529577-f0f0-4f8b-9ceb-f73d043523bf", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CN1C(=O)CC(C(=O)Nc2ccc3c(c2)OCO3)C1c1cccs1", "smiles1": "c1cc2c(cc1NC(=O)C1CC(=O)N(C)C1c1cccs1)OCO2", "smiles2": "c1c(NC(=O)C2CC(=O)N(C)C2c2cccs2)ccc2c1OCO2", "answer": "[(0, 17), (1, 18), (2, 19), (3, 20), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12), (17, 13), (18, 14), (19, 15), (20, 16), (21, 21), (22, 22), (23, 23)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cc2c(cc1NC(=O)C1CC(=O)N(C)C1c1cccs1)OCO2\n\nMolecule 2: c1c(NC(=O)C2CC(=O)N(C)C2c2cccs2)ccc2c1OCO2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 17), (1, 18), (2, 19), (3, 20), (4, 0), (5, 1), (6, 2), (7, 3), (8, 4), (9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 10), (15, 11), (16, 12), (17, 13), (18, 14), (19, 15), (20, 16), (21, 21), (22, 22), (23, 23)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "affff874-b7a1-42db-9bbf-4250a98f3d87", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCc1ccccc1Nc1nc(N)nc(CSCc2noc(C)n2)n1", "smiles1": "c1ccc(Nc2nc(N)nc(CSCc3noc(C)n3)n2)c(CC)c1", "smiles2": "c1(C)nc(CSCc2nc(N)nc(Nc3ccccc3CC)n2)no1", "answer": "[(0, 17), (1, 16), (2, 15), (3, 14), (4, 13), (5, 12), (6, 11), (7, 9), (8, 10), (9, 8), (10, 7), (11, 6), (12, 5), (13, 4), (14, 3), (15, 23), (16, 24), (17, 0), (18, 1), (19, 2), (20, 22), (21, 19), (22, 20), (23, 21), (24, 18)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1ccc(Nc2nc(N)nc(CSCc3noc(C)n3)n2)c(CC)c1\n\nMolecule 2: c1(C)nc(CSCc2nc(N)nc(Nc3ccccc3CC)n2)no1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 17), (1, 16), (2, 15), (3, 14), (4, 13), (5, 12), (6, 11), (7, 9), (8, 10), (9, 8), (10, 7), (11, 6), (12, 5), (13, 4), (14, 3), (15, 23), (16, 24), (17, 0), (18, 1), (19, 2), (20, 22), (21, 19), (22, 20), (23, 21), (24, 18)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "447bfeaf-4825-4db1-a745-dae85ae1b0ab", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1cc(C(=O)NCC2Cc3cc(-c4ccsc4)cc(Cl)c3O2)n[nH]1", "smiles1": "C(=O)(NCC1Cc2cc(-c3ccsc3)cc(Cl)c2O1)c1cc(C)[nH]n1", "smiles2": "c12c(Cl)cc(-c3ccsc3)cc1CC(CNC(=O)c1cc(C)[nH]n1)O2", "answer": "[(0, 16), (1, 17), (2, 15), (3, 14), (4, 13), (5, 12), (6, 11), (7, 10), (8, 4), (9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 3), (15, 1), (16, 2), (17, 0), (18, 24), (19, 18), (20, 19), (21, 20), (22, 21), (23, 22), (24, 23)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(=O)(NCC1Cc2cc(-c3ccsc3)cc(Cl)c2O1)c1cc(C)[nH]n1\n\nMolecule 2: c12c(Cl)cc(-c3ccsc3)cc1CC(CNC(=O)c1cc(C)[nH]n1)O2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 17), (2, 15), (3, 14), (4, 13), (5, 12), (6, 11), (7, 10), (8, 4), (9, 5), (10, 6), (11, 7), (12, 8), (13, 9), (14, 3), (15, 1), (16, 2), (17, 0), (18, 24), (19, 18), (20, 19), (21, 20), (22, 21), (23, 22), (24, 23)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0a231710-4b4e-4d96-8352-7518f55a0abd", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "Cc1nn(C)c2ncc(C(=O)N3CCc4c(F)ccc(F)c4C3)cc12", "smiles1": "Cn1nc(C)c2cc(C(=O)N3CCc4c(F)ccc(F)c4C3)cnc21", "smiles2": "c12c(F)ccc(F)c1CCN(C(=O)c1cnc3c(c1)c(C)nn3C)C2", "answer": "[(0, 23), (1, 22), (2, 21), (3, 19), (4, 20), (5, 17), (6, 18), (7, 13), (8, 11), (9, 12), (10, 10), (11, 9), (12, 8), (13, 7), (14, 5), (15, 6), (16, 4), (17, 3), (18, 1), (19, 2), (20, 0), (21, 24), (22, 14), (23, 15), (24, 16)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Cn1nc(C)c2cc(C(=O)N3CCc4c(F)ccc(F)c4C3)cnc21\n\nMolecule 2: c12c(F)ccc(F)c1CCN(C(=O)c1cnc3c(c1)c(C)nn3C)C2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 23), (1, 22), (2, 21), (3, 19), (4, 20), (5, 17), (6, 18), (7, 13), (8, 11), (9, 12), (10, 10), (11, 9), (12, 8), (13, 7), (14, 5), (15, 6), (16, 4), (17, 3), (18, 1), (19, 2), (20, 0), (21, 24), (22, 14), (23, 15), (24, 16)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "d5ec5d21-438a-4672-8c51-fb6ef045da31", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "O=C(c1ccccc1Cl)N(Cc1ccc(F)cc1Cl)c1ccccn1", "smiles1": "c1ccc(Cl)c(C(=O)N(Cc2ccc(F)cc2Cl)c2ccccn2)c1", "smiles2": "c1ccnc(N(Cc2ccc(F)cc2Cl)C(=O)c2ccccc2Cl)c1", "answer": "[(0, 19), (1, 20), (2, 21), (3, 22), (4, 23), (5, 17), (6, 15), (7, 16), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 4), (19, 24), (20, 0), (21, 1), (22, 2), (23, 3), (24, 18)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1ccc(Cl)c(C(=O)N(Cc2ccc(F)cc2Cl)c2ccccn2)c1\n\nMolecule 2: c1ccnc(N(Cc2ccc(F)cc2Cl)C(=O)c2ccccc2Cl)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 19), (1, 20), (2, 21), (3, 22), (4, 23), (5, 17), (6, 15), (7, 16), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11), (15, 12), (16, 13), (17, 14), (18, 4), (19, 24), (20, 0), (21, 1), (22, 2), (23, 3), (24, 18)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f3be5810-8f05-4372-a788-7bf40d4ba096", "question_category": "atom_mapping", "sub_category": "semi-canonical", "meta_data": {"smiles": "CCCNC(=O)c1cccc(NC(=O)COc2ccc(Br)cc2C)c1", "smiles1": "C(=O)(NCCC)c1cccc(NC(=O)COc2ccc(Br)cc2C)c1", "smiles2": "c1c(Br)ccc(OCC(=O)Nc2cccc(C(=O)NCCC)c2)c1C", "answer": "[(0, 16), (1, 17), (2, 18), (3, 19), (4, 20), (5, 21), (6, 15), (7, 14), (8, 13), (9, 12), (10, 11), (11, 10), (12, 8), (13, 9), (14, 7), (15, 6), (16, 5), (17, 4), (18, 3), (19, 1), (20, 2), (21, 0), (22, 23), (23, 24), (24, 22)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(=O)(NCCC)c1cccc(NC(=O)COc2ccc(Br)cc2C)c1\n\nMolecule 2: c1c(Br)ccc(OCC(=O)Nc2cccc(C(=O)NCCC)c2)c1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 17), (2, 18), (3, 19), (4, 20), (5, 21), (6, 15), (7, 14), (8, 13), (9, 12), (10, 11), (11, 10), (12, 8), (13, 9), (14, 7), (15, 6), (16, 5), (17, 4), (18, 3), (19, 1), (20, 2), (21, 0), (22, 23), (23, 24), (24, 22)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "61b46518-ddae-430b-8eb6-beee2b9a71fc", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cn1nccc1I", "smiles1": "c1(I)n(C)ncc1", "smiles2": "c1cnn(C)c1I", "answer": "[(0, 5), (1, 6), (2, 3), (3, 4), (4, 2), (5, 1), (6, 0)]", "n_atoms": 7}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(I)n(C)ncc1\n\nMolecule 2: c1cnn(C)c1I\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 6), (2, 3), (3, 4), (4, 2), (5, 1), (6, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "8fc9fcd9-96f1-4a95-9bc3-7785cd701a8a", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1scnc1Br", "smiles1": "c1nc(c(s1)C)Br", "smiles2": "s1cnc(Br)c1C", "answer": "[(0, 1), (1, 2), (2, 3), (3, 5), (4, 0), (5, 6), (6, 4)]", "n_atoms": 7}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1nc(c(s1)C)Br\n\nMolecule 2: s1cnc(Br)c1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 2), (2, 3), (3, 5), (4, 0), (5, 6), (6, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b28453d5-f5eb-4d52-a4c4-05a6759bef27", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cn1nc(Br)cc1N", "smiles1": "Nc1cc(Br)nn1C", "smiles2": "n1(C)c(N)cc(Br)n1", "answer": "[(0, 3), (1, 2), (2, 4), (3, 5), (4, 6), (5, 7), (6, 0), (7, 1)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Nc1cc(Br)nn1C\n\nMolecule 2: n1(C)c(N)cc(Br)n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 2), (2, 4), (3, 5), (4, 6), (5, 7), (6, 0), (7, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b34a8e17-10d1-45a2-a720-e038444025bc", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "FC1CCCCC1Br", "smiles1": "C1(CCCCC1F)Br", "smiles2": "C1CCC(C(C1)F)Br", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 5), (5, 4), (6, 6), (7, 7)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1(CCCCC1F)Br\n\nMolecule 2: C1CCC(C(C1)F)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 5), (5, 4), (6, 6), (7, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "35908d69-9ff3-4888-bb77-186bdebd2d76", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1nc(=O)[nH]cc1Br", "smiles1": "c1(nc([nH]cc1Br)=O)C", "smiles2": "c1([nH]cc(Br)c(C)n1)=O", "answer": "[(0, 5), (1, 7), (2, 0), (3, 1), (4, 2), (5, 3), (6, 4), (7, 8), (8, 6)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(nc([nH]cc1Br)=O)C\n\nMolecule 2: c1([nH]cc(Br)c(C)n1)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 7), (2, 0), (3, 1), (4, 2), (5, 3), (6, 4), (7, 8), (8, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "660f0f3a-6a79-4513-a231-8493cb0f148e", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "OCc1ccccc1I", "smiles1": "c1(c(cccc1)I)CO", "smiles2": "c1c(c(I)ccc1)CO", "answer": "[(0, 1), (1, 2), (2, 4), (3, 5), (4, 6), (5, 0), (6, 3), (7, 7), (8, 8)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(c(cccc1)I)CO\n\nMolecule 2: c1c(c(I)ccc1)CO\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 2), (2, 4), (3, 5), (4, 6), (5, 0), (6, 3), (7, 7), (8, 8)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "4914ce5d-74ea-46d2-b8e5-2cd94cca7fe0", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC(Br)c1ccccc1F", "smiles1": "c1ccc(C(C)Br)c(F)c1", "smiles2": "Fc1c(cccc1)C(C)Br", "answer": "[(0, 5), (1, 4), (2, 3), (3, 2), (4, 7), (5, 8), (6, 9), (7, 1), (8, 0), (9, 6)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1ccc(C(C)Br)c(F)c1\n\nMolecule 2: Fc1c(cccc1)C(C)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 4), (2, 3), (3, 2), (4, 7), (5, 8), (6, 9), (7, 1), (8, 0), (9, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9d8330ae-0d92-461e-9fa7-845e21e7f917", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCC(=O)c1cscc1Br", "smiles1": "c1(C(=O)CC)cscc1Br", "smiles2": "s1cc(Br)c(C(CC)=O)c1", "answer": "[(0, 4), (1, 5), (2, 8), (3, 6), (4, 7), (5, 9), (6, 0), (7, 1), (8, 2), (9, 3)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(C(=O)CC)cscc1Br\n\nMolecule 2: s1cc(Br)c(C(CC)=O)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 5), (2, 8), (3, 6), (4, 7), (5, 9), (6, 0), (7, 1), (8, 2), (9, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "8c4c2f52-3a0f-42bc-b5f7-1e68afe02ee0", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1ccc(C(=O)C(=O)Br)o1", "smiles1": "O=C(C(=O)c1oc(C)cc1)Br", "smiles2": "o1c(C)ccc1C(C(=O)Br)=O", "answer": "[(0, 8), (1, 7), (2, 6), (3, 10), (4, 5), (5, 0), (6, 1), (7, 2), (8, 3), (9, 4), (10, 9)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O=C(C(=O)c1oc(C)cc1)Br\n\nMolecule 2: o1c(C)ccc1C(C(=O)Br)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 7), (2, 6), (3, 10), (4, 5), (5, 0), (6, 1), (7, 2), (8, 3), (9, 4), (10, 9)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5bca4e49-ed37-4b3b-8097-fc722cbfe298", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC(O)CNc1nc(Br)cs1", "smiles1": "Brc1csc(NCC(C)O)n1", "smiles2": "C(Nc1scc(n1)Br)C(C)O", "answer": "[(0, 7), (1, 5), (2, 4), (3, 3), (4, 2), (5, 1), (6, 0), (7, 8), (8, 9), (9, 10), (10, 6)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Brc1csc(NCC(C)O)n1\n\nMolecule 2: C(Nc1scc(n1)Br)C(C)O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 5), (2, 4), (3, 3), (4, 2), (5, 1), (6, 0), (7, 8), (8, 9), (9, 10), (10, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c7b56e67-dfa3-4b10-ad1a-c5ab113196b1", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cscc1CNC(C)C#N", "smiles1": "c1(CNC(C#N)C)c(C)csc1", "smiles2": "Cc1c(csc1)CNC(C)C#N", "answer": "[(0, 2), (1, 6), (2, 7), (3, 8), (4, 10), (5, 11), (6, 9), (7, 1), (8, 0), (9, 5), (10, 4), (11, 3)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(CNC(C#N)C)c(C)csc1\n\nMolecule 2: Cc1c(csc1)CNC(C)C#N\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 6), (2, 7), (3, 8), (4, 10), (5, 11), (6, 9), (7, 1), (8, 0), (9, 5), (10, 4), (11, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e7b2b77d-311e-46d6-81fa-72093d9ca258", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCn1cc(CC)cc1C#N", "smiles1": "C(c1cc(CC)cn1CCC)#N", "smiles2": "CCCn1cc(CC)cc1C#N", "answer": "[(0, 10), (1, 9), (2, 8), (3, 5), (4, 6), (5, 7), (6, 4), (7, 3), (8, 2), (9, 1), (10, 0), (11, 11)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(c1cc(CC)cn1CCC)#N\n\nMolecule 2: CCCn1cc(CC)cc1C#N\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 9), (2, 8), (3, 5), (4, 6), (5, 7), (6, 4), (7, 3), (8, 2), (9, 1), (10, 0), (11, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "bacd71c3-dccf-452c-8e34-1ed271718157", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Nc1nc(-c2ccc(Cl)cn2)n[nH]1", "smiles1": "n1cc(ccc1-c1nc([nH]n1)N)Cl", "smiles2": "c1(-c2nc(N)[nH]n2)ccc(Cl)cn1", "answer": "[(0, 12), (1, 11), (2, 9), (3, 8), (4, 7), (5, 0), (6, 1), (7, 2), (8, 3), (9, 5), (10, 6), (11, 4), (12, 10)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1cc(ccc1-c1nc([nH]n1)N)Cl\n\nMolecule 2: c1(-c2nc(N)[nH]n2)ccc(Cl)cn1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 11), (2, 9), (3, 8), (4, 7), (5, 0), (6, 1), (7, 2), (8, 3), (9, 5), (10, 6), (11, 4), (12, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "3df4444b-6393-4446-8f19-e5816eff6521", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC1CCC(n2nnnc2N)C1C", "smiles1": "n1(C2CCC(C)C2C)nnnc1N", "smiles2": "n1n(C2C(C(C)CC2)C)c(nn1)N", "answer": "[(0, 1), (1, 2), (2, 7), (3, 6), (4, 4), (5, 5), (6, 3), (7, 8), (8, 0), (9, 11), (10, 10), (11, 9), (12, 12)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1(C2CCC(C)C2C)nnnc1N\n\nMolecule 2: n1n(C2C(C(C)CC2)C)c(nn1)N\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 2), (2, 7), (3, 6), (4, 4), (5, 5), (6, 3), (7, 8), (8, 0), (9, 11), (10, 10), (11, 9), (12, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b8bc8a9c-4909-4c45-a38e-c329a9951e0a", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1ccccc1Nc1n[nH]c(N)n1", "smiles1": "c1(c(C)cccc1)Nc1nc([nH]n1)N", "smiles2": "c1cccc(c1C)Nc1nc(N)[nH]n1", "answer": "[(0, 4), (1, 5), (2, 6), (3, 0), (4, 1), (5, 2), (6, 3), (7, 7), (8, 8), (9, 9), (10, 10), (11, 12), (12, 13), (13, 11)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(c(C)cccc1)Nc1nc([nH]n1)N\n\nMolecule 2: c1cccc(c1C)Nc1nc(N)[nH]n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 5), (2, 6), (3, 0), (4, 1), (5, 2), (6, 3), (7, 7), (8, 8), (9, 9), (10, 10), (11, 12), (12, 13), (13, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c41f3486-2e7a-465d-a995-35526e84525d", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "COc1cc(OC)c(OC)cc1CS", "smiles1": "c1c(OC)c(CS)cc(c1OC)OC", "smiles2": "SCc1c(OC)cc(OC)c(c1)OC", "answer": "[(0, 6), (1, 3), (2, 4), (3, 5), (4, 2), (5, 1), (6, 0), (7, 11), (8, 10), (9, 7), (10, 8), (11, 9), (12, 12), (13, 13)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(OC)c(CS)cc(c1OC)OC\n\nMolecule 2: SCc1c(OC)cc(OC)c(c1)OC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 3), (2, 4), (3, 5), (4, 2), (5, 1), (6, 0), (7, 11), (8, 10), (9, 7), (10, 8), (11, 9), (12, 12), (13, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5a02d726-06c2-4122-b7aa-bb01c8f0613d", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1ccc(NC2CSC(C)C2)cc1Br", "smiles1": "C1(CC(SC1)C)Nc1ccc(C)c(Br)c1", "smiles2": "CC1SCC(C1)Nc1ccc(c(Br)c1)C", "answer": "[(0, 4), (1, 5), (2, 1), (3, 2), (4, 3), (5, 0), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 14), (12, 11), (13, 12), (14, 13)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1(CC(SC1)C)Nc1ccc(C)c(Br)c1\n\nMolecule 2: CC1SCC(C1)Nc1ccc(c(Br)c1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 5), (2, 1), (3, 2), (4, 3), (5, 0), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 14), (12, 11), (13, 12), (14, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "37a7fc31-4658-49d7-b937-8ad37b6586ed", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1noc(C2CCCN(CC#N)C2)n1", "smiles1": "C1CCC(CN1CC#N)c1nc(no1)C", "smiles2": "C1N(CC#N)CC(CC1)c1onc(C)n1", "answer": "[(0, 0), (1, 8), (2, 7), (3, 6), (4, 5), (5, 1), (6, 2), (7, 3), (8, 4), (9, 9), (10, 14), (11, 12), (12, 11), (13, 10), (14, 13)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1CCC(CN1CC#N)c1nc(no1)C\n\nMolecule 2: C1N(CC#N)CC(CC1)c1onc(C)n1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 8), (2, 7), (3, 6), (4, 5), (5, 1), (6, 2), (7, 3), (8, 4), (9, 9), (10, 14), (11, 12), (12, 11), (13, 10), (14, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "6350d825-b145-4f06-81d2-bd07b09f2afa", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCC(C)CNC(=O)c1ccc(Br)cc1N", "smiles1": "c1(cc(c(cc1)C(=O)NCC(C)CC)N)Br", "smiles2": "CC(CC)CNC(=O)c1c(N)cc(Br)cc1", "answer": "[(0, 12), (1, 11), (2, 9), (3, 8), (4, 15), (5, 14), (6, 6), (7, 7), (8, 5), (9, 4), (10, 1), (11, 0), (12, 2), (13, 3), (14, 10), (15, 13)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(cc(c(cc1)C(=O)NCC(C)CC)N)Br\n\nMolecule 2: CC(CC)CNC(=O)c1c(N)cc(Br)cc1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 11), (2, 9), (3, 8), (4, 15), (5, 14), (6, 6), (7, 7), (8, 5), (9, 4), (10, 1), (11, 0), (12, 2), (13, 3), (14, 10), (15, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "48c1e1e4-3382-4b87-8cb4-69f36e2c3a60", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCc1cccc(NC2CCCSC2C)c1", "smiles1": "N(c1cccc(c1)CC)C1CCCSC1C", "smiles2": "c1cc(NC2C(SCCC2)C)cc(c1)CC", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 13), (5, 12), (6, 11), (7, 14), (8, 15), (9, 4), (10, 9), (11, 8), (12, 7), (13, 6), (14, 5), (15, 10)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(c1cccc(c1)CC)C1CCCSC1C\n\nMolecule 2: c1cc(NC2C(SCCC2)C)cc(c1)CC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 13), (5, 12), (6, 11), (7, 14), (8, 15), (9, 4), (10, 9), (11, 8), (12, 7), (13, 6), (14, 5), (15, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "78a5addd-9830-49f3-93c0-0f636419fd64", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC(O)c1cccc(OCc2ccc(Cl)s2)c1", "smiles1": "c1(cccc(C(C)O)c1)OCc1sc(Cl)cc1", "smiles2": "c1(cccc(c1)C(C)O)OCc1sc(cc1)Cl", "answer": "[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 6), (6, 7), (7, 8), (8, 5), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 16), (15, 14), (16, 15)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(cccc(C(C)O)c1)OCc1sc(Cl)cc1\n\nMolecule 2: c1(cccc(c1)C(C)O)OCc1sc(cc1)Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 6), (6, 7), (7, 8), (8, 5), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 16), (15, 14), (16, 15)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "4f093ee9-5d95-43f6-b828-6c9f35ef86ba", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCCC(O)C1(C#N)CCc2ccccc21", "smiles1": "OC(CCCC)C1(C#N)c2ccccc2CC1", "smiles2": "C(CC)CC(C1(CCc2c1cccc2)C#N)O", "answer": "[(0, 16), (1, 4), (2, 3), (3, 0), (4, 1), (5, 2), (6, 5), (7, 14), (8, 15), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 8), (15, 7), (16, 6)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: OC(CCCC)C1(C#N)c2ccccc2CC1\n\nMolecule 2: C(CC)CC(C1(CCc2c1cccc2)C#N)O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 4), (2, 3), (3, 0), (4, 1), (5, 2), (6, 5), (7, 14), (8, 15), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 8), (15, 7), (16, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "d37d7772-b1c4-4a2d-b574-b36204f37c29", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCNC(=O)CNC(=O)c1cccc(OC)c1F", "smiles1": "c1ccc(OC)c(c1C(=O)NCC(NCC)=O)F", "smiles2": "C(c1cccc(OC)c1F)(=O)NCC(NCC)=O", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 1), (8, 0), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 9)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1ccc(OC)c(c1C(=O)NCC(NCC)=O)F\n\nMolecule 2: C(c1cccc(OC)c1F)(=O)NCC(NCC)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 7), (6, 8), (7, 1), (8, 0), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 9)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9cf04d82-b201-4a7f-86cd-57027ab86d11", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "COC(=O)CCNC(=O)c1cc(Cl)cc(Br)c1O", "smiles1": "c1(Cl)cc(Br)c(c(c1)C(=O)NCCC(=O)OC)O", "smiles2": "O=C(NCCC(OC)=O)c1c(O)c(Br)cc(c1)Cl", "answer": "[(0, 15), (1, 17), (2, 14), (3, 12), (4, 13), (5, 10), (6, 9), (7, 16), (8, 1), (9, 0), (10, 2), (11, 3), (12, 4), (13, 5), (14, 8), (15, 6), (16, 7), (17, 11)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(Cl)cc(Br)c(c(c1)C(=O)NCCC(=O)OC)O\n\nMolecule 2: O=C(NCCC(OC)=O)c1c(O)c(Br)cc(c1)Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 17), (2, 14), (3, 12), (4, 13), (5, 10), (6, 9), (7, 16), (8, 1), (9, 0), (10, 2), (11, 3), (12, 4), (13, 5), (14, 8), (15, 6), (16, 7), (17, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "24af0865-4a40-4646-940b-02e228858321", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1n[nH]c(NCc2ccc3c(c2)OCO3)nc1=O", "smiles1": "N(Cc1cc2OCOc2cc1)c1[nH]nc(c(=O)n1)C", "smiles2": "c1(n[nH]c(nc1=O)NCc1ccc2c(c1)OCO2)C", "answer": "[(0, 7), (1, 8), (2, 9), (3, 14), (4, 13), (5, 15), (6, 16), (7, 17), (8, 12), (9, 11), (10, 10), (11, 3), (12, 2), (13, 1), (14, 0), (15, 5), (16, 6), (17, 4), (18, 18)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(Cc1cc2OCOc2cc1)c1[nH]nc(c(=O)n1)C\n\nMolecule 2: c1(n[nH]c(nc1=O)NCc1ccc2c(c1)OCO2)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 8), (2, 9), (3, 14), (4, 13), (5, 15), (6, 16), (7, 17), (8, 12), (9, 11), (10, 10), (11, 3), (12, 2), (13, 1), (14, 0), (15, 5), (16, 6), (17, 4), (18, 18)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "a070ac5c-3645-442c-b407-f8f81b7864d3", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "COC(C)CCOC(=O)C1CCOc2ccccc21", "smiles1": "C1COc2ccccc2C1C(=O)OCCC(OC)C", "smiles2": "O(C(C)CCOC(C1CCOc2c1cccc2)=O)C", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 16), (5, 15), (6, 14), (7, 13), (8, 12), (9, 7), (10, 6), (11, 17), (12, 5), (13, 4), (14, 3), (15, 1), (16, 0), (17, 18), (18, 2)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1COc2ccccc2C1C(=O)OCCC(OC)C\n\nMolecule 2: O(C(C)CCOC(C1CCOc2c1cccc2)=O)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 16), (5, 15), (6, 14), (7, 13), (8, 12), (9, 7), (10, 6), (11, 17), (12, 5), (13, 4), (14, 3), (15, 1), (16, 0), (17, 18), (18, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "d170138e-c17a-42dc-9e48-c176305deb6d", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CNc1ccc2nc(-c3ccc(F)c(F)c3F)[nH]c2n1", "smiles1": "Fc1ccc(c(F)c1F)-c1[nH]c2c(n1)ccc(NC)n2", "smiles2": "n1c2ccc(NC)nc2[nH]c1-c1c(c(F)c(F)cc1)F", "answer": "[(0, 16), (1, 15), (2, 17), (3, 18), (4, 11), (5, 12), (6, 19), (7, 13), (8, 14), (9, 10), (10, 9), (11, 8), (12, 1), (13, 0), (14, 2), (15, 3), (16, 4), (17, 5), (18, 6), (19, 7)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Fc1ccc(c(F)c1F)-c1[nH]c2c(n1)ccc(NC)n2\n\nMolecule 2: n1c2ccc(NC)nc2[nH]c1-c1c(c(F)c(F)cc1)F\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 15), (2, 17), (3, 18), (4, 11), (5, 12), (6, 19), (7, 13), (8, 14), (9, 10), (10, 9), (11, 8), (12, 1), (13, 0), (14, 2), (15, 3), (16, 4), (17, 5), (18, 6), (19, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9b1e918e-579c-4b82-9153-d30e8fabe738", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC1Oc2ccccc2OC1C(=O)NCc1cc[nH]n1", "smiles1": "c1c[nH]nc1CNC(=O)C1Oc2ccccc2OC1C", "smiles2": "O1c2ccccc2OC(C(NCc2cc[nH]n2)=O)C1C", "answer": "[(0, 13), (1, 14), (2, 15), (3, 16), (4, 12), (5, 11), (6, 10), (7, 9), (8, 17), (9, 8), (10, 7), (11, 6), (12, 5), (13, 4), (14, 3), (15, 2), (16, 1), (17, 0), (18, 18), (19, 19)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c[nH]nc1CNC(=O)C1Oc2ccccc2OC1C\n\nMolecule 2: O1c2ccccc2OC(C(NCc2cc[nH]n2)=O)C1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 13), (1, 14), (2, 15), (3, 16), (4, 12), (5, 11), (6, 10), (7, 9), (8, 17), (9, 8), (10, 7), (11, 6), (12, 5), (13, 4), (14, 3), (15, 2), (16, 1), (17, 0), (18, 18), (19, 19)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "ed31187e-4a0e-4920-ad3e-717802252167", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cn1cnc(Cl)c1Cl", "smiles1": "Cn1c(Cl)c(Cl)nc1", "smiles2": "n1(C)c(Cl)c(nc1)Cl", "answer": "[(0, 1), (1, 0), (2, 2), (3, 3), (4, 4), (5, 7), (6, 5), (7, 6)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Cn1c(Cl)c(Cl)nc1\n\nMolecule 2: n1(C)c(Cl)c(nc1)Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 0), (2, 2), (3, 3), (4, 4), (5, 7), (6, 5), (7, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "3518e284-a6b2-4239-9027-f58735a3f2e5", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1c(I)cnn1C", "smiles1": "n1(ncc(c1C)I)C", "smiles2": "Cn1ncc(I)c1C", "answer": "[(0, 1), (1, 2), (2, 3), (3, 4), (4, 6), (5, 7), (6, 5), (7, 0)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1(ncc(c1C)I)C\n\nMolecule 2: Cn1ncc(I)c1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 2), (2, 3), (3, 4), (4, 6), (5, 7), (6, 5), (7, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "ec3c0bd5-2b55-4bdc-ae5a-b8d990475398", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cn1nccc1CBr", "smiles1": "c1(ccnn1C)CBr", "smiles2": "Cn1nccc1CBr", "answer": "[(0, 5), (1, 4), (2, 3), (3, 2), (4, 1), (5, 0), (6, 6), (7, 7)]", "n_atoms": 8}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(ccnn1C)CBr\n\nMolecule 2: Cn1nccc1CBr\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 4), (2, 3), (3, 2), (4, 1), (5, 0), (6, 6), (7, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "291a28fc-83b4-4438-b7d7-da8b3920c27f", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "BrCC=Cc1cccs1", "smiles1": "C(C=Cc1cccs1)Br", "smiles2": "c1c(scc1)C=CCBr", "answer": "[(0, 7), (1, 6), (2, 5), (3, 1), (4, 0), (5, 4), (6, 3), (7, 2), (8, 8)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C=Cc1cccs1)Br\n\nMolecule 2: c1c(scc1)C=CCBr\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 6), (2, 5), (3, 1), (4, 0), (5, 4), (6, 3), (7, 2), (8, 8)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "8256d0e7-1329-4755-89f7-37e7b53ade46", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Nc1nc(=O)[nH]cc1Br", "smiles1": "Brc1c[nH]c(=O)nc1N", "smiles2": "c1(=O)[nH]cc(c(n1)N)Br", "answer": "[(0, 8), (1, 4), (2, 3), (3, 2), (4, 0), (5, 1), (6, 6), (7, 5), (8, 7)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Brc1c[nH]c(=O)nc1N\n\nMolecule 2: c1(=O)[nH]cc(c(n1)N)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 4), (2, 3), (3, 2), (4, 0), (5, 1), (6, 6), (7, 5), (8, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "6cec1720-d8c2-4255-b3d5-3d7b636fede6", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1[nH]c(=O)ncc1Br", "smiles1": "Brc1cnc([nH]c1C)=O", "smiles2": "c1(cnc(=O)[nH]c1C)Br", "answer": "[(0, 8), (1, 0), (2, 1), (3, 2), (4, 3), (5, 5), (6, 6), (7, 7), (8, 4)]", "n_atoms": 9}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Brc1cnc([nH]c1C)=O\n\nMolecule 2: c1(cnc(=O)[nH]c1C)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 0), (2, 1), (3, 2), (4, 3), (5, 5), (6, 6), (7, 7), (8, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e9974830-c8ad-45ad-b368-04fc30de900e", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "OCC1OC(O)C(F)C1O", "smiles1": "OCC1C(O)C(C(O)O1)F", "smiles2": "C1(C(F)C(OC1CO)O)O", "answer": "[(0, 7), (1, 6), (2, 5), (3, 0), (4, 9), (5, 1), (6, 3), (7, 8), (8, 4), (9, 2)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: OCC1C(O)C(C(O)O1)F\n\nMolecule 2: C1(C(F)C(OC1CO)O)O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 7), (1, 6), (2, 5), (3, 0), (4, 9), (5, 1), (6, 3), (7, 8), (8, 4), (9, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "b93005de-7695-485e-865a-42948779b263", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Fc1c(I)ccc(Br)c1Cl", "smiles1": "c1(Br)c(Cl)c(c(I)cc1)F", "smiles2": "c1(F)c(Cl)c(ccc1I)Br", "answer": "[(0, 4), (1, 9), (2, 2), (3, 3), (4, 0), (5, 7), (6, 8), (7, 6), (8, 5), (9, 1)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(Br)c(Cl)c(c(I)cc1)F\n\nMolecule 2: c1(F)c(Cl)c(ccc1I)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 9), (2, 2), (3, 3), (4, 0), (5, 7), (6, 8), (7, 6), (8, 5), (9, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "6dff7587-d827-4d7c-8466-20c0537d7c27", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "O=Cc1ncc(Cl)cc1Br", "smiles1": "c1(cc(c(nc1)C=O)Br)Cl", "smiles2": "C(=O)c1c(cc(Cl)cn1)Br", "answer": "[(0, 5), (1, 4), (2, 3), (3, 2), (4, 8), (5, 7), (6, 0), (7, 1), (8, 9), (9, 6)]", "n_atoms": 10}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(cc(c(nc1)C=O)Br)Cl\n\nMolecule 2: C(=O)c1c(cc(Cl)cn1)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 4), (2, 3), (3, 2), (4, 8), (5, 7), (6, 0), (7, 1), (8, 9), (9, 6)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0186ad73-b19c-4f08-83eb-7f30afc105b1", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "O=c1[nH]c2cc(Cl)ccc2s1", "smiles1": "c12[nH]c(sc1ccc(Cl)c2)=O", "smiles2": "s1c(=O)[nH]c2cc(Cl)ccc12", "answer": "[(0, 4), (1, 3), (2, 1), (3, 0), (4, 10), (5, 9), (6, 8), (7, 6), (8, 7), (9, 5), (10, 2)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c12[nH]c(sc1ccc(Cl)c2)=O\n\nMolecule 2: s1c(=O)[nH]c2cc(Cl)ccc12\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 3), (2, 1), (3, 0), (4, 10), (5, 9), (6, 8), (7, 6), (8, 7), (9, 5), (10, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "17c3a80b-c436-4d0f-9f81-8a2167680477", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCC(O)C1CN(C)CCO1", "smiles1": "C1CN(C)CC(C(CC)O)O1", "smiles2": "N1(CCOC(C(O)CC)C1)C", "answer": "[(0, 2), (1, 1), (2, 0), (3, 10), (4, 9), (5, 4), (6, 5), (7, 7), (8, 8), (9, 6), (10, 3)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1CN(C)CC(C(CC)O)O1\n\nMolecule 2: N1(CCOC(C(O)CC)C1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 1), (2, 0), (3, 10), (4, 9), (5, 4), (6, 5), (7, 7), (8, 8), (9, 6), (10, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0309622b-1f5e-4f30-b7c3-d73e259f9cca", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(C(=O)CCl)sc1C", "smiles1": "c1(cc(C)c(C)s1)C(=O)CCl", "smiles2": "c1(C)c(sc(C(CCl)=O)c1)C", "answer": "[(0, 4), (1, 9), (2, 0), (3, 1), (4, 2), (5, 10), (6, 3), (7, 5), (8, 8), (9, 6), (10, 7)]", "n_atoms": 11}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(cc(C)c(C)s1)C(=O)CCl\n\nMolecule 2: c1(C)c(sc(C(CCl)=O)c1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 9), (2, 0), (3, 1), (4, 2), (5, 10), (6, 3), (7, 5), (8, 8), (9, 6), (10, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "11fb035c-47d4-4018-a2c9-9f0d2dbf19b5", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(Br)cc2cn(C)nc12", "smiles1": "c1n(C)nc2c(C)cc(cc12)Br", "smiles2": "n1(cc2cc(cc(C)c2n1)Br)C", "answer": "[(0, 1), (1, 0), (2, 11), (3, 9), (4, 8), (5, 6), (6, 7), (7, 5), (8, 4), (9, 3), (10, 2), (11, 10)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1n(C)nc2c(C)cc(cc12)Br\n\nMolecule 2: n1(cc2cc(cc(C)c2n1)Br)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 0), (2, 11), (3, 9), (4, 8), (5, 6), (6, 7), (7, 5), (8, 4), (9, 3), (10, 2), (11, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f646169f-1a9b-48a7-b4b7-8f0c0c2c7714", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCC1CC1(O)c1cscn1", "smiles1": "c1(ncsc1)C1(O)C(C1)CCC", "smiles2": "C1C(c2ncsc2)(O)C1CCC", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 1), (6, 7), (7, 8), (8, 0), (9, 9), (10, 10), (11, 11)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(ncsc1)C1(O)C(C1)CCC\n\nMolecule 2: C1C(c2ncsc2)(O)C1CCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 5), (4, 6), (5, 1), (6, 7), (7, 8), (8, 0), (9, 9), (10, 10), (11, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "01715694-c491-4c4e-ad20-0aba285f70d1", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Brc1nccc(-n2cccn2)n1", "smiles1": "c1cnn(c1)-c1ccnc(n1)Br", "smiles2": "n1(cccn1)-c1ccnc(n1)Br", "answer": "[(0, 2), (1, 3), (2, 4), (3, 0), (4, 1), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]", "n_atoms": 12}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cnn(c1)-c1ccnc(n1)Br\n\nMolecule 2: n1(cccn1)-c1ccnc(n1)Br\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 3), (2, 4), (3, 0), (4, 1), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e22654a0-d73c-4acf-95db-787d0bcf59d8", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCC(O)(COC)c1cscc1Br", "smiles1": "c1(cscc1Br)C(COC)(CC)O", "smiles2": "CCC(O)(c1c(csc1)Br)COC", "answer": "[(0, 4), (1, 8), (2, 7), (3, 6), (4, 5), (5, 9), (6, 2), (7, 10), (8, 11), (9, 12), (10, 1), (11, 0), (12, 3)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(cscc1Br)C(COC)(CC)O\n\nMolecule 2: CCC(O)(c1c(csc1)Br)COC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 8), (2, 7), (3, 6), (4, 5), (5, 9), (6, 2), (7, 10), (8, 11), (9, 12), (10, 1), (11, 0), (12, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5de85d16-8a9c-4d7c-ba12-27c845073197", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCC(=O)NC1CCCC(C)C1C", "smiles1": "C(C(NC1C(C)C(C)CCC1)=O)C", "smiles2": "C(C(=O)NC1CCCC(C1C)C)C", "answer": "[(0, 0), (1, 1), (2, 3), (3, 4), (4, 9), (5, 10), (6, 8), (7, 11), (8, 7), (9, 6), (10, 5), (11, 2), (12, 12)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C(NC1C(C)C(C)CCC1)=O)C\n\nMolecule 2: C(C(=O)NC1CCCC(C1C)C)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 1), (2, 3), (3, 4), (4, 9), (5, 10), (6, 8), (7, 11), (8, 7), (9, 6), (10, 5), (11, 2), (12, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "242b6084-66b7-4dee-aa81-403db2522cb5", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCCOc1cc(C)c(N)cn1", "smiles1": "c1c(c(N)cnc1OCCCC)C", "smiles2": "Nc1cnc(OCCCC)cc1C", "answer": "[(0, 10), (1, 11), (2, 1), (3, 0), (4, 2), (5, 3), (6, 4), (7, 5), (8, 6), (9, 7), (10, 8), (11, 9), (12, 12)]", "n_atoms": 13}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(c(N)cnc1OCCCC)C\n\nMolecule 2: Nc1cnc(OCCCC)cc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 11), (2, 1), (3, 0), (4, 2), (5, 3), (6, 4), (7, 5), (8, 6), (9, 7), (10, 8), (11, 9), (12, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c16c246a-51e5-406f-ae96-1bcf9caa412a", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCOC(=O)C(=NO)c1csc(N)n1", "smiles1": "C(OC(=O)C(c1csc(N)n1)=NO)C", "smiles2": "c1sc(nc1C(C(OCC)=O)=NO)N", "answer": "[(0, 8), (1, 7), (2, 6), (3, 10), (4, 5), (5, 4), (6, 0), (7, 1), (8, 2), (9, 13), (10, 3), (11, 11), (12, 12), (13, 9)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(OC(=O)C(c1csc(N)n1)=NO)C\n\nMolecule 2: c1sc(nc1C(C(OCC)=O)=NO)N\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 7), (2, 6), (3, 10), (4, 5), (5, 4), (6, 0), (7, 1), (8, 2), (9, 13), (10, 3), (11, 11), (12, 12), (13, 9)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "be699204-9bf8-42ad-9ee0-95843d6c02e2", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CONC(=O)CSc1ccccc1C", "smiles1": "O(C)NC(CSc1ccccc1C)=O", "smiles2": "Cc1ccccc1SCC(NOC)=O", "answer": "[(0, 11), (1, 12), (2, 10), (3, 9), (4, 8), (5, 7), (6, 6), (7, 5), (8, 4), (9, 3), (10, 2), (11, 1), (12, 0), (13, 13)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O(C)NC(CSc1ccccc1C)=O\n\nMolecule 2: Cc1ccccc1SCC(NOC)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 11), (1, 12), (2, 10), (3, 9), (4, 8), (5, 7), (6, 6), (7, 5), (8, 4), (9, 3), (10, 2), (11, 1), (12, 0), (13, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c10dcf69-6574-4fad-98ef-ffd22589cb75", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CN(Cc1cncs1)CC1CCOC1", "smiles1": "n1csc(CN(C)CC2COCC2)c1", "smiles2": "n1cc(sc1)CN(CC1COCC1)C", "answer": "[(0, 0), (1, 4), (2, 3), (3, 2), (4, 5), (5, 6), (6, 13), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 1)]", "n_atoms": 14}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1csc(CN(C)CC2COCC2)c1\n\nMolecule 2: n1cc(sc1)CN(CC1COCC1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 4), (2, 3), (3, 2), (4, 5), (5, 6), (6, 13), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "17ec08a4-48df-49c1-8b87-c36d01157b72", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCOc1cc(Br)c2c(c1)C(O)CCC2", "smiles1": "C1(c2c(c(Br)cc(c2)OCC)CCC1)O", "smiles2": "C1(O)c2cc(cc(Br)c2CCC1)OCC", "answer": "[(0, 0), (1, 2), (2, 8), (3, 6), (4, 7), (5, 5), (6, 4), (7, 3), (8, 12), (9, 13), (10, 14), (11, 9), (12, 10), (13, 11), (14, 1)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1(c2c(c(Br)cc(c2)OCC)CCC1)O\n\nMolecule 2: C1(O)c2cc(cc(Br)c2CCC1)OCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 2), (2, 8), (3, 6), (4, 7), (5, 5), (6, 4), (7, 3), (8, 12), (9, 13), (10, 14), (11, 9), (12, 10), (13, 11), (14, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "6307c44f-fb07-4415-81b9-9dc99a86c242", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC1(CNc2ncccc2Br)CCCO1", "smiles1": "c1ccc(Br)c(NCC2(CCCO2)C)n1", "smiles2": "Brc1c(NCC2(CCCO2)C)nccc1", "answer": "[(0, 12), (1, 13), (2, 14), (3, 1), (4, 0), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1ccc(Br)c(NCC2(CCCO2)C)n1\n\nMolecule 2: Brc1c(NCC2(CCCO2)C)nccc1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 13), (2, 14), (3, 1), (4, 0), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6), (10, 7), (11, 8), (12, 9), (13, 10), (14, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "9671e277-56f2-453a-9f15-11691ca1dd8d", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC(C#N)N(C)Cc1cc(F)cc(Br)c1", "smiles1": "C(C(N(Cc1cc(cc(c1)F)Br)C)C)#N", "smiles2": "CN(C(C)C#N)Cc1cc(F)cc(Br)c1", "answer": "[(0, 4), (1, 2), (2, 1), (3, 6), (4, 7), (5, 14), (6, 12), (7, 11), (8, 9), (9, 8), (10, 10), (11, 13), (12, 0), (13, 3), (14, 5)]", "n_atoms": 15}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C(N(Cc1cc(cc(c1)F)Br)C)C)#N\n\nMolecule 2: CN(C(C)C#N)Cc1cc(F)cc(Br)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 2), (2, 1), (3, 6), (4, 7), (5, 14), (6, 12), (7, 11), (8, 9), (9, 8), (10, 10), (11, 13), (12, 0), (13, 3), (14, 5)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "a0b55c1d-fab8-4165-af83-a945e09352d5", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCCOCCSc1ccc(N)c(C)c1", "smiles1": "C(C)CCOCCSc1cc(c(N)cc1)C", "smiles2": "Nc1ccc(SCCOCCCC)cc1C", "answer": "[(0, 11), (1, 12), (2, 10), (3, 9), (4, 8), (5, 7), (6, 6), (7, 5), (8, 4), (9, 13), (10, 14), (11, 1), (12, 0), (13, 2), (14, 3), (15, 15)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C)CCOCCSc1cc(c(N)cc1)C\n\nMolecule 2: Nc1ccc(SCCOCCCC)cc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 11), (1, 12), (2, 10), (3, 9), (4, 8), (5, 7), (6, 6), (7, 5), (8, 4), (9, 13), (10, 14), (11, 1), (12, 0), (13, 2), (14, 3), (15, 15)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "961c97c6-1388-4385-9f14-681b435b5266", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCC(C#N)OC(=O)c1ccc(C)c(Cl)c1", "smiles1": "Cc1c(cc(C(=O)OC(CC)C#N)cc1)Cl", "smiles2": "c1(Cl)cc(C(OC(CC)C#N)=O)ccc1C", "answer": "[(0, 15), (1, 14), (2, 0), (3, 2), (4, 3), (5, 4), (6, 11), (7, 5), (8, 6), (9, 7), (10, 8), (11, 9), (12, 10), (13, 12), (14, 13), (15, 1)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Cc1c(cc(C(=O)OC(CC)C#N)cc1)Cl\n\nMolecule 2: c1(Cl)cc(C(OC(CC)C#N)=O)ccc1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 14), (2, 0), (3, 2), (4, 3), (5, 4), (6, 11), (7, 5), (8, 6), (9, 7), (10, 8), (11, 9), (12, 10), (13, 12), (14, 13), (15, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "447174c1-d938-4214-8464-cca4f0732810", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCC(C#N)NC(=O)c1cccc(OC)c1", "smiles1": "CCC(NC(c1cc(ccc1)OC)=O)C#N", "smiles2": "COc1cccc(c1)C(NC(CC)C#N)=O", "answer": "[(0, 12), (1, 11), (2, 10), (3, 9), (4, 8), (5, 6), (6, 7), (7, 2), (8, 3), (9, 4), (10, 5), (11, 1), (12, 0), (13, 15), (14, 13), (15, 14)]", "n_atoms": 16}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: CCC(NC(c1cc(ccc1)OC)=O)C#N\n\nMolecule 2: COc1cccc(c1)C(NC(CC)C#N)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 11), (2, 10), (3, 9), (4, 8), (5, 6), (6, 7), (7, 2), (8, 3), (9, 4), (10, 5), (11, 1), (12, 0), (13, 15), (14, 13), (15, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c94e753a-8ae0-4301-aa6c-e52890f2020f", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "COc1nc(C)cc(=O)n1Cc1cccnc1", "smiles1": "Cc1nc(n(Cc2cccnc2)c(c1)=O)OC", "smiles2": "c1cncc(Cn2c(cc(nc2OC)C)=O)c1", "answer": "[(0, 14), (1, 9), (2, 10), (3, 11), (4, 6), (5, 5), (6, 4), (7, 16), (8, 0), (9, 1), (10, 2), (11, 3), (12, 7), (13, 8), (14, 15), (15, 12), (16, 13)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Cc1nc(n(Cc2cccnc2)c(c1)=O)OC\n\nMolecule 2: c1cncc(Cn2c(cc(nc2OC)C)=O)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 14), (1, 9), (2, 10), (3, 11), (4, 6), (5, 5), (6, 4), (7, 16), (8, 0), (9, 1), (10, 2), (11, 3), (12, 7), (13, 8), (14, 15), (15, 12), (16, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e7bce02f-b10c-4880-8f85-00b9dbb15e3b", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "NC(=O)NC(=O)COC(=O)c1ccccc1Br", "smiles1": "O=C(NC(=O)COC(=O)c1c(cccc1)Br)N", "smiles2": "c1(Br)c(cccc1)C(OCC(NC(=O)N)=O)=O", "answer": "[(0, 13), (1, 12), (2, 11), (3, 10), (4, 15), (5, 9), (6, 8), (7, 7), (8, 16), (9, 2), (10, 0), (11, 6), (12, 5), (13, 4), (14, 3), (15, 1), (16, 14)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O=C(NC(=O)COC(=O)c1c(cccc1)Br)N\n\nMolecule 2: c1(Br)c(cccc1)C(OCC(NC(=O)N)=O)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 13), (1, 12), (2, 11), (3, 10), (4, 15), (5, 9), (6, 8), (7, 7), (8, 16), (9, 2), (10, 0), (11, 6), (12, 5), (13, 4), (14, 3), (15, 1), (16, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "419eeed3-0b3d-4459-b28f-74d916cb9fe7", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "N#Cc1c(F)cccc1Sc1ccc(Cl)cn1", "smiles1": "c1cc(ncc1Cl)Sc1cccc(c1C#N)F", "smiles2": "N#Cc1c(F)cccc1Sc1ccc(cn1)Cl", "answer": "[(0, 12), (1, 11), (2, 10), (3, 15), (4, 14), (5, 13), (6, 16), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 3), (13, 2), (14, 1), (15, 0), (16, 4)]", "n_atoms": 17}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cc(ncc1Cl)Sc1cccc(c1C#N)F\n\nMolecule 2: N#Cc1c(F)cccc1Sc1ccc(cn1)Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 12), (1, 11), (2, 10), (3, 15), (4, 14), (5, 13), (6, 16), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 3), (13, 2), (14, 1), (15, 0), (16, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "15e2c4da-3455-4da0-a76f-165cae1095af", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(-c2nc3c(s2)C(=O)CCC3)ccc1Br", "smiles1": "O=C1c2c(nc(s2)-c2ccc(Br)c(c2)C)CCC1", "smiles2": "Brc1ccc(cc1C)-c1nc2CCCC(=O)c2s1", "answer": "[(0, 15), (1, 14), (2, 16), (3, 10), (4, 9), (5, 8), (6, 17), (7, 4), (8, 3), (9, 2), (10, 1), (11, 0), (12, 6), (13, 5), (14, 7), (15, 11), (16, 12), (17, 13)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O=C1c2c(nc(s2)-c2ccc(Br)c(c2)C)CCC1\n\nMolecule 2: Brc1ccc(cc1C)-c1nc2CCCC(=O)c2s1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 14), (2, 16), (3, 10), (4, 9), (5, 8), (6, 17), (7, 4), (8, 3), (9, 2), (10, 1), (11, 0), (12, 6), (13, 5), (14, 7), (15, 11), (16, 12), (17, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "e2730925-ab38-4c7e-881c-740ddaae0689", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc2c(NC(C)C3CCOC3)ncnc2s1", "smiles1": "c12ncnc(c1cc(C)s2)NC(C1CCOC1)C", "smiles2": "c1(ncnc2c1cc(s2)C)NC(C1CCOC1)C", "answer": "[(0, 4), (1, 3), (2, 2), (3, 1), (4, 0), (5, 5), (6, 6), (7, 7), (8, 9), (9, 8), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c12ncnc(c1cc(C)s2)NC(C1CCOC1)C\n\nMolecule 2: c1(ncnc2c1cc(s2)C)NC(C1CCOC1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 4), (1, 3), (2, 2), (3, 1), (4, 0), (5, 5), (6, 6), (7, 7), (8, 9), (9, 8), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "68774ade-bbb0-4920-a58c-08d479cbbbd6", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1[nH]nc(C(N)=O)c1NC(=O)C1CCOC1C", "smiles1": "C1C(C(=O)Nc2c([nH]nc2C(N)=O)C)C(OC1)C", "smiles2": "[nH]1nc(c(c1C)NC(=O)C1C(C)OCC1)C(=O)N", "answer": "[(0, 14), (1, 9), (2, 7), (3, 8), (4, 6), (5, 3), (6, 4), (7, 0), (8, 1), (9, 2), (10, 15), (11, 17), (12, 16), (13, 5), (14, 10), (15, 12), (16, 13), (17, 11)]", "n_atoms": 18}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1C(C(=O)Nc2c([nH]nc2C(N)=O)C)C(OC1)C\n\nMolecule 2: [nH]1nc(c(c1C)NC(=O)C1C(C)OCC1)C(=O)N\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 14), (1, 9), (2, 7), (3, 8), (4, 6), (5, 3), (6, 4), (7, 0), (8, 1), (9, 2), (10, 15), (11, 17), (12, 16), (13, 5), (14, 10), (15, 12), (16, 13), (17, 11)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "af7d1cf6-caf6-4317-bacf-260048bf482c", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCNC(=O)c1nc(-c2ccc3c(c2)OCO3)no1", "smiles1": "C1Oc2c(ccc(-c3noc(n3)C(=O)NCC)c2)O1", "smiles2": "o1nc(-c2ccc3OCOc3c2)nc1C(=O)NCC", "answer": "[(0, 8), (1, 9), (2, 10), (3, 6), (4, 5), (5, 4), (6, 3), (7, 2), (8, 1), (9, 0), (10, 13), (11, 12), (12, 14), (13, 15), (14, 16), (15, 17), (16, 18), (17, 11), (18, 7)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C1Oc2c(ccc(-c3noc(n3)C(=O)NCC)c2)O1\n\nMolecule 2: o1nc(-c2ccc3OCOc3c2)nc1C(=O)NCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 10), (3, 6), (4, 5), (5, 4), (6, 3), (7, 2), (8, 1), (9, 0), (10, 13), (11, 12), (12, 14), (13, 15), (14, 16), (15, 17), (16, 18), (17, 11), (18, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "7f21d25b-4dc3-4a34-9c05-9befb9153362", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Oc1ccc(Cl)cc1CNc1ccc2c(c1)CCC2", "smiles1": "c1cc2c(cc1NCc1cc(Cl)ccc1O)CCC2", "smiles2": "c1c(ccc(O)c1CNc1ccc2CCCc2c1)Cl", "answer": "[(0, 10), (1, 11), (2, 12), (3, 16), (4, 17), (5, 9), (6, 8), (7, 7), (8, 6), (9, 0), (10, 1), (11, 18), (12, 2), (13, 3), (14, 4), (15, 5), (16, 15), (17, 14), (18, 13)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1cc2c(cc1NCc1cc(Cl)ccc1O)CCC2\n\nMolecule 2: c1c(ccc(O)c1CNc1ccc2CCCc2c1)Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 11), (2, 12), (3, 16), (4, 17), (5, 9), (6, 8), (7, 7), (8, 6), (9, 0), (10, 1), (11, 18), (12, 2), (13, 3), (14, 4), (15, 5), (16, 15), (17, 14), (18, 13)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "a849f3c9-e9cb-43bd-a9db-7b40db2f3bdf", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCN1c2ncccc2NC(=O)c2cc(Br)cnc21", "smiles1": "c1c(Br)cnc2N(CC)c3ncccc3NC(=O)c12", "smiles2": "CCN1c2c(cc(Br)cn2)C(Nc2c1nccc2)=O", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 9), (5, 3), (6, 2), (7, 1), (8, 0), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 12), (15, 11), (16, 10), (17, 18), (18, 4)]", "n_atoms": 19}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(Br)cnc2N(CC)c3ncccc3NC(=O)c12\n\nMolecule 2: CCN1c2c(cc(Br)cn2)C(Nc2c1nccc2)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 9), (5, 3), (6, 2), (7, 1), (8, 0), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 12), (15, 11), (16, 10), (17, 18), (18, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "59fe0e0b-336c-4a2d-8e6d-ef801dcb3095", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1c(CCC(=O)OC(C)c2ccc(Cl)s2)cnn1C", "smiles1": "Clc1ccc(s1)C(C)OC(CCc1cnn(c1C)C)=O", "smiles2": "Cc1c(CCC(OC(C)c2sc(cc2)Cl)=O)cnn1C", "answer": "[(0, 14), (1, 11), (2, 12), (3, 13), (4, 9), (5, 10), (6, 7), (7, 8), (8, 6), (9, 5), (10, 4), (11, 3), (12, 2), (13, 16), (14, 17), (15, 18), (16, 1), (17, 0), (18, 19), (19, 15)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Clc1ccc(s1)C(C)OC(CCc1cnn(c1C)C)=O\n\nMolecule 2: Cc1c(CCC(OC(C)c2sc(cc2)Cl)=O)cnn1C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 14), (1, 11), (2, 12), (3, 13), (4, 9), (5, 10), (6, 7), (7, 8), (8, 6), (9, 5), (10, 4), (11, 3), (12, 2), (13, 16), (14, 17), (15, 18), (16, 1), (17, 0), (18, 19), (19, 15)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "6be32a4d-5339-4562-8ea9-bdafbe2f3d19", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCCCCNC(=O)C(=O)Nc1ccc(C)c(Cl)c1", "smiles1": "c1(c(cc(NC(=O)C(=O)NCCCCCC)cc1)Cl)C", "smiles2": "c1(NC(C(NCCCCCC)=O)=O)cc(Cl)c(cc1)C", "answer": "[(0, 16), (1, 14), (2, 13), (3, 0), (4, 1), (5, 2), (6, 12), (7, 3), (8, 11), (9, 4), (10, 5), (11, 6), (12, 7), (13, 8), (14, 9), (15, 10), (16, 18), (17, 17), (18, 15), (19, 19)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(c(cc(NC(=O)C(=O)NCCCCCC)cc1)Cl)C\n\nMolecule 2: c1(NC(C(NCCCCCC)=O)=O)cc(Cl)c(cc1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 16), (1, 14), (2, 13), (3, 0), (4, 1), (5, 2), (6, 12), (7, 3), (8, 11), (9, 4), (10, 5), (11, 6), (12, 7), (13, 8), (14, 9), (15, 10), (16, 18), (17, 17), (18, 15), (19, 19)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f11fe809-d72d-44b3-836d-4bf996adefd3", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC1Cc2cc(C(=O)Cc3ccccc3Cl)ccc2O1", "smiles1": "c1(cc2c(OC(C2)C)cc1)C(=O)Cc1c(Cl)cccc1", "smiles2": "Clc1c(cccc1)CC(c1cc2c(OC(C2)C)cc1)=O", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 8), (11, 19), (12, 7), (13, 2), (14, 1), (15, 0), (16, 6), (17, 5), (18, 4), (19, 3)]", "n_atoms": 20}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(cc2c(OC(C2)C)cc1)C(=O)Cc1c(Cl)cccc1\n\nMolecule 2: Clc1c(cccc1)CC(c1cc2c(OC(C2)C)cc1)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 9), (1, 10), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 8), (11, 19), (12, 7), (13, 2), (14, 1), (15, 0), (16, 6), (17, 5), (18, 4), (19, 3)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "d918df06-aa83-4b5c-b679-9474e327b339", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCOc1ccc(NC(=O)N(C)CCC(C)O)cc1OC", "smiles1": "N(C(=O)N(CCC(O)C)C)c1ccc(c(c1)OC)OCC", "smiles2": "c1(OC)c(ccc(c1)NC(=O)N(CCC(O)C)C)OCC", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 16), (9, 17), (10, 6), (11, 5), (12, 4), (13, 3), (14, 0), (15, 7), (16, 1), (17, 2), (18, 18), (19, 19), (20, 20)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: N(C(=O)N(CCC(O)C)C)c1ccc(c(c1)OC)OCC\n\nMolecule 2: c1(OC)c(ccc(c1)NC(=O)N(CCC(O)C)C)OCC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 10), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 16), (9, 17), (10, 6), (11, 5), (12, 4), (13, 3), (14, 0), (15, 7), (16, 1), (17, 2), (18, 18), (19, 19), (20, 20)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "92c58e50-d959-4f38-bf32-e69f3342e427", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "COc1ccccc1OCC(=O)NCc1nc(C)c(C)s1", "smiles1": "C(=O)(COc1c(cccc1)OC)NCc1nc(C)c(C)s1", "smiles2": "COc1c(cccc1)OCC(NCc1sc(C)c(C)n1)=O", "answer": "[(0, 10), (1, 20), (2, 9), (3, 8), (4, 3), (5, 2), (6, 7), (7, 6), (8, 5), (9, 4), (10, 1), (11, 0), (12, 11), (13, 12), (14, 13), (15, 19), (16, 17), (17, 18), (18, 15), (19, 16), (20, 14)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(=O)(COc1c(cccc1)OC)NCc1nc(C)c(C)s1\n\nMolecule 2: COc1c(cccc1)OCC(NCc1sc(C)c(C)n1)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 20), (2, 9), (3, 8), (4, 3), (5, 2), (6, 7), (7, 6), (8, 5), (9, 4), (10, 1), (11, 0), (12, 11), (13, 12), (14, 13), (15, 19), (16, 17), (17, 18), (18, 15), (19, 16), (20, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "532f8283-18cd-4b90-bb58-1aba2a21d3ac", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1ccc(F)c(NC(=O)C(=O)NCC2CC=CCC2)c1", "smiles1": "c1c(c(cc(c1)C)NC(=O)C(NCC1CCC=CC1)=O)F", "smiles2": "c1(F)ccc(cc1NC(C(=O)NCC1CC=CCC1)=O)C", "answer": "[(0, 2), (1, 0), (2, 6), (3, 5), (4, 4), (5, 3), (6, 20), (7, 7), (8, 8), (9, 19), (10, 9), (11, 11), (12, 12), (13, 13), (14, 18), (15, 17), (16, 16), (17, 15), (18, 14), (19, 10), (20, 1)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(c(cc(c1)C)NC(=O)C(NCC1CCC=CC1)=O)F\n\nMolecule 2: c1(F)ccc(cc1NC(C(=O)NCC1CC=CCC1)=O)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 0), (2, 6), (3, 5), (4, 4), (5, 3), (6, 20), (7, 7), (8, 8), (9, 19), (10, 9), (11, 11), (12, 12), (13, 13), (14, 18), (15, 17), (16, 16), (17, 15), (18, 14), (19, 10), (20, 1)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "4f4fd3af-205f-45a8-a96f-71ce7147fa0d", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(CSCc2coc(-c3cccc(F)c3)n2)no1", "smiles1": "Cc1cc(CSCc2nc(-c3cccc(F)c3)oc2)no1", "smiles2": "c1c(F)cccc1-c1nc(co1)CSCc1cc(on1)C", "answer": "[(0, 20), (1, 17), (2, 16), (3, 15), (4, 14), (5, 13), (6, 12), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 1), (15, 2), (16, 0), (17, 11), (18, 10), (19, 19), (20, 18)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Cc1cc(CSCc2nc(-c3cccc(F)c3)oc2)no1\n\nMolecule 2: c1c(F)cccc1-c1nc(co1)CSCc1cc(on1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 20), (1, 17), (2, 16), (3, 15), (4, 14), (5, 13), (6, 12), (7, 9), (8, 8), (9, 7), (10, 6), (11, 5), (12, 4), (13, 3), (14, 1), (15, 2), (16, 0), (17, 11), (18, 10), (19, 19), (20, 18)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "6109355c-2f3a-4e15-b184-7dd075dfbe1a", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(F)cc2[nH]c(C(=O)N3CCC(C)C(O)C3)cc12", "smiles1": "Cc1cc(cc2c1cc([nH]2)C(N1CC(C(CC1)C)O)=O)F", "smiles2": "O=C(c1cc2c(C)cc(cc2[nH]1)F)N1CCC(C(O)C1)C", "answer": "[(0, 6), (1, 5), (2, 7), (3, 8), (4, 9), (5, 10), (6, 4), (7, 3), (8, 2), (9, 11), (10, 1), (11, 13), (12, 19), (13, 17), (14, 16), (15, 15), (16, 14), (17, 20), (18, 18), (19, 0), (20, 12)]", "n_atoms": 21}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: Cc1cc(cc2c1cc([nH]2)C(N1CC(C(CC1)C)O)=O)F\n\nMolecule 2: O=C(c1cc2c(C)cc(cc2[nH]1)F)N1CCC(C(O)C1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 6), (1, 5), (2, 7), (3, 8), (4, 9), (5, 10), (6, 4), (7, 3), (8, 2), (9, 11), (10, 1), (11, 13), (12, 19), (13, 17), (14, 16), (15, 15), (16, 14), (17, 20), (18, 18), (19, 0), (20, 12)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "ced54f9a-df56-4dfd-8dcc-4b96c4c41aa0", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1ccn2c(=O)c(C(=O)N(C)CC3CCCO3)cnc2c1", "smiles1": "c12n(ccc(c1)C)c(c(C(=O)N(CC1CCCO1)C)cn2)=O", "smiles2": "c1c(C(N(C)CC2OCCC2)=O)c(n2ccc(cc2n1)C)=O", "answer": "[(0, 18), (1, 13), (2, 14), (3, 15), (4, 16), (5, 17), (6, 20), (7, 12), (8, 1), (9, 2), (10, 11), (11, 3), (12, 5), (13, 6), (14, 10), (15, 9), (16, 8), (17, 7), (18, 4), (19, 0), (20, 19), (21, 21)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c12n(ccc(c1)C)c(c(C(=O)N(CC1CCCO1)C)cn2)=O\n\nMolecule 2: c1c(C(N(C)CC2OCCC2)=O)c(n2ccc(cc2n1)C)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 18), (1, 13), (2, 14), (3, 15), (4, 16), (5, 17), (6, 20), (7, 12), (8, 1), (9, 2), (10, 11), (11, 3), (12, 5), (13, 6), (14, 10), (15, 9), (16, 8), (17, 7), (18, 4), (19, 0), (20, 19), (21, 21)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c5505733-8022-4d70-8409-8dc1a9ca3b27", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCSC1CCC(NC(=O)C(=O)Nc2ccc(F)c(Cl)c2)C1", "smiles1": "C(C)SC1CCC(C1)NC(C(=O)Nc1cc(Cl)c(F)cc1)=O", "smiles2": "c1(c(ccc(NC(C(=O)NC2CCC(SCC)C2)=O)c1)F)Cl", "answer": "[(0, 15), (1, 16), (2, 14), (3, 13), (4, 12), (5, 11), (6, 10), (7, 17), (8, 9), (9, 7), (10, 6), (11, 18), (12, 5), (13, 4), (14, 19), (15, 0), (16, 21), (17, 1), (18, 20), (19, 2), (20, 3), (21, 8)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C)SC1CCC(C1)NC(C(=O)Nc1cc(Cl)c(F)cc1)=O\n\nMolecule 2: c1(c(ccc(NC(C(=O)NC2CCC(SCC)C2)=O)c1)F)Cl\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 16), (2, 14), (3, 13), (4, 12), (5, 11), (6, 10), (7, 17), (8, 9), (9, 7), (10, 6), (11, 18), (12, 5), (13, 4), (14, 19), (15, 0), (16, 21), (17, 1), (18, 20), (19, 2), (20, 3), (21, 8)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5e2289d6-2247-456d-b1dc-745831d75ef6", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(C(C)NC(=O)CCCN2C(=O)CNC2=O)c(C)s1", "smiles1": "c1c(sc(c1C(C)NC(CCCN1C(NCC1=O)=O)=O)C)C", "smiles2": "C(CCC(NC(C)c1cc(C)sc1C)=O)N1C(CNC1=O)=O", "answer": "[(0, 8), (1, 9), (2, 11), (3, 12), (4, 7), (5, 5), (6, 6), (7, 4), (8, 3), (9, 2), (10, 1), (11, 0), (12, 15), (13, 19), (14, 18), (15, 17), (16, 16), (17, 21), (18, 20), (19, 14), (20, 13), (21, 10)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(sc(c1C(C)NC(CCCN1C(NCC1=O)=O)=O)C)C\n\nMolecule 2: C(CCC(NC(C)c1cc(C)sc1C)=O)N1C(CNC1=O)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 8), (1, 9), (2, 11), (3, 12), (4, 7), (5, 5), (6, 6), (7, 4), (8, 3), (9, 2), (10, 1), (11, 0), (12, 15), (13, 19), (14, 18), (15, 17), (16, 16), (17, 21), (18, 20), (19, 14), (20, 13), (21, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "42ce740e-8114-4b16-8840-48766be11e48", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC1c2ccccc2OC1C(=O)NCc1ccc(C(N)=O)o1", "smiles1": "c1c2c(ccc1)C(C(C(=O)NCc1ccc(C(N)=O)o1)O2)C", "smiles2": "C1(c2c(cccc2)OC1C(NCc1ccc(o1)C(=O)N)=O)C", "answer": "[(0, 3), (1, 2), (2, 1), (3, 6), (4, 5), (5, 4), (6, 0), (7, 8), (8, 9), (9, 20), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 17), (17, 19), (18, 18), (19, 16), (20, 7), (21, 21)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c2c(ccc1)C(C(C(=O)NCc1ccc(C(N)=O)o1)O2)C\n\nMolecule 2: C1(c2c(cccc2)OC1C(NCc1ccc(o1)C(=O)N)=O)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 2), (2, 1), (3, 6), (4, 5), (5, 4), (6, 0), (7, 8), (8, 9), (9, 20), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 17), (17, 19), (18, 18), (19, 16), (20, 7), (21, 21)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f9becf0c-6aa1-495b-a2bd-78d139e699e6", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "O=C(Cn1nnc(-c2cccs2)n1)Nc1cccc(Cl)c1Cl", "smiles1": "n1n(nnc1-c1cccs1)CC(Nc1c(Cl)c(ccc1)Cl)=O", "smiles2": "n1nn(nc1-c1sccc1)CC(Nc1c(c(ccc1)Cl)Cl)=O", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 4), (5, 5), (6, 9), (7, 8), (8, 7), (9, 6), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 20), (16, 15), (17, 16), (18, 17), (19, 18), (20, 19), (21, 21)]", "n_atoms": 22}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1n(nnc1-c1cccs1)CC(Nc1c(Cl)c(ccc1)Cl)=O\n\nMolecule 2: n1nn(nc1-c1sccc1)CC(Nc1c(c(ccc1)Cl)Cl)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 3), (1, 2), (2, 1), (3, 0), (4, 4), (5, 5), (6, 9), (7, 8), (8, 7), (9, 6), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 20), (16, 15), (17, 16), (18, 17), (19, 18), (20, 19), (21, 21)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f941d480-b3fd-49fd-ab20-ad656532502a", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "O=C(NCc1cc(-c2cccs2)on1)c1ccc2nsnc2c1", "smiles1": "O=C(NCc1noc(-c2cccs2)c1)c1ccc2c(c1)nsn2", "smiles2": "c12c(nsn1)ccc(c2)C(=O)NCc1noc(-c2cccs2)c1", "answer": "[(0, 10), (1, 9), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 19), (11, 20), (12, 21), (13, 22), (14, 7), (15, 6), (16, 5), (17, 1), (18, 0), (19, 8), (20, 4), (21, 3), (22, 2)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: O=C(NCc1noc(-c2cccs2)c1)c1ccc2c(c1)nsn2\n\nMolecule 2: c12c(nsn1)ccc(c2)C(=O)NCc1noc(-c2cccs2)c1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 10), (1, 9), (2, 11), (3, 12), (4, 13), (5, 14), (6, 15), (7, 16), (8, 17), (9, 18), (10, 19), (11, 20), (12, 21), (13, 22), (14, 7), (15, 6), (16, 5), (17, 1), (18, 0), (19, 8), (20, 4), (21, 3), (22, 2)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "80575fff-16e1-49ea-b81a-21b202a412d1", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CSc1cccc(NC(=O)C2CCCN2C(=O)c2cccs2)c1", "smiles1": "S(C)c1cccc(c1)NC(C1N(C(c2sccc2)=O)CCC1)=O", "smiles2": "S(C)c1cc(ccc1)NC(=O)C1N(C(c2sccc2)=O)CCC1", "answer": "[(0, 0), (1, 1), (2, 2), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 8), (9, 9), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), (21, 22), (22, 10)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: S(C)c1cccc(c1)NC(C1N(C(c2sccc2)=O)CCC1)=O\n\nMolecule 2: S(C)c1cc(ccc1)NC(=O)C1N(C(c2sccc2)=O)CCC1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 1), (2, 2), (3, 7), (4, 6), (5, 5), (6, 4), (7, 3), (8, 8), (9, 9), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15), (15, 16), (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), (21, 22), (22, 10)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "7d4db452-57c6-47af-aaea-a3c62f0b0c29", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCOCC(=O)NNC(=O)c1sc2cccc(F)c2c1COC", "smiles1": "C(NNC(COCC)=O)(c1c(c2c(cccc2s1)F)COC)=O", "smiles2": "s1c2c(c(c1C(NNC(=O)COCC)=O)COC)c(F)ccc2", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 10), (5, 11), (6, 12), (7, 13), (8, 9), (9, 4), (10, 3), (11, 2), (12, 18), (13, 20), (14, 21), (15, 22), (16, 1), (17, 0), (18, 19), (19, 15), (20, 16), (21, 17), (22, 14)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(NNC(COCC)=O)(c1c(c2c(cccc2s1)F)COC)=O\n\nMolecule 2: s1c2c(c(c1C(NNC(=O)COCC)=O)COC)c(F)ccc2\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 10), (5, 11), (6, 12), (7, 13), (8, 9), (9, 4), (10, 3), (11, 2), (12, 18), (13, 20), (14, 21), (15, 22), (16, 1), (17, 0), (18, 19), (19, 15), (20, 16), (21, 17), (22, 14)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0e426e0d-c2ec-4ec9-9a65-07eb5620261f", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CC(=O)N1c2ccccc2CC1C(=O)Nc1cnc(Cl)c(C)c1", "smiles1": "c1c(c(ncc1NC(C1N(C(=O)C)c2ccccc2C1)=O)Cl)C", "smiles2": "C1c2c(cccc2)N(C(C)=O)C1C(Nc1cc(c(nc1)Cl)C)=O", "answer": "[(0, 15), (1, 16), (2, 17), (3, 18), (4, 19), (5, 14), (6, 13), (7, 12), (8, 11), (9, 7), (10, 8), (11, 10), (12, 9), (13, 2), (14, 3), (15, 4), (16, 5), (17, 6), (18, 1), (19, 0), (20, 22), (21, 20), (22, 21)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(c(ncc1NC(C1N(C(=O)C)c2ccccc2C1)=O)Cl)C\n\nMolecule 2: C1c2c(cccc2)N(C(C)=O)C1C(Nc1cc(c(nc1)Cl)C)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 16), (2, 17), (3, 18), (4, 19), (5, 14), (6, 13), (7, 12), (8, 11), (9, 7), (10, 8), (11, 10), (12, 9), (13, 2), (14, 3), (15, 4), (16, 5), (17, 6), (18, 1), (19, 0), (20, 22), (21, 20), (22, 21)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "20654efe-e395-472d-bedd-12c3fc8123e1", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "COC(=O)C1(NC(=O)c2coc(-c3csc(C)n3)c2)CCOC1", "smiles1": "C(=O)(C1(NC(=O)c2cc(oc2)-c2csc(C)n2)CCOC1)OC", "smiles2": "n1c(csc1C)-c1occ(c1)C(NC1(C(=O)OC)CCOC1)=O", "answer": "[(0, 14), (1, 15), (2, 13), (3, 12), (4, 11), (5, 22), (6, 9), (7, 10), (8, 6), (9, 7), (10, 8), (11, 1), (12, 2), (13, 3), (14, 4), (15, 5), (16, 0), (17, 18), (18, 19), (19, 20), (20, 21), (21, 16), (22, 17)]", "n_atoms": 23}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(=O)(C1(NC(=O)c2cc(oc2)-c2csc(C)n2)CCOC1)OC\n\nMolecule 2: n1c(csc1C)-c1occ(c1)C(NC1(C(=O)OC)CCOC1)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 14), (1, 15), (2, 13), (3, 12), (4, 11), (5, 22), (6, 9), (7, 10), (8, 6), (9, 7), (10, 8), (11, 1), (12, 2), (13, 3), (14, 4), (15, 5), (16, 0), (17, 18), (18, 19), (19, 20), (20, 21), (21, 16), (22, 17)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5e17cd66-474f-4228-97ac-e08ccdbe4679", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1csc(C(C#N)C(=O)C2CC(=O)N(c3ccccc3Cl)C2)n1", "smiles1": "C(C(C#N)c1nc(C)cs1)(C1CC(=O)N(C1)c1c(cccc1)Cl)=O", "smiles2": "O=C(C(c1scc(n1)C)C#N)C1CN(c2ccccc2Cl)C(=O)C1", "answer": "[(0, 1), (1, 2), (2, 9), (3, 10), (4, 3), (5, 7), (6, 6), (7, 8), (8, 5), (9, 4), (10, 11), (11, 23), (12, 21), (13, 22), (14, 13), (15, 12), (16, 14), (17, 19), (18, 18), (19, 17), (20, 16), (21, 15), (22, 20), (23, 0)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(C(C#N)c1nc(C)cs1)(C1CC(=O)N(C1)c1c(cccc1)Cl)=O\n\nMolecule 2: O=C(C(c1scc(n1)C)C#N)C1CN(c2ccccc2Cl)C(=O)C1\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 1), (1, 2), (2, 9), (3, 10), (4, 3), (5, 7), (6, 6), (7, 8), (8, 5), (9, 4), (10, 11), (11, 23), (12, 21), (13, 22), (14, 13), (15, 12), (16, 14), (17, 19), (18, 18), (19, 17), (20, 16), (21, 15), (22, 20), (23, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "dc812a3e-b992-40c5-89c1-f2746daa5012", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCc1ccc(CC)c(NC(=O)C(C)Oc2cccc(C=O)c2)c1", "smiles1": "c1c(NC(C(Oc2cccc(C=O)c2)C)=O)c(CC)ccc1CC", "smiles2": "C(c1ccc(cc1NC(C(Oc1cccc(C=O)c1)C)=O)CC)C", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 9), (5, 10), (6, 11), (7, 12), (8, 13), (9, 14), (10, 15), (11, 16), (12, 17), (13, 18), (14, 19), (15, 20), (16, 1), (17, 0), (18, 23), (19, 2), (20, 3), (21, 4), (22, 21), (23, 22)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c(NC(C(Oc2cccc(C=O)c2)C)=O)c(CC)ccc1CC\n\nMolecule 2: C(c1ccc(cc1NC(C(Oc1cccc(C=O)c1)C)=O)CC)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 6), (2, 7), (3, 8), (4, 9), (5, 10), (6, 11), (7, 12), (8, 13), (9, 14), (10, 15), (11, 16), (12, 17), (13, 18), (14, 19), (15, 20), (16, 1), (17, 0), (18, 23), (19, 2), (20, 3), (21, 4), (22, 21), (23, 22)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "77ebf63e-b565-4ee1-9553-5e6d48fc8c13", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCOc1ccccc1NC(=O)NC1CCCc2c1cnn2C", "smiles1": "n1n(c2c(c1)C(NC(Nc1ccccc1OCCC)=O)CCC2)C", "smiles2": "Cn1ncc2c1CCCC2NC(Nc1ccccc1OCCC)=O", "answer": "[(0, 2), (1, 1), (2, 5), (3, 4), (4, 3), (5, 9), (6, 10), (7, 11), (8, 12), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18), (15, 19), (16, 20), (17, 21), (18, 22), (19, 23), (20, 8), (21, 7), (22, 6), (23, 0)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: n1n(c2c(c1)C(NC(Nc1ccccc1OCCC)=O)CCC2)C\n\nMolecule 2: Cn1ncc2c1CCCC2NC(Nc1ccccc1OCCC)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 2), (1, 1), (2, 5), (3, 4), (4, 3), (5, 9), (6, 10), (7, 11), (8, 12), (9, 13), (10, 14), (11, 15), (12, 16), (13, 17), (14, 18), (15, 19), (16, 20), (17, 21), (18, 22), (19, 23), (20, 8), (21, 7), (22, 6), (23, 0)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "24e7ba3f-0623-4696-ba4b-52726711b308", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCc1cccc2c(CCNC(=O)CC3SC(N)=NC3=O)c[nH]c12", "smiles1": "c1c2c(CCNC(CC3C(=O)N=C(N)S3)=O)c[nH]c2c(CC)cc1", "smiles2": "CCc1cccc2c1[nH]cc2CCNC(CC1C(N=C(N)S1)=O)=O", "answer": "[(0, 5), (1, 6), (2, 10), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 16), (9, 17), (10, 22), (11, 18), (12, 19), (13, 20), (14, 21), (15, 23), (16, 9), (17, 8), (18, 7), (19, 2), (20, 1), (21, 0), (22, 3), (23, 4)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c2c(CCNC(CC3C(=O)N=C(N)S3)=O)c[nH]c2c(CC)cc1\n\nMolecule 2: CCc1cccc2c1[nH]cc2CCNC(CC1C(N=C(N)S1)=O)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 5), (1, 6), (2, 10), (3, 11), (4, 12), (5, 13), (6, 14), (7, 15), (8, 16), (9, 17), (10, 22), (11, 18), (12, 19), (13, 20), (14, 21), (15, 23), (16, 9), (17, 8), (18, 7), (19, 2), (20, 1), (21, 0), (22, 3), (23, 4)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "f72b536a-b614-403c-9b66-373ccc6a8421", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CN1C(=O)CC(C(=O)Nc2ccc3c(c2)OCO3)C1c1cccs1", "smiles1": "c1ccsc1C1C(CC(=O)N1C)C(=O)Nc1cc2OCOc2cc1", "smiles2": "c1(cc2OCOc2cc1)NC(=O)C1C(c2cccs2)N(C(=O)C1)C", "answer": "[(0, 15), (1, 16), (2, 17), (3, 18), (4, 14), (5, 13), (6, 12), (7, 22), (8, 20), (9, 21), (10, 19), (11, 23), (12, 10), (13, 11), (14, 9), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 6), (22, 7), (23, 8)]", "n_atoms": 24}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1ccsc1C1C(CC(=O)N1C)C(=O)Nc1cc2OCOc2cc1\n\nMolecule 2: c1(cc2OCOc2cc1)NC(=O)C1C(c2cccs2)N(C(=O)C1)C\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 15), (1, 16), (2, 17), (3, 18), (4, 14), (5, 13), (6, 12), (7, 22), (8, 20), (9, 21), (10, 19), (11, 23), (12, 10), (13, 11), (14, 9), (15, 0), (16, 1), (17, 2), (18, 3), (19, 4), (20, 5), (21, 6), (22, 7), (23, 8)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "05fa6e42-a0c0-4ef7-ac29-c5c2f0e3f704", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCc1ccccc1Nc1nc(N)nc(CSCc2noc(C)n2)n1", "smiles1": "c1(N)nc(nc(Nc2ccccc2CC)n1)CSCc1noc(C)n1", "smiles2": "c1cc(c(cc1)Nc1nc(CSCc2noc(C)n2)nc(N)n1)CC", "answer": "[(0, 20), (1, 21), (2, 19), (3, 9), (4, 8), (5, 7), (6, 6), (7, 3), (8, 4), (9, 5), (10, 0), (11, 1), (12, 2), (13, 23), (14, 24), (15, 22), (16, 10), (17, 11), (18, 12), (19, 13), (20, 14), (21, 15), (22, 16), (23, 17), (24, 18)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(N)nc(nc(Nc2ccccc2CC)n1)CSCc1noc(C)n1\n\nMolecule 2: c1cc(c(cc1)Nc1nc(CSCc2noc(C)n2)nc(N)n1)CC\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 20), (1, 21), (2, 19), (3, 9), (4, 8), (5, 7), (6, 6), (7, 3), (8, 4), (9, 5), (10, 0), (11, 1), (12, 2), (13, 23), (14, 24), (15, 22), (16, 10), (17, 11), (18, 12), (19, 13), (20, 14), (21, 15), (22, 16), (23, 17), (24, 18)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "07ed328d-5e1e-488d-b173-54927b1ad663", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1cc(C(=O)NCC2Cc3cc(-c4ccsc4)cc(Cl)c3O2)n[nH]1", "smiles1": "c1c2CC(CNC(=O)c3cc(C)[nH]n3)Oc2c(cc1-c1cscc1)Cl", "smiles2": "c1c(-c2cscc2)cc(Cl)c2OC(CNC(c3n[nH]c(C)c3)=O)Cc12", "answer": "[(0, 0), (1, 24), (2, 23), (3, 12), (4, 13), (5, 14), (6, 15), (7, 22), (8, 16), (9, 21), (10, 19), (11, 20), (12, 18), (13, 17), (14, 11), (15, 10), (16, 8), (17, 7), (18, 1), (19, 2), (20, 3), (21, 4), (22, 5), (23, 6), (24, 9)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1c2CC(CNC(=O)c3cc(C)[nH]n3)Oc2c(cc1-c1cscc1)Cl\n\nMolecule 2: c1c(-c2cscc2)cc(Cl)c2OC(CNC(c3n[nH]c(C)c3)=O)Cc12\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 24), (2, 23), (3, 12), (4, 13), (5, 14), (6, 15), (7, 22), (8, 16), (9, 21), (10, 19), (11, 20), (12, 18), (13, 17), (14, 11), (15, 10), (16, 8), (17, 7), (18, 1), (19, 2), (20, 3), (21, 4), (22, 5), (23, 6), (24, 9)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "08086da2-e491-477c-91ea-f17abcddd637", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "Cc1nn(C)c2ncc(C(=O)N3CCc4c(F)ccc(F)c4C3)cc12", "smiles1": "c1(c2CN(C(c3cc4c(nn(C)c4nc3)C)=O)CCc2c(cc1)F)F", "smiles2": "c1(c2CN(CCc2c(F)cc1)C(=O)c1cnc2c(c(C)nn2C)c1)F", "answer": "[(0, 0), (1, 1), (2, 2), (3, 3), (4, 11), (5, 13), (6, 23), (7, 17), (8, 18), (9, 20), (10, 21), (11, 22), (12, 16), (13, 15), (14, 14), (15, 19), (16, 12), (17, 4), (18, 5), (19, 6), (20, 7), (21, 9), (22, 10), (23, 8), (24, 24)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1(c2CN(C(c3cc4c(nn(C)c4nc3)C)=O)CCc2c(cc1)F)F\n\nMolecule 2: c1(c2CN(CCc2c(F)cc1)C(=O)c1cnc2c(c(C)nn2C)c1)F\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 0), (1, 1), (2, 2), (3, 3), (4, 11), (5, 13), (6, 23), (7, 17), (8, 18), (9, 20), (10, 21), (11, 22), (12, 16), (13, 15), (14, 14), (15, 19), (16, 12), (17, 4), (18, 5), (19, 6), (20, 7), (21, 9), (22, 10), (23, 8), (24, 24)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "c31d97d5-a01f-41d4-917f-95ced36c2195", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "O=C(c1ccccc1Cl)N(Cc1ccc(F)cc1Cl)c1ccccn1", "smiles1": "c1nc(ccc1)N(Cc1c(cc(F)cc1)Cl)C(c1c(Cl)cccc1)=O", "smiles2": "c1cc(cc(Cl)c1CN(C(c1ccccc1Cl)=O)c1ncccc1)F", "answer": "[(0, 20), (1, 19), (2, 18), (3, 23), (4, 22), (5, 21), (6, 8), (7, 7), (8, 6), (9, 4), (10, 3), (11, 2), (12, 24), (13, 1), (14, 0), (15, 5), (16, 9), (17, 10), (18, 15), (19, 16), (20, 14), (21, 13), (22, 12), (23, 11), (24, 17)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: c1nc(ccc1)N(Cc1c(cc(F)cc1)Cl)C(c1c(Cl)cccc1)=O\n\nMolecule 2: c1cc(cc(Cl)c1CN(C(c1ccccc1Cl)=O)c1ncccc1)F\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 20), (1, 19), (2, 18), (3, 23), (4, 22), (5, 21), (6, 8), (7, 7), (8, 6), (9, 4), (10, 3), (11, 2), (12, 24), (13, 1), (14, 0), (15, 5), (16, 9), (17, 10), (18, 15), (19, 16), (20, 14), (21, 13), (22, 12), (23, 11), (24, 17)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "0a933c85-2dc4-4b27-839f-8bc6d6c9e3ef", "question_category": "atom_mapping", "sub_category": "random", "meta_data": {"smiles": "CCCNC(=O)c1cccc(NC(=O)COc2ccc(Br)cc2C)c1", "smiles1": "C(NCCC)(=O)c1cccc(c1)NC(=O)COc1c(C)cc(Br)cc1", "smiles2": "c1(NC(=O)COc2ccc(Br)cc2C)cccc(c1)C(NCCC)=O", "answer": "[(0, 19), (1, 20), (2, 21), (3, 22), (4, 23), (5, 24), (6, 17), (7, 16), (8, 15), (9, 14), (10, 0), (11, 18), (12, 1), (13, 2), (14, 3), (15, 4), (16, 5), (17, 6), (18, 12), (19, 13), (20, 11), (21, 9), (22, 10), (23, 8), (24, 7)]", "n_atoms": 25}, "prompt": "You are given two SMILES strings for the same molecule. Atoms are numbered from left to right, with the first atom having index 0. Only heavy atoms are numbered and mapped.\n\nMolecule 1: C(NCCC)(=O)c1cccc(c1)NC(=O)COc1c(C)cc(Br)cc1\n\nMolecule 2: c1(NC(=O)COc2ccc(Br)cc2C)cccc(c1)C(NCCC)=O\n\nDetermine the mapping of atoms from Molecule 1 to Molecule 2. Provide your answer as a list of tuples, where each tuple contains the atom index from Molecule 1 and its corresponding atom index from Molecule 2. Only write the answer. Do not write any comments.", "answer": "[(0, 19), (1, 20), (2, 21), (3, 22), (4, 23), (5, 24), (6, 17), (7, 16), (8, 15), (9, 14), (10, 0), (11, 18), (12, 1), (13, 2), (14, 3), (15, 4), (16, 5), (17, 6), (18, 12), (19, 13), (20, 11), (21, 9), (22, 10), (23, 8), (24, 7)]", "answer_format": "list_of_tuples", "answer_range": null, "verification_method": "list_of_tuples", "ChemIQ": true}
{"uuid": "5ddef6a7-812c-4d7f-a9f2-4075d033857b", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COC(=O)c1ccc(Cl)nn1", "smiles_random": "O(C)C(=O)c1ccc(Cl)nn1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO(C)C(=O)c1ccc(Cl)nn1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC(=O)c1ccc(Cl)nn1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "1003ae77-3566-4a82-8d05-0c06e7db579f", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccc2ccc(Cl)nc2n1", "smiles_random": "c1cc(nc2c1ccc(C)n2)Cl"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(nc2c1ccc(C)n2)Cl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc2ccc(Cl)nc2n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "4122842f-3d6a-4215-b006-ca0a0ef52618", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "OC1CCCC1n1cccn1", "smiles_random": "c1ccn(n1)C1C(CCC1)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1ccn(n1)C1C(CCC1)O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "OC1CCCC1n1cccn1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "60f87653-5dbe-49de-85ae-1581c1fe8cb6", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(NCc1cccnc1)C1CC=CC1", "smiles_random": "C1(CC=CC1)C(=O)NCc1cnccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(CC=CC1)C(=O)NCc1cnccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(NCc1cccnc1)C1CC=CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "e448967d-6222-4ff6-83fa-ff2ac235fd3d", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(C=Cc1ccc(Cl)cc1)=NO", "smiles_random": "c1(C=CC(C)=NO)ccc(Cl)cc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(C=CC(C)=NO)ccc(Cl)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C=Cc1ccc(Cl)cc1)=NO", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "6e29f172-142c-4dce-a415-d945dd3a38f2", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(=O)C(C)CC(C)(O)c1ccccc1", "smiles_random": "c1c(cccc1)C(C)(CC(C)C(C)=O)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(cccc1)C(C)(CC(C)C(C)=O)O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(=O)C(C)CC(C)(O)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f99e001b-03ed-4bd7-9216-3c121117548a", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccc(CCNC(C)c2ccncc2)cc1", "smiles_random": "c1(C(C)NCCc2ccc(C)cc2)ccncc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(C(C)NCCc2ccc(C)cc2)ccncc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(CCNC(C)c2ccncc2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "186cecd8-d6d7-4f61-84c0-272020a6171f", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccnc2c1nc(N)n2C1CCCOC1", "smiles_random": "c1cc(c2nc(n(C3COCCC3)c2n1)N)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(c2nc(n(C3COCCC3)c2n1)N)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccnc2c1nc(N)n2C1CCCOC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2c2e31ae-7eae-4601-94d9-49838e19bede", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(C)CC(NC(=O)C1CC1)c1cccs1", "smiles_random": "c1cc(sc1)C(NC(C1CC1)=O)CC(C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(sc1)C(NC(C1CC1)=O)CC(C)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C)CC(NC(=O)C1CC1)c1cccs1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a82ac021-f3b5-4eda-8bfa-ae530a970a73", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCSCCC(=O)N1CCC(O)(C(F)(F)F)CC1", "smiles_random": "C1(C(F)(F)F)(CCN(CC1)C(CCSCC)=O)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(C(F)(F)F)(CCN(CC1)C(CCSCC)=O)O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCSCCC(=O)N1CCC(O)(C(F)(F)F)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b37771c3-ec1e-478c-8147-4aa7e377ddff", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COC1CCCC(OC(=O)c2cccc3cc[nH]c23)C1", "smiles_random": "O(C(=O)c1c2c(cc[nH]2)ccc1)C1CCCC(OC)C1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO(C(=O)c1c2c(cc[nH]2)ccc1)C1CCCC(OC)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC1CCCC(OC(=O)c2cccc3cc[nH]c23)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "df46b97c-d4b5-410e-9f74-2091e23dd9be", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1cc(Cl)ncc1NC(=O)N1CCC(C)C(O)C1", "smiles_random": "Cc1cc(Cl)ncc1NC(N1CC(O)C(C)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cc(Cl)ncc1NC(N1CC(O)C(C)CC1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(Cl)ncc1NC(=O)N1CCC(C)C(O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "cb5309c4-eb70-4cf3-b311-e2017463d0b9", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC1CN(C(=O)c2cc3ccccc3c(Cl)n2)C(C)(C)CO1", "smiles_random": "C1(OCC(N(C(=O)c2nc(Cl)c3ccccc3c2)C1)(C)C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(OCC(N(C(=O)c2nc(Cl)c3ccccc3c2)C1)(C)C)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1CN(C(=O)c2cc3ccccc3c(Cl)n2)C(C)(C)CO1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b402a812-905b-4aba-86d8-961486ae099d", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCN(Cc1cccc(C)c1)C(=O)NCC#Cc1ccccc1", "smiles_random": "C(c1cc(C)ccc1)N(C(=O)NCC#Cc1ccccc1)CC"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(c1cc(C)ccc1)N(C(=O)NCC#Cc1ccccc1)CC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCN(Cc1cccc(C)c1)C(=O)NCC#Cc1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "65bfb215-61b6-4470-9a98-545e84d649b3", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCOC(=O)NN=C1C(=O)Nc2ccc(Br)cc21", "smiles_random": "C(=O)(OCC)NN=C1C(Nc2ccc(Br)cc12)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(=O)(OCC)NN=C1C(Nc2ccc(Br)cc12)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOC(=O)NN=C1C(=O)Nc2ccc(Br)cc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a74d4ed1-b380-4017-b912-a24ee8591f83", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(Cc1ccc(Cl)cc1)NC1C(c2ccccc2)CC(O)C1O", "smiles_random": "C(C(NC1C(c2ccccc2)CC(C1O)O)=O)c1ccc(cc1)Cl"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(C(NC1C(c2ccccc2)CC(C1O)O)=O)c1ccc(cc1)Cl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(Cc1ccc(Cl)cc1)NC1C(c2ccccc2)CC(O)C1O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "46848258-4abd-4cbf-975f-30f6685a473c", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(CNC(=O)C1(C)CC1(Cl)Cl)c1nc(-c2ccccc2)no1", "smiles_random": "c1(ccccc1)-c1noc(n1)C(C)CNC(C1(C)CC1(Cl)Cl)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(ccccc1)-c1noc(n1)C(C)CNC(C1(C)CC1(Cl)Cl)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(CNC(=O)C1(C)CC1(Cl)Cl)c1nc(-c2ccccc2)no1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b962a6f1-0842-4492-8cb9-76340616d943", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCCC(=O)NCCOc1ccc2nnc(-c3ccccc3)n2n1", "smiles_random": "O(c1ccc2n(n1)c(-c1ccccc1)nn2)CCNC(CCC)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nO(c1ccc2n(n1)c(-c1ccccc1)nn2)CCNC(CCC)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCC(=O)NCCOc1ccc2nnc(-c3ccccc3)n2n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "5364e11e-13a6-4dda-855c-ae93575f4da7", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCc1ccc(-c2nc(C)c(C(=O)Nc3ccc(NC(C)=O)cc3)s2)cc1", "smiles_random": "C(C)(Nc1ccc(NC(c2c(C)nc(s2)-c2ccc(cc2)CC)=O)cc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(C)(Nc1ccc(NC(c2c(C)nc(s2)-c2ccc(cc2)CC)=O)cc1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCc1ccc(-c2nc(C)c(C(=O)Nc3ccc(NC(C)=O)cc3)s2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "438e0a68-963f-42af-a52b-28c9cf5b86a7", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COc1ccc(C(=O)N2N=C(c3ccc(OC)cc3)CC2(O)C(F)(F)F)cc1", "smiles_random": "N1(C(=O)c2ccc(OC)cc2)C(O)(C(F)(F)F)CC(c2ccc(cc2)OC)=N1"}, "prompt": "Write the IUPAC name of this molecule:\n\nN1(C(=O)c2ccc(OC)cc2)C(O)(C(F)(F)F)CC(c2ccc(cc2)OC)=N1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccc(C(=O)N2N=C(c3ccc(OC)cc3)CC2(O)C(F)(F)F)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "e7857db2-c27a-426d-86ce-a70bc7551751", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1cccc2nc(C(=O)OC(C)C(=O)NC3CCOc4ccccc43)cn12", "smiles_random": "O=C(NC1c2c(OCC1)cccc2)C(C)OC(=O)c1nc2n(c1)c(C)ccc2"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(NC1c2c(OCC1)cccc2)C(C)OC(=O)c1nc2n(c1)c(C)ccc2\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cccc2nc(C(=O)OC(C)C(=O)NC3CCOc4ccccc43)cn12", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "fbcfd1af-1261-4642-afb1-6e4a775d7f64", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(CN1CCCN(Cc2ccccc2Cl)S1(=O)=O)N1CCCCCC1", "smiles_random": "C1CCCN(CC1)C(CN1CCCN(S1(=O)=O)Cc1ccccc1Cl)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1CCCN(CC1)C(CN1CCCN(S1(=O)=O)Cc1ccccc1Cl)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(CN1CCCN(Cc2ccccc2Cl)S1(=O)=O)N1CCCCCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "5b9f7feb-d526-4bfe-902b-24cc55d5f1b5", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(NC(=O)C1CCN(C(=O)N2CCOc3ccc(Cl)cc32)CC1)c1ccccc1", "smiles_random": "C1(CCN(CC1)C(N1CCOc2ccc(cc21)Cl)=O)C(=O)NC(c1ccccc1)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(CCN(CC1)C(N1CCOc2ccc(cc21)Cl)=O)C(=O)NC(c1ccccc1)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(NC(=O)C1CCN(C(=O)N2CCOc3ccc(Cl)cc32)CC1)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "df10f59c-eefe-43ae-8a9c-a15c01a922c6", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cn1c(SCc2nc3ccccc3c(=O)n2Cc2ccco2)nc2ccccc21", "smiles_random": "c1ccc(o1)Cn1c(c2c(nc1CSc1nc3ccccc3n1C)cccc2)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1ccc(o1)Cn1c(c2c(nc1CSc1nc3ccccc3n1C)cccc2)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cn1c(SCc2nc3ccccc3c(=O)n2Cc2ccco2)nc2ccccc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "46cf1478-6261-45fb-921f-2662cb6fd567", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "C=CCn1c(=NC(=O)c2ccc3ncsc3c2)sc2cc(S(N)(=O)=O)ccc21", "smiles_random": "c12c(ccc(S(=O)(N)=O)c2)n(c(s1)=NC(c1ccc2ncsc2c1)=O)CC=C"}, "prompt": "Write the IUPAC name of this molecule:\n\nc12c(ccc(S(=O)(N)=O)c2)n(c(s1)=NC(c1ccc2ncsc2c1)=O)CC=C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "C=CCn1c(=NC(=O)c2ccc3ncsc3c2)sc2cc(S(N)(=O)=O)ccc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "002b6da1-b4e0-4f3b-b556-9dba5c2abf59", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(c1ccccc1Cl)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1", "smiles_random": "c1cc(Cl)c(cc1)C(=O)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(Cl)c(cc1)C(=O)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(c1ccccc1Cl)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "017028c8-fe08-4cec-9c70-a91b7d944282", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(CCc1cccc(Cl)c1Cl)Nc1cc(N2CCCS2(=O)=O)ccc1Cl", "smiles_random": "C(c1c(Cl)c(ccc1)Cl)CC(=O)Nc1c(ccc(c1)N1CCCS1(=O)=O)Cl"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(c1c(Cl)c(ccc1)Cl)CC(=O)Nc1c(ccc(c1)N1CCCS1(=O)=O)Cl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(CCc1cccc(Cl)c1Cl)Nc1cc(N2CCCS2(=O)=O)ccc1Cl", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "fade95d4-dc49-48a2-9a09-9c1c5ff6a206", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(c1sc2cc(Cl)ccc2c1Cl)N(Cc1ccc(F)cc1)C1CCS(=O)(=O)C1", "smiles_random": "C1(CCS(C1)(=O)=O)N(C(c1c(c2c(s1)cc(Cl)cc2)Cl)=O)Cc1ccc(cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(CCS(C1)(=O)=O)N(C(c1c(c2c(s1)cc(Cl)cc2)Cl)=O)Cc1ccc(cc1)F\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(c1sc2cc(Cl)ccc2c1Cl)N(Cc1ccc(F)cc1)C1CCS(=O)(=O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c0d1797f-ebf9-488e-a90a-bd60ab428dbe", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCOC(=O)c1nn(-c2ccccc2)c(=O)cc1NC(=O)c1ccc(I)cc1", "smiles_random": "N(c1c(C(OCC)=O)nn(-c2ccccc2)c(c1)=O)C(c1ccc(cc1)I)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nN(c1c(C(OCC)=O)nn(-c2ccccc2)c(c1)=O)C(c1ccc(cc1)I)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOC(=O)c1nn(-c2ccccc2)c(=O)cc1NC(=O)c1ccc(I)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "cfbdc8d4-ea6e-4f55-ac7a-50f66ebda333", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCOC(=O)N1CCc2nc(NC(=O)C3CCCN3S(=O)(=O)c3cccs3)sc2C1", "smiles_random": "c12CN(CCc1nc(s2)NC(C1N(S(c2sccc2)(=O)=O)CCC1)=O)C(=O)OCC"}, "prompt": "Write the IUPAC name of this molecule:\n\nc12CN(CCc1nc(s2)NC(C1N(S(c2sccc2)(=O)=O)CCC1)=O)C(=O)OCC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOC(=O)N1CCc2nc(NC(=O)C3CCCN3S(=O)(=O)c3cccs3)sc2C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "434c2706-8e47-466d-93d8-4e276480ee72", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COC(=O)c1ccc(Cl)nn1", "smiles_random": "O(C)C(=O)c1ccc(Cl)nn1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOC(=O)c1ccc(Cl)nn1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC(=O)c1ccc(Cl)nn1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "bd643bdc-9228-41f4-9841-6c82b32e9bd6", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccc2ccc(Cl)nc2n1", "smiles_random": "c1cc(nc2c1ccc(C)n2)Cl"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccc2ccc(Cl)nc2n1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc2ccc(Cl)nc2n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c77177ac-ba1c-402e-b0f6-b564a8b8883b", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "OC1CCCC1n1cccn1", "smiles_random": "c1ccn(n1)C1C(CCC1)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nOC1CCCC1n1cccn1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "OC1CCCC1n1cccn1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "592cb827-0db9-42ce-bf69-4d89d0fc13ce", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(NCc1cccnc1)C1CC=CC1", "smiles_random": "C1(CC=CC1)C(=O)NCc1cnccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(NCc1cccnc1)C1CC=CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(NCc1cccnc1)C1CC=CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8ebfcef9-9080-4c70-a2bc-43d75dd0ab09", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(C=Cc1ccc(Cl)cc1)=NO", "smiles_random": "c1(C=CC(C)=NO)ccc(Cl)cc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(C=Cc1ccc(Cl)cc1)=NO\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C=Cc1ccc(Cl)cc1)=NO", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2219da61-8ce7-45d3-96b9-2cb0d4fce522", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(=O)C(C)CC(C)(O)c1ccccc1", "smiles_random": "c1c(cccc1)C(C)(CC(C)C(C)=O)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(=O)C(C)CC(C)(O)c1ccccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(=O)C(C)CC(C)(O)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "39a91b06-bb8d-4b77-815c-9858e3a19c70", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccc(CCNC(C)c2ccncc2)cc1", "smiles_random": "c1(C(C)NCCc2ccc(C)cc2)ccncc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccc(CCNC(C)c2ccncc2)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(CCNC(C)c2ccncc2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "4f0a3a63-fabc-4f7e-8cd9-ad9fca5bf9e9", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccnc2c1nc(N)n2C1CCCOC1", "smiles_random": "c1cc(c2nc(n(C3COCCC3)c2n1)N)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccnc2c1nc(N)n2C1CCCOC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccnc2c1nc(N)n2C1CCCOC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2a487816-e66f-42c2-9609-64d63e6cc675", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(C)CC(NC(=O)C1CC1)c1cccs1", "smiles_random": "c1cc(sc1)C(NC(C1CC1)=O)CC(C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(C)CC(NC(=O)C1CC1)c1cccs1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C)CC(NC(=O)C1CC1)c1cccs1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "21a672c5-4248-4975-9654-679110831016", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCSCCC(=O)N1CCC(O)(C(F)(F)F)CC1", "smiles_random": "C1(C(F)(F)F)(CCN(CC1)C(CCSCC)=O)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCSCCC(=O)N1CCC(O)(C(F)(F)F)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCSCCC(=O)N1CCC(O)(C(F)(F)F)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "6cc153e9-80c5-45ee-93b1-f08827c0ede9", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COC1CCCC(OC(=O)c2cccc3cc[nH]c23)C1", "smiles_random": "O(C(=O)c1c2c(cc[nH]2)ccc1)C1CCCC(OC)C1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOC1CCCC(OC(=O)c2cccc3cc[nH]c23)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC1CCCC(OC(=O)c2cccc3cc[nH]c23)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "19f2237b-fd62-42a1-bd4a-d10cb0bb6468", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1cc(Cl)ncc1NC(=O)N1CCC(C)C(O)C1", "smiles_random": "Cc1cc(Cl)ncc1NC(N1CC(O)C(C)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cc(Cl)ncc1NC(=O)N1CCC(C)C(O)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(Cl)ncc1NC(=O)N1CCC(C)C(O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "eef560ec-3f1b-4de1-a564-2c81f71d18fc", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC1CN(C(=O)c2cc3ccccc3c(Cl)n2)C(C)(C)CO1", "smiles_random": "C1(OCC(N(C(=O)c2nc(Cl)c3ccccc3c2)C1)(C)C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC1CN(C(=O)c2cc3ccccc3c(Cl)n2)C(C)(C)CO1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1CN(C(=O)c2cc3ccccc3c(Cl)n2)C(C)(C)CO1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "9fc305fc-b01e-4b29-aeb7-9ac63730ca6a", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCN(Cc1cccc(C)c1)C(=O)NCC#Cc1ccccc1", "smiles_random": "C(c1cc(C)ccc1)N(C(=O)NCC#Cc1ccccc1)CC"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCN(Cc1cccc(C)c1)C(=O)NCC#Cc1ccccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCN(Cc1cccc(C)c1)C(=O)NCC#Cc1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8dbc649b-1f1e-426c-b7c0-4d67781f6b04", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCOC(=O)NN=C1C(=O)Nc2ccc(Br)cc21", "smiles_random": "C(=O)(OCC)NN=C1C(Nc2ccc(Br)cc12)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCOC(=O)NN=C1C(=O)Nc2ccc(Br)cc21\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOC(=O)NN=C1C(=O)Nc2ccc(Br)cc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "01441c42-bf20-4be2-bdbf-57f18077646f", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(Cc1ccc(Cl)cc1)NC1C(c2ccccc2)CC(O)C1O", "smiles_random": "C(C(NC1C(c2ccccc2)CC(C1O)O)=O)c1ccc(cc1)Cl"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(Cc1ccc(Cl)cc1)NC1C(c2ccccc2)CC(O)C1O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(Cc1ccc(Cl)cc1)NC1C(c2ccccc2)CC(O)C1O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "0df0bf5d-a231-4663-9d13-8e11fcb0d984", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(CNC(=O)C1(C)CC1(Cl)Cl)c1nc(-c2ccccc2)no1", "smiles_random": "c1(ccccc1)-c1noc(n1)C(C)CNC(C1(C)CC1(Cl)Cl)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(CNC(=O)C1(C)CC1(Cl)Cl)c1nc(-c2ccccc2)no1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(CNC(=O)C1(C)CC1(Cl)Cl)c1nc(-c2ccccc2)no1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d5575250-aa25-4522-b8fd-f0fd587ae4ca", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCCC(=O)NCCOc1ccc2nnc(-c3ccccc3)n2n1", "smiles_random": "O(c1ccc2n(n1)c(-c1ccccc1)nn2)CCNC(CCC)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCCC(=O)NCCOc1ccc2nnc(-c3ccccc3)n2n1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCC(=O)NCCOc1ccc2nnc(-c3ccccc3)n2n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "bf821fa3-1d55-4324-a8a1-d5c6673f2965", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCc1ccc(-c2nc(C)c(C(=O)Nc3ccc(NC(C)=O)cc3)s2)cc1", "smiles_random": "C(C)(Nc1ccc(NC(c2c(C)nc(s2)-c2ccc(cc2)CC)=O)cc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCc1ccc(-c2nc(C)c(C(=O)Nc3ccc(NC(C)=O)cc3)s2)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCc1ccc(-c2nc(C)c(C(=O)Nc3ccc(NC(C)=O)cc3)s2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8e616c45-d803-46af-9db5-a5e1dfaba209", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COc1ccc(C(=O)N2N=C(c3ccc(OC)cc3)CC2(O)C(F)(F)F)cc1", "smiles_random": "N1(C(=O)c2ccc(OC)cc2)C(O)(C(F)(F)F)CC(c2ccc(cc2)OC)=N1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOc1ccc(C(=O)N2N=C(c3ccc(OC)cc3)CC2(O)C(F)(F)F)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccc(C(=O)N2N=C(c3ccc(OC)cc3)CC2(O)C(F)(F)F)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d93d894d-227a-4663-86af-6b80b66ad29a", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1cccc2nc(C(=O)OC(C)C(=O)NC3CCOc4ccccc43)cn12", "smiles_random": "O=C(NC1c2c(OCC1)cccc2)C(C)OC(=O)c1nc2n(c1)c(C)ccc2"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cccc2nc(C(=O)OC(C)C(=O)NC3CCOc4ccccc43)cn12\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cccc2nc(C(=O)OC(C)C(=O)NC3CCOc4ccccc43)cn12", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c8f97f6c-b9bd-4d52-ba9b-a0f3d6dc6128", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(CN1CCCN(Cc2ccccc2Cl)S1(=O)=O)N1CCCCCC1", "smiles_random": "C1CCCN(CC1)C(CN1CCCN(S1(=O)=O)Cc1ccccc1Cl)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(CN1CCCN(Cc2ccccc2Cl)S1(=O)=O)N1CCCCCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(CN1CCCN(Cc2ccccc2Cl)S1(=O)=O)N1CCCCCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a540cac9-1202-4c0e-804b-f85de3e9d1aa", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(NC(=O)C1CCN(C(=O)N2CCOc3ccc(Cl)cc32)CC1)c1ccccc1", "smiles_random": "C1(CCN(CC1)C(N1CCOc2ccc(cc21)Cl)=O)C(=O)NC(c1ccccc1)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(NC(=O)C1CCN(C(=O)N2CCOc3ccc(Cl)cc32)CC1)c1ccccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(NC(=O)C1CCN(C(=O)N2CCOc3ccc(Cl)cc32)CC1)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "bfd9d867-308f-40e8-bcb8-2185e3e3b9f9", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cn1c(SCc2nc3ccccc3c(=O)n2Cc2ccco2)nc2ccccc21", "smiles_random": "c1ccc(o1)Cn1c(c2c(nc1CSc1nc3ccccc3n1C)cccc2)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCn1c(SCc2nc3ccccc3c(=O)n2Cc2ccco2)nc2ccccc21\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cn1c(SCc2nc3ccccc3c(=O)n2Cc2ccco2)nc2ccccc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "bf3fa4b4-1d41-4845-8987-cfe05a826bbb", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "C=CCn1c(=NC(=O)c2ccc3ncsc3c2)sc2cc(S(N)(=O)=O)ccc21", "smiles_random": "c12c(ccc(S(=O)(N)=O)c2)n(c(s1)=NC(c1ccc2ncsc2c1)=O)CC=C"}, "prompt": "Write the IUPAC name of this molecule:\n\nC=CCn1c(=NC(=O)c2ccc3ncsc3c2)sc2cc(S(N)(=O)=O)ccc21\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "C=CCn1c(=NC(=O)c2ccc3ncsc3c2)sc2cc(S(N)(=O)=O)ccc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "9f2a7db1-ddee-4a5c-8210-f7533efc46a5", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(c1ccccc1Cl)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1", "smiles_random": "c1cc(Cl)c(cc1)C(=O)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(c1ccccc1Cl)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(c1ccccc1Cl)N1CCN(S(=O)(=O)c2ccc(Br)s2)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a12015e5-b088-42c1-b44c-314ff619adb8", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(CCc1cccc(Cl)c1Cl)Nc1cc(N2CCCS2(=O)=O)ccc1Cl", "smiles_random": "C(c1c(Cl)c(ccc1)Cl)CC(=O)Nc1c(ccc(c1)N1CCCS1(=O)=O)Cl"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(CCc1cccc(Cl)c1Cl)Nc1cc(N2CCCS2(=O)=O)ccc1Cl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(CCc1cccc(Cl)c1Cl)Nc1cc(N2CCCS2(=O)=O)ccc1Cl", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "64b389bb-b80d-48e5-8dbe-3261f33c4cd5", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(c1sc2cc(Cl)ccc2c1Cl)N(Cc1ccc(F)cc1)C1CCS(=O)(=O)C1", "smiles_random": "C1(CCS(C1)(=O)=O)N(C(c1c(c2c(s1)cc(Cl)cc2)Cl)=O)Cc1ccc(cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(c1sc2cc(Cl)ccc2c1Cl)N(Cc1ccc(F)cc1)C1CCS(=O)(=O)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(c1sc2cc(Cl)ccc2c1Cl)N(Cc1ccc(F)cc1)C1CCS(=O)(=O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "fffe6a5e-1dc1-4cd5-a3c2-732149dafdcf", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCOC(=O)c1nn(-c2ccccc2)c(=O)cc1NC(=O)c1ccc(I)cc1", "smiles_random": "N(c1c(C(OCC)=O)nn(-c2ccccc2)c(c1)=O)C(c1ccc(cc1)I)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCOC(=O)c1nn(-c2ccccc2)c(=O)cc1NC(=O)c1ccc(I)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOC(=O)c1nn(-c2ccccc2)c(=O)cc1NC(=O)c1ccc(I)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f87ea8e0-1f2d-49b4-bda4-f0c3b110fd0b", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCOC(=O)N1CCc2nc(NC(=O)C3CCCN3S(=O)(=O)c3cccs3)sc2C1", "smiles_random": "c12CN(CCc1nc(s2)NC(C1N(S(c2sccc2)(=O)=O)CCC1)=O)C(=O)OCC"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCOC(=O)N1CCc2nc(NC(=O)C3CCCN3S(=O)(=O)c3cccs3)sc2C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOC(=O)N1CCc2nc(NC(=O)C3CCCN3S(=O)(=O)c3cccs3)sc2C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "38960d9c-5398-4a76-aed7-f4128142d5df", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=Cc1cc(C(=O)CCl)c[nH]1", "smiles_random": "C(c1c[nH]c(C=O)c1)(=O)CCl"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=Cc1cc(C(=O)CCl)c[nH]1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=Cc1cc(C(=O)CCl)c[nH]1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "74814569-2cf0-4870-8e35-9de015849276", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(NC(=O)C1CCCO1)C1CC1", "smiles_random": "C1COC(C(=O)NC(C2CC2)C)C1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(NC(=O)C1CCCO1)C1CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(NC(=O)C1CCCO1)C1CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "aab2070b-ca7e-471d-8cd8-4b435830fe2e", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COC(=O)c1ccc(F)c(F)c1", "smiles_random": "C(c1cc(F)c(cc1)F)(=O)OC"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOC(=O)c1ccc(F)c(F)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC(=O)c1ccc(F)c(F)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "27e25f98-0a4a-4044-b995-445ee75ea11e", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCNC1(C#N)CCC(C)CC1", "smiles_random": "N#CC1(NCC)CCC(C)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCNC1(C#N)CCC(C)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCNC1(C#N)CCC(C)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d2e71d3f-2991-4a50-9f68-a88b37a9c205", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCC(=O)c1ccc(F)c(F)c1", "smiles_random": "c1(F)c(cc(C(CC)=O)cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCC(=O)c1ccc(F)c(F)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(=O)c1ccc(F)c(F)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "067aa16a-45b1-41be-b36c-2084b0dfd95c", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Nc1ncc(F)cc1C#CCO", "smiles_random": "c1c(c(N)ncc1F)C#CCO"}, "prompt": "Write the IUPAC name of this molecule:\n\nNc1ncc(F)cc1C#CCO\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Nc1ncc(F)cc1C#CCO", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "46532cf3-13e7-4054-9b40-9ffbc064c843", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Nc1cncnc1NCC1CCC1", "smiles_random": "n1cnc(c(N)c1)NCC1CCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nNc1cncnc1NCC1CCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Nc1cncnc1NCC1CCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "1fd66452-9878-48c4-b94c-b3333b164f5f", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCC(C)CC(C)N1CC(=O)NC1=O", "smiles_random": "C(CC(CC)C)(N1CC(=O)NC1=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCC(C)CC(C)N1CC(=O)NC1=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(C)CC(C)N1CC(=O)NC1=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "715b8c76-9f05-4b37-90cf-127312ed8fbb", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "N#Cc1cccc(-c2ccc(N)cn2)n1", "smiles_random": "c1(-c2ncc(cc2)N)cccc(n1)C#N"}, "prompt": "Write the IUPAC name of this molecule:\n\nN#Cc1cccc(-c2ccc(N)cn2)n1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "N#Cc1cccc(-c2ccc(N)cn2)n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "1cbb4e4d-8d0f-4d08-88e5-c45d01091275", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "ClCC1CCCOC1c1cccnc1", "smiles_random": "O1C(c2cccnc2)C(CCC1)CCl"}, "prompt": "Write the IUPAC name of this molecule:\n\nClCC1CCCOC1c1cccnc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "ClCC1CCCOC1c1cccnc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b4e89a01-ffd3-4560-a55a-95d803932ce9", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCCOCCC(=O)Nc1[nH]ncc1N", "smiles_random": "O(CCC(=O)Nc1c(N)cn[nH]1)CCC"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCCOCCC(=O)Nc1[nH]ncc1N\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCOCCC(=O)Nc1[nH]ncc1N", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "ab17ee24-553e-4ab6-b945-919d9611c73c", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC1(C)C(=O)NCCN1Cc1cc[nH]c1", "smiles_random": "c1cc(c[nH]1)CN1C(C)(C)C(=O)NCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC1(C)C(=O)NCCN1Cc1cc[nH]c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1(C)C(=O)NCCN1Cc1cc[nH]c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d8187f95-cc52-4bb7-9f80-56db5776b8de", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCCCOCc1cnc(NN)s1", "smiles_random": "CCCCOCc1sc(NN)nc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCCCOCc1cnc(NN)s1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCCOCc1cnc(NN)s1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "bceb9e8d-2151-4d8f-a564-b9ca43590512", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C1Cc2cc(C(F)(F)F)ccc2N1", "smiles_random": "C1c2c(ccc(c2)C(F)(F)F)NC1=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C1Cc2cc(C(F)(F)F)ccc2N1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C1Cc2cc(C(F)(F)F)ccc2N1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b29255a2-2d39-4d25-9cfb-95633db23e60", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC1CCCC(N2CCOC(C(N)=NO)C2)C1", "smiles_random": "C(C1CN(CCO1)C1CCCC(C1)C)(N)=NO"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC1CCCC(N2CCOC(C(N)=NO)C2)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1CCCC(N2CCOC(C(N)=NO)C2)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "0e6eebf5-42de-4765-96f4-e2c0d66e8481", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(C)C(NCc1ncnn1C)c1cccnc1", "smiles_random": "c1(CNC(c2cccnc2)C(C)C)n(ncn1)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(C)C(NCc1ncnn1C)c1cccnc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C)C(NCc1ncnn1C)c1cccnc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "7194e435-6893-4d25-9192-a13285db4ea1", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COCCCNC(=O)c1cccc2cccnc12", "smiles_random": "c1ccc(C(=O)NCCCOC)c2c1cccn2"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOCCCNC(=O)c1cccc2cccnc12\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COCCCNC(=O)c1cccc2cccnc12", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c5cc5a8a-2ebc-48db-9be1-b51a09c4369c", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CN1C(=O)NCC1c1ccc(C(C)(C)C)cc1", "smiles_random": "C1C(N(C(=O)N1)C)c1ccc(cc1)C(C)(C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCN1C(=O)NCC1c1ccc(C(C)(C)C)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CN1C(=O)NCC1c1ccc(C(C)(C)C)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "bf1eff89-ca1f-4fb2-9984-a7cd636b1d8d", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(Cl)C(=O)N(C)C1(C#N)CCCCC1", "smiles_random": "C1CCCC(C1)(C#N)N(C(C(Cl)C)=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(Cl)C(=O)N(C)C1(C#N)CCCCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(Cl)C(=O)N(C)C1(C#N)CCCCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "0cb3585e-5371-4762-a030-ee0997752e77", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccccc1C(=O)NCc1cccc(C#N)c1", "smiles_random": "c1c(CNC(=O)c2ccccc2C)cc(C#N)cc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccccc1C(=O)NCc1cccc(C#N)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccccc1C(=O)NCc1cccc(C#N)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "6832557a-c04e-4cee-92d8-abd5f4a488f1", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCC(C#N)C1(O)CCCC(C(F)(F)F)C1", "smiles_random": "FC(F)(C1CCCC(C1)(O)C(CC)C#N)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCC(C#N)C1(O)CCCC(C(F)(F)F)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(C#N)C1(O)CCCC(C(F)(F)F)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b9b61c08-704b-401e-a8e9-89f89b496ff2", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "N#CC1(C(O)c2ccccc2Cl)CCc2ccccc21", "smiles_random": "c12ccccc1CCC2(C(c1ccccc1Cl)O)C#N"}, "prompt": "Write the IUPAC name of this molecule:\n\nN#CC1(C(O)c2ccccc2Cl)CCc2ccccc21\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "N#CC1(C(O)c2ccccc2Cl)CCc2ccccc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "ffb10470-18b5-4316-b33e-62b429aff08a", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Clc1nccc(N2CCC(N3CCOCC3)C2)n1", "smiles_random": "n1c(ccnc1Cl)N1CC(CC1)N1CCOCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nClc1nccc(N2CCC(N3CCOCC3)C2)n1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Clc1nccc(N2CCC(N3CCOCC3)C2)n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8380b01d-12f8-45f6-a8b4-ba30e96b0193", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Oc1ccc(-c2nc3ccccc3s2)cc1Cl", "smiles_random": "s1c2c(cccc2)nc1-c1ccc(O)c(Cl)c1"}, "prompt": "Write the IUPAC name of this molecule:\n\nOc1ccc(-c2nc3ccccc3s2)cc1Cl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Oc1ccc(-c2nc3ccccc3s2)cc1Cl", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8ed7ed1f-4c6b-4d3a-a016-937401266f2f", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1cccc(SC(C(N)=O)c2ccccc2)c1", "smiles_random": "c1cc(C)cc(SC(c2ccccc2)C(N)=O)c1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cccc(SC(C(N)=O)c2ccccc2)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cccc(SC(C(N)=O)c2ccccc2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "7d2ae94b-3381-4f0a-9979-fc38a91d737d", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(COc1ccccc1)Nc1ccc2ccccc2c1", "smiles_random": "c1c2ccc(NC(COc3ccccc3)=O)cc2ccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(COc1ccccc1)Nc1ccc2ccccc2c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(COc1ccccc1)Nc1ccc2ccccc2c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "33695d77-ddb9-45db-9ccd-f8391e395f91", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(CS(C)(=O)=O)N(C)C(=O)c1cccc(Cl)c1", "smiles_random": "O=S(=O)(C)CC(N(C(c1cc(Cl)ccc1)=O)C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(CS(C)(=O)=O)N(C)C(=O)c1cccc(Cl)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(CS(C)(=O)=O)N(C)C(=O)c1cccc(Cl)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f195630c-3262-4716-8b19-4819c97fcf7d", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccn(CC(=O)NC(C)c2nc3ccccc3o2)n1", "smiles_random": "n1c2c(cccc2)oc1C(C)NC(Cn1ccc(n1)C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccn(CC(=O)NC(C)c2nc3ccccc3o2)n1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccn(CC(=O)NC(C)c2nc3ccccc3o2)n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2a32381b-ac30-4177-b268-93369a1a3c06", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCCNC(=O)Nc1ccc(C(=O)N2CCC(C)CC2)cc1", "smiles_random": "c1c(NC(=O)NCCC)ccc(c1)C(N1CCC(C)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCCNC(=O)Nc1ccc(C(=O)N2CCC(C)CC2)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCNC(=O)Nc1ccc(C(=O)N2CCC(C)CC2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "55934151-583a-4ec9-8089-a862ef701217", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC1(CNC(=O)C2=Cc3cc(F)ccc3OC2)CCCS1", "smiles_random": "C1(C(=O)NCC2(C)SCCC2)COc2c(cc(F)cc2)C=1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC1(CNC(=O)C2=Cc3cc(F)ccc3OC2)CCCS1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1(CNC(=O)C2=Cc3cc(F)ccc3OC2)CCCS1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8b12e1c6-dee9-45e1-b1e8-5a31ad534826", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COc1ccc(S(=O)(=O)NC2CCCCCCC2)cc1", "smiles_random": "c1c(ccc(c1)S(=O)(=O)NC1CCCCCCC1)OC"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOc1ccc(S(=O)(=O)NC2CCCCCCC2)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccc(S(=O)(=O)NC2CCCCCCC2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "9bdad3e2-6201-43f2-a67d-fbeb700ca7b9", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1cc(NC(=O)C2COc3ccccc3O2)c2ncccc2c1", "smiles_random": "c1c(C)cc(c2ncccc12)NC(=O)C1COc2ccccc2O1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cc(NC(=O)C2COc3ccccc3O2)c2ncccc2c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(NC(=O)C2COc3ccccc3O2)c2ncccc2c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "0d11592a-f64d-4c05-b2c5-aaa326599ada", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(Cc1ccccc1)C(=O)NCc1cn(-c2ccccc2)nn1", "smiles_random": "c1cc(CC(C)C(=O)NCc2cn(-c3ccccc3)nn2)ccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(Cc1ccccc1)C(=O)NCc1cn(-c2ccccc2)nn1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(Cc1ccccc1)C(=O)NCc1cn(-c2ccccc2)nn1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "1e04124d-6045-4254-af6b-e87d75ef9c5a", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(NC1CCSc2ccc(F)cc21)C(O)c1ccccc1", "smiles_random": "c1cccc(c1)C(C(=O)NC1CCSc2ccc(F)cc12)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(NC1CCSc2ccc(F)cc21)C(O)c1ccccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(NC1CCSc2ccc(F)cc21)C(O)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "ac7dbe04-f111-4c14-901e-16658c911d47", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CN(C)S(=O)(=O)CCNC(=O)C1COc2ccccc2C1", "smiles_random": "O=S(=O)(N(C)C)CCNC(=O)C1Cc2ccccc2OC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCN(C)S(=O)(=O)CCNC(=O)C1COc2ccccc2C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CN(C)S(=O)(=O)CCNC(=O)C1COc2ccccc2C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2be3b306-2c8d-463e-884d-cd6609b40238", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(=O)Nc1cccc(NC(=O)NCCc2nc(C(C)C)no2)c1", "smiles_random": "n1c(C(C)C)nc(o1)CCNC(Nc1cc(NC(=O)C)ccc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(=O)Nc1cccc(NC(=O)NCCc2nc(C(C)C)no2)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(=O)Nc1cccc(NC(=O)NCCc2nc(C(C)C)no2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "5d8bc2b0-8c62-4c87-8cb6-d473528ed811", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(NCC(c1ccccc1)C(C)(C)CO)c1cc(F)ccc1F", "smiles_random": "c1ccccc1C(C(C)(CO)C)CNC(c1cc(F)ccc1F)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(NCC(c1ccccc1)C(C)(C)CO)c1cc(F)ccc1F\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(NCC(c1ccccc1)C(C)(C)CO)c1cc(F)ccc1F", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "389a8b79-bbf6-42ee-aa5a-68280550fb20", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(CCc1ccccc1)NC(=O)C(=O)NCc1ccccc1Cl", "smiles_random": "c1(c(Cl)cccc1)CNC(C(=O)NC(CCc1ccccc1)C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(CCc1ccccc1)NC(=O)C(=O)NCc1ccccc1Cl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(CCc1ccccc1)NC(=O)C(=O)NCc1ccccc1Cl", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "e1701f4e-1107-4143-a051-7ce086878d25", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COCC(NC(=O)C=Cc1ccc(Br)s1)C(N)=O", "smiles_random": "O=C(NC(COC)C(N)=O)C=Cc1ccc(Br)s1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOCC(NC(=O)C=Cc1ccc(Br)s1)C(N)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COCC(NC(=O)C=Cc1ccc(Br)s1)C(N)=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "207a4772-6d8f-437f-ae93-05181dfd77b2", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCC(=O)Oc1ccc2c(C)c(Cc3ccccc3)c(=O)oc2c1C", "smiles_random": "O=C(CC)Oc1ccc2c(c1C)oc(c(Cc1ccccc1)c2C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCC(=O)Oc1ccc2c(C)c(Cc3ccccc3)c(=O)oc2c1C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(=O)Oc1ccc2c(C)c(Cc3ccccc3)c(=O)oc2c1C", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "0a3bdbff-648c-42b5-bf82-3cca4a8a0644", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1cc(C)n2nc(SCC(=O)c3ccc4[nH]c(=O)[nH]c4c3)nc2n1", "smiles_random": "c12nc(SCC(=O)c3cc4[nH]c([nH]c4cc3)=O)nn2c(cc(C)n1)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cc(C)n2nc(SCC(=O)c3ccc4[nH]c(=O)[nH]c4c3)nc2n1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(C)n2nc(SCC(=O)c3ccc4[nH]c(=O)[nH]c4c3)nc2n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b44a6b5f-07e2-48f0-b9c0-d03f9fb97af5", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(c1cc(Cl)c2ccccc2c1O)N1CCCCC1c1ncc[nH]1", "smiles_random": "C1CC(c2[nH]ccn2)N(C(c2cc(Cl)c3c(cccc3)c2O)=O)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(c1cc(Cl)c2ccccc2c1O)N1CCCCC1c1ncc[nH]1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(c1cc(Cl)c2ccccc2c1O)N1CCCCC1c1ncc[nH]1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "5328bf14-1682-4748-840f-bbfc2d6f86bd", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1cccc(-n2c(C)nnc2SCc2nc(-c3cccs3)no2)c1", "smiles_random": "n1c(-c2cccs2)nc(CSc2n(c(C)nn2)-c2cccc(C)c2)o1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cccc(-n2c(C)nnc2SCc2nc(-c3cccs3)no2)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cccc(-n2c(C)nnc2SCc2nc(-c3cccs3)no2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "75c3c2a1-cf2d-416a-aa0c-779199fcce60", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCC(C)C(C(=O)N(C)CC(=O)Nc1c(C)cccc1C)c1ccccc1", "smiles_random": "c1ccc(c(c1C)NC(CN(C(=O)C(c1ccccc1)C(C)CC)C)=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCC(C)C(C(=O)N(C)CC(=O)Nc1c(C)cccc1C)c1ccccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(C)C(C(=O)N(C)CC(=O)Nc1c(C)cccc1C)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "eb6602ea-f0ea-4efb-b4ed-60fd0c149e2a", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COc1ccc(C2=C(C=O)C(c3ccccc3)c3ccccc3O2)cc1OC", "smiles_random": "O1C(c2ccc(OC)c(c2)OC)=C(C=O)C(c2ccccc21)c1ccccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOc1ccc(C2=C(C=O)C(c3ccccc3)c3ccccc3O2)cc1OC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccc(C2=C(C=O)C(c3ccccc3)c3ccccc3O2)cc1OC", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "414ea711-5f23-48e5-8a0c-2ca0acd83648", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCCC1CN(C(=O)c2c(C)cc(=O)n(CC(=O)NC(C)C)c2C)CCO1", "smiles_random": "C1(CN(C(=O)c2c(C)n(CC(=O)NC(C)C)c(=O)cc2C)CCO1)CCC"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCCC1CN(C(=O)c2c(C)cc(=O)n(CC(=O)NC(C)C)c2C)CCO1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCC1CN(C(=O)c2c(C)cc(=O)n(CC(=O)NC(C)C)c2C)CCO1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d15c46bc-031e-4156-9967-fb3252fb419c", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCc1cccc(C)c1NC(=O)C(C)S(=O)(=O)Cc1cccc(F)c1", "smiles_random": "c1c(F)cccc1CS(=O)(C(C)C(=O)Nc1c(cccc1C)CC)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCc1cccc(C)c1NC(=O)C(C)S(=O)(=O)Cc1cccc(F)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCc1cccc(C)c1NC(=O)C(C)S(=O)(=O)Cc1cccc(F)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "da3e560b-ffff-4e6a-b570-e15c3e9f98c1", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COc1ccccc1C(=O)N1CCCC(c2ncccc2S(C)(=O)=O)C1", "smiles_random": "C1CCN(C(=O)c2ccccc2OC)CC1c1ncccc1S(C)(=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOc1ccccc1C(=O)N1CCCC(c2ncccc2S(C)(=O)=O)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccccc1C(=O)N1CCCC(c2ncccc2S(C)(=O)=O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2224b563-90f1-479d-a480-c2ab03a9bdfd", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCC1CCCCN1C(=O)NC(c1ccc(OC)cc1)C1CCOCC1", "smiles_random": "c1(OC)ccc(C(C2CCOCC2)NC(N2C(CC)CCCC2)=O)cc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCC1CCCCN1C(=O)NC(c1ccc(OC)cc1)C1CCOCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC1CCCCN1C(=O)NC(c1ccc(OC)cc1)C1CCOCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d21dbc96-38a0-429f-a1c9-e2d72ab954b7", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(c1ccc(NC(=O)N2CCN(Cc3ccccc3)CC2)cc1)N1CCOCC1", "smiles_random": "c1cc(ccc1C(N1CCOCC1)C)NC(N1CCN(Cc2ccccc2)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(c1ccc(NC(=O)N2CCN(Cc3ccccc3)CC2)cc1)N1CCOCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(c1ccc(NC(=O)N2CCN(Cc3ccccc3)CC2)cc1)N1CCOCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b9a524df-0113-46a1-ad2a-f3c067762767", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(NCC(c1cccnc1)N1CCc2ccccc2C1)C(=O)Nc1ccccc1", "smiles_random": "c1cc(NC(=O)C(NCC(c2cccnc2)N2Cc3c(cccc3)CC2)=O)ccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(NCC(c1cccnc1)N1CCc2ccccc2C1)C(=O)Nc1ccccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(NCC(c1cccnc1)N1CCc2ccccc2C1)C(=O)Nc1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "3e181206-0cc7-44b3-aa65-a965282adb80", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COc1ccccc1-c1nnc(SCC(=O)Nc2ccc3c(c2)OCCO3)o1", "smiles_random": "c1(OC)ccccc1-c1oc(nn1)SCC(=O)Nc1cc2c(cc1)OCCO2"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOc1ccccc1-c1nnc(SCC(=O)Nc2ccc3c(c2)OCCO3)o1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccccc1-c1nnc(SCC(=O)Nc2ccc3c(c2)OCCO3)o1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "363954b4-4e23-4188-949e-be7cd3176535", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccc(-c2nc(C)c(C(=O)NC(c3ccc(F)cc3)C3CCCO3)s2)o1", "smiles_random": "C1(CCCO1)C(c1ccc(cc1)F)NC(c1sc(-c2ccc(C)o2)nc1C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccc(-c2nc(C)c(C(=O)NC(c3ccc(F)cc3)C3CCCO3)s2)o1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(-c2nc(C)c(C(=O)NC(c3ccc(F)cc3)C3CCCO3)s2)o1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "1c8a184c-cda3-40a6-8cd8-b17875bec0eb", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCCC(=O)N1CCCCC1c1nc2c(c(=O)[nH]1)CN(C(=O)C1CCCC1)CC2", "smiles_random": "c12c(c([nH]c(C3CCCCN3C(=O)CCC)n1)=O)CN(CC2)C(C1CCCC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCCC(=O)N1CCCCC1c1nc2c(c(=O)[nH]1)CN(C(=O)C1CCCC1)CC2\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCC(=O)N1CCCCC1c1nc2c(c(=O)[nH]1)CN(C(=O)C1CCCC1)CC2", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "16bc1e9a-9945-4ba2-ba00-4c6aa69b722a", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCn1c(SCC(=O)NC(=O)NCc2ccccc2)nnc1-c1ccc(Cl)cc1", "smiles_random": "c1(ccc(cc1)Cl)-c1n(CC)c(nn1)SCC(NC(NCc1ccccc1)=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCn1c(SCC(=O)NC(=O)NCc2ccccc2)nnc1-c1ccc(Cl)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCn1c(SCC(=O)NC(=O)NCc2ccccc2)nnc1-c1ccc(Cl)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "cba5b5b7-9151-4f23-926e-599e98dd2f8e", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CC(C)Oc1cc2ccccc2cc1C(=O)N1CCn2c(nnc2-c2cccs2)C1", "smiles_random": "CC(C)Oc1cc2ccccc2cc1C(N1Cc2nnc(n2CC1)-c1sccc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(C)Oc1cc2ccccc2cc1C(=O)N1CCn2c(nnc2-c2cccs2)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C)Oc1cc2ccccc2cc1C(=O)N1CCn2c(nnc2-c2cccs2)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "75a03b24-1cc2-49c3-a639-60b38b0eac9b", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCC(Oc1ccccc1F)C(=O)N(Cc1cccc(Cl)c1)C1CCS(=O)(=O)C1", "smiles_random": "C1C(N(Cc2cc(ccc2)Cl)C(C(CC)Oc2ccccc2F)=O)CS(C1)(=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCC(Oc1ccccc1F)C(=O)N(Cc1cccc(Cl)c1)C1CCS(=O)(=O)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(Oc1ccccc1F)C(=O)N(Cc1cccc(Cl)c1)C1CCS(=O)(=O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "9bda6585-31e2-408b-955f-cceaaeef231b", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1nnsc1C(=O)N1CCC(CNC(=O)C(C)(C)Oc2ccc(Cl)cc2)CC1", "smiles_random": "c1(Cl)ccc(cc1)OC(C)(C)C(=O)NCC1CCN(C(c2c(nns2)C)=O)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1nnsc1C(=O)N1CCC(CNC(=O)C(C)(C)Oc2ccc(Cl)cc2)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1nnsc1C(=O)N1CCC(CNC(=O)C(C)(C)Oc2ccc(Cl)cc2)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "03dd7aa9-1dc3-46fd-bd66-a9cf0668a536", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C(COc1ccc(Br)cc1)Nc1ccc2c(c1)C(=O)N(CC1CCCO1)C2=O", "smiles_random": "C1(OCCC1)CN1C(c2ccc(cc2C1=O)NC(COc1ccc(cc1)Br)=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(COc1ccc(Br)cc1)Nc1ccc2c(c1)C(=O)N(CC1CCCO1)C2=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(COc1ccc(Br)cc1)Nc1ccc2c(c1)C(=O)N(CC1CCCO1)C2=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "ba5952fa-0fe0-44b7-8513-39faf49e75df", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COc1cc(C=NNC(=O)c2cc(C)n[nH]2)ccc1OC(=O)c1cccc(Br)c1", "smiles_random": "C(c1cc(ccc1)Br)(Oc1ccc(C=NNC(c2[nH]nc(c2)C)=O)cc1OC)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOc1cc(C=NNC(=O)c2cc(C)n[nH]2)ccc1OC(=O)c1cccc(Br)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1cc(C=NNC(=O)c2cc(C)n[nH]2)ccc1OC(=O)c1cccc(Br)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a8e0f742-857f-492f-b9c7-4529fbeba329", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=S(=O)(c1ccc(Cl)cc1)n1nc(-c2cccnc2)nc1NCc1ccc(F)cc1", "smiles_random": "c1(ccc(CNc2n(nc(n2)-c2cnccc2)S(=O)(c2ccc(Cl)cc2)=O)cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=S(=O)(c1ccc(Cl)cc1)n1nc(-c2cccnc2)nc1NCc1ccc(F)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=S(=O)(c1ccc(Cl)cc1)n1nc(-c2cccnc2)nc1NCc1ccc(F)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "ad166ec4-f5ea-4492-803d-3f073ac750ab", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "NS(=O)(=O)c1ccc(Br)c(C(=O)Nc2cccc(NC(=O)c3ccco3)c2)c1", "smiles_random": "O=C(c1cc(ccc1Br)S(=O)(=O)N)Nc1cccc(c1)NC(c1occc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nNS(=O)(=O)c1ccc(Br)c(C(=O)Nc2cccc(NC(=O)c3ccco3)c2)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "NS(=O)(=O)c1ccc(Br)c(C(=O)Nc2cccc(NC(=O)c3ccco3)c2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f13fd2c9-5cfc-42e9-92ff-e3cae1e16ad8", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1noc2nc(C3CC3)cc(C(=O)N3CCN(S(=O)(=O)c4cccs4)CC3)c12", "smiles_random": "c12c(cc(nc1onc2C)C1CC1)C(N1CCN(S(=O)(=O)c2sccc2)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1noc2nc(C3CC3)cc(C(=O)N3CCN(S(=O)(=O)c4cccs4)CC3)c12\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1noc2nc(C3CC3)cc(C(=O)N3CCN(S(=O)(=O)c4cccs4)CC3)c12", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "19eb85f6-c2ad-41f1-9b93-52ba8e8a6f1b", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "CCOc1cc(C=Nc2c(C)n(C)n(-c3ccccc3)c2=O)cc(I)c1OC", "smiles_random": "c1cccc(c1)-n1c(c(c(n1C)C)N=Cc1cc(OCC)c(OC)c(c1)I)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCOc1cc(C=Nc2c(C)n(C)n(-c3ccccc3)c2=O)cc(I)c1OC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOc1cc(C=Nc2c(C)n(C)n(-c3ccccc3)c2=O)cc(I)c1OC", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "80bf41de-c8b0-40b3-ab2e-00a2af103219", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccc(C(=O)CSc2nnc3c(=O)n(-c4ccc(Br)cc4)ccn23)c(C)c1", "smiles_random": "c1c(ccc(Br)c1)-n1c(c2n(cc1)c(SCC(=O)c1ccc(cc1C)C)nn2)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccc(C(=O)CSc2nnc3c(=O)n(-c4ccc(Br)cc4)ccn23)c(C)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(C(=O)CSc2nnc3c(=O)n(-c4ccc(Br)cc4)ccn23)c(C)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "5ea3f44c-ab39-4c8d-b6d5-fd805c3818b1", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "COC(=O)c1ccc(N=C2SC(CC(=O)Nc3ccc(Br)cc3)C(=O)N2C)cc1", "smiles_random": "C1(=Nc2ccc(cc2)C(OC)=O)N(C(C(CC(=O)Nc2ccc(Br)cc2)S1)=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCOC(=O)c1ccc(N=C2SC(CC(=O)Nc3ccc(Br)cc3)C(=O)N2C)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC(=O)c1ccc(N=C2SC(CC(=O)Nc3ccc(Br)cc3)C(=O)N2C)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f93ce044-2dc3-4e1c-93a1-6888aeb359c5", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1ccc(S(=O)(=O)N(CC(=O)N2CCN(C)CC2)c2ccc(Br)cc2)cc1", "smiles_random": "CN1CCN(C(=O)CN(c2ccc(cc2)Br)S(=O)(=O)c2ccc(cc2)C)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1ccc(S(=O)(=O)N(CC(=O)N2CCN(C)CC2)c2ccc(Br)cc2)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(S(=O)(=O)N(CC(=O)N2CCN(C)CC2)c2ccc(Br)cc2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "70c3d21e-9a72-4979-934b-eb689b6e570e", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cc1cc(C)n(CC(=O)Nc2ccc(F)cc2)c(=O)c1S(=O)(=O)c1ccc(Br)cc1", "smiles_random": "c1(NC(Cn2c(cc(c(c2=O)S(=O)(=O)c2ccc(Br)cc2)C)C)=O)ccc(cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nCc1cc(C)n(CC(=O)Nc2ccc(F)cc2)c(=O)c1S(=O)(=O)c1ccc(Br)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(C)n(CC(=O)Nc2ccc(F)cc2)c(=O)c1S(=O)(=O)c1ccc(Br)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "470d45bd-3e7f-42fb-980d-f57fe87b1e62", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "O=C1Nc2c(Cl)cc(Cl)cc2C1(O)c1sc(N2CCCCC2)nc1-c1cccs1", "smiles_random": "c1(C2(c3c(c(Cl)cc(c3)Cl)NC2=O)O)sc(nc1-c1cccs1)N1CCCCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C1Nc2c(Cl)cc(Cl)cc2C1(O)c1sc(N2CCCCC2)nc1-c1cccs1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C1Nc2c(Cl)cc(Cl)cc2C1(O)c1sc(N2CCCCC2)nc1-c1cccs1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b87c34b5-0771-41f6-a66b-ef93f0c740a7", "question_category": "smiles_to_iupac", "sub_category": "zinc_canonical", "meta_data": {"smiles": "Cn1c(=O)c2c(nc(Br)n2CC(O)COc2ccc(Cl)cc2Cl)n(C)c1=O", "smiles_random": "n1(c(=O)n(c(c2n(c(nc12)Br)CC(O)COc1ccc(cc1Cl)Cl)=O)C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nCn1c(=O)c2c(nc(Br)n2CC(O)COc2ccc(Cl)cc2Cl)n(C)c1=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cn1c(=O)c2c(nc(Br)n2CC(O)COc2ccc(Cl)cc2Cl)n(C)c1=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "7ed245b4-6907-4762-b749-ebfee8df946f", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=Cc1cc(C(=O)CCl)c[nH]1", "smiles_random": "C(c1c[nH]c(C=O)c1)(=O)CCl"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(c1c[nH]c(C=O)c1)(=O)CCl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=Cc1cc(C(=O)CCl)c[nH]1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "13f40574-41ab-4bd9-bf99-2651632e4bee", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(NC(=O)C1CCCO1)C1CC1", "smiles_random": "C1COC(C(=O)NC(C2CC2)C)C1"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1COC(C(=O)NC(C2CC2)C)C1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(NC(=O)C1CCCO1)C1CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c32f4aba-bebf-451f-8050-f99746d7ab07", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COC(=O)c1ccc(F)c(F)c1", "smiles_random": "C(c1cc(F)c(cc1)F)(=O)OC"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(c1cc(F)c(cc1)F)(=O)OC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC(=O)c1ccc(F)c(F)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b3c69a19-dd74-4279-aeae-3b18d487e7e5", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCNC1(C#N)CCC(C)CC1", "smiles_random": "N#CC1(NCC)CCC(C)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nN#CC1(NCC)CCC(C)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCNC1(C#N)CCC(C)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "7b220292-9ecf-4dd0-a3b8-066cbae0e021", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCC(=O)c1ccc(F)c(F)c1", "smiles_random": "c1(F)c(cc(C(CC)=O)cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(F)c(cc(C(CC)=O)cc1)F\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(=O)c1ccc(F)c(F)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "e05642d2-27c3-4017-b810-5db005036191", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Nc1ncc(F)cc1C#CCO", "smiles_random": "c1c(c(N)ncc1F)C#CCO"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(c(N)ncc1F)C#CCO\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Nc1ncc(F)cc1C#CCO", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "da3ba5b2-b07e-4356-904a-005b9c35afe8", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Nc1cncnc1NCC1CCC1", "smiles_random": "n1cnc(c(N)c1)NCC1CCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nn1cnc(c(N)c1)NCC1CCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Nc1cncnc1NCC1CCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "6629d0de-fcf8-4a49-b735-5bc7912a9be1", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCC(C)CC(C)N1CC(=O)NC1=O", "smiles_random": "C(CC(CC)C)(N1CC(=O)NC1=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(CC(CC)C)(N1CC(=O)NC1=O)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(C)CC(C)N1CC(=O)NC1=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b801d50f-7c5e-46b9-8b68-a7c8844936b7", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "N#Cc1cccc(-c2ccc(N)cn2)n1", "smiles_random": "c1(-c2ncc(cc2)N)cccc(n1)C#N"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(-c2ncc(cc2)N)cccc(n1)C#N\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "N#Cc1cccc(-c2ccc(N)cn2)n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a52ebd57-4a9e-4789-9f7a-449370d82c50", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "ClCC1CCCOC1c1cccnc1", "smiles_random": "O1C(c2cccnc2)C(CCC1)CCl"}, "prompt": "Write the IUPAC name of this molecule:\n\nO1C(c2cccnc2)C(CCC1)CCl\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "ClCC1CCCOC1c1cccnc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "35519b74-9db7-4aa2-9bb6-4fa47bb1da6e", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCCOCCC(=O)Nc1[nH]ncc1N", "smiles_random": "O(CCC(=O)Nc1c(N)cn[nH]1)CCC"}, "prompt": "Write the IUPAC name of this molecule:\n\nO(CCC(=O)Nc1c(N)cn[nH]1)CCC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCOCCC(=O)Nc1[nH]ncc1N", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "eec9a9b1-8f90-4eaf-b8c3-668e1c6ea0bd", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC1(C)C(=O)NCCN1Cc1cc[nH]c1", "smiles_random": "c1cc(c[nH]1)CN1C(C)(C)C(=O)NCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(c[nH]1)CN1C(C)(C)C(=O)NCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1(C)C(=O)NCCN1Cc1cc[nH]c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "eece74f4-09c1-41ed-a59b-2722f801e4ed", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCCCOCc1cnc(NN)s1", "smiles_random": "CCCCOCc1sc(NN)nc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCCCCOCc1sc(NN)nc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCCOCc1cnc(NN)s1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "62814d1d-7194-4ca6-9cb2-aa098d7fa6e2", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C1Cc2cc(C(F)(F)F)ccc2N1", "smiles_random": "C1c2c(ccc(c2)C(F)(F)F)NC1=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1c2c(ccc(c2)C(F)(F)F)NC1=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C1Cc2cc(C(F)(F)F)ccc2N1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "de4f7020-122a-460b-a14f-7be64c860659", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC1CCCC(N2CCOC(C(N)=NO)C2)C1", "smiles_random": "C(C1CN(CCO1)C1CCCC(C1)C)(N)=NO"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(C1CN(CCO1)C1CCCC(C1)C)(N)=NO\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1CCCC(N2CCOC(C(N)=NO)C2)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2381e797-7bb7-4b40-b9d6-ac40deda739a", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(C)C(NCc1ncnn1C)c1cccnc1", "smiles_random": "c1(CNC(c2cccnc2)C(C)C)n(ncn1)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(CNC(c2cccnc2)C(C)C)n(ncn1)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C)C(NCc1ncnn1C)c1cccnc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "29f449c1-4da5-4a34-b885-78c3583636e3", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COCCCNC(=O)c1cccc2cccnc12", "smiles_random": "c1ccc(C(=O)NCCCOC)c2c1cccn2"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1ccc(C(=O)NCCCOC)c2c1cccn2\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COCCCNC(=O)c1cccc2cccnc12", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "77185b6d-f93c-45f2-a1a5-258f8d1fbd7f", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CN1C(=O)NCC1c1ccc(C(C)(C)C)cc1", "smiles_random": "C1C(N(C(=O)N1)C)c1ccc(cc1)C(C)(C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1C(N(C(=O)N1)C)c1ccc(cc1)C(C)(C)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CN1C(=O)NCC1c1ccc(C(C)(C)C)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "e070eac6-ba0f-4bba-b443-6f23252dfeeb", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(Cl)C(=O)N(C)C1(C#N)CCCCC1", "smiles_random": "C1CCCC(C1)(C#N)N(C(C(Cl)C)=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1CCCC(C1)(C#N)N(C(C(Cl)C)=O)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(Cl)C(=O)N(C)C1(C#N)CCCCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "76240f34-c100-4eec-ba5d-d21f7ca05f5e", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccccc1C(=O)NCc1cccc(C#N)c1", "smiles_random": "c1c(CNC(=O)c2ccccc2C)cc(C#N)cc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(CNC(=O)c2ccccc2C)cc(C#N)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccccc1C(=O)NCc1cccc(C#N)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a5f4116b-6007-433d-8aae-9f6810f349ef", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCC(C#N)C1(O)CCCC(C(F)(F)F)C1", "smiles_random": "FC(F)(C1CCCC(C1)(O)C(CC)C#N)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nFC(F)(C1CCCC(C1)(O)C(CC)C#N)F\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(C#N)C1(O)CCCC(C(F)(F)F)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a1b7aeeb-346c-4a2b-a1f4-afca6ae0b2b2", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "N#CC1(C(O)c2ccccc2Cl)CCc2ccccc21", "smiles_random": "c12ccccc1CCC2(C(c1ccccc1Cl)O)C#N"}, "prompt": "Write the IUPAC name of this molecule:\n\nc12ccccc1CCC2(C(c1ccccc1Cl)O)C#N\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "N#CC1(C(O)c2ccccc2Cl)CCc2ccccc21", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "280c4f1a-4a89-48a0-8856-bd738913b19a", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Clc1nccc(N2CCC(N3CCOCC3)C2)n1", "smiles_random": "n1c(ccnc1Cl)N1CC(CC1)N1CCOCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nn1c(ccnc1Cl)N1CC(CC1)N1CCOCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Clc1nccc(N2CCC(N3CCOCC3)C2)n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "be6cd801-3728-48a0-888d-b8dead21f72c", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Oc1ccc(-c2nc3ccccc3s2)cc1Cl", "smiles_random": "s1c2c(cccc2)nc1-c1ccc(O)c(Cl)c1"}, "prompt": "Write the IUPAC name of this molecule:\n\ns1c2c(cccc2)nc1-c1ccc(O)c(Cl)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Oc1ccc(-c2nc3ccccc3s2)cc1Cl", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "aa21dce7-abc0-47e5-ad16-b3322e28676d", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1cccc(SC(C(N)=O)c2ccccc2)c1", "smiles_random": "c1cc(C)cc(SC(c2ccccc2)C(N)=O)c1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(C)cc(SC(c2ccccc2)C(N)=O)c1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cccc(SC(C(N)=O)c2ccccc2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "32e9dceb-f985-4349-ac0b-8ce2e88f152b", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(COc1ccccc1)Nc1ccc2ccccc2c1", "smiles_random": "c1c2ccc(NC(COc3ccccc3)=O)cc2ccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c2ccc(NC(COc3ccccc3)=O)cc2ccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(COc1ccccc1)Nc1ccc2ccccc2c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f62fe64a-b35d-43df-b925-c3a40a6893ab", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(CS(C)(=O)=O)N(C)C(=O)c1cccc(Cl)c1", "smiles_random": "O=S(=O)(C)CC(N(C(c1cc(Cl)ccc1)=O)C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=S(=O)(C)CC(N(C(c1cc(Cl)ccc1)=O)C)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(CS(C)(=O)=O)N(C)C(=O)c1cccc(Cl)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a6f4882b-a8a9-46ef-b31a-074fcb5e7700", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccn(CC(=O)NC(C)c2nc3ccccc3o2)n1", "smiles_random": "n1c2c(cccc2)oc1C(C)NC(Cn1ccc(n1)C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nn1c2c(cccc2)oc1C(C)NC(Cn1ccc(n1)C)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccn(CC(=O)NC(C)c2nc3ccccc3o2)n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "2fc00bb0-2a42-4a30-8c17-80403fe88c4f", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCCNC(=O)Nc1ccc(C(=O)N2CCC(C)CC2)cc1", "smiles_random": "c1c(NC(=O)NCCC)ccc(c1)C(N1CCC(C)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(NC(=O)NCCC)ccc(c1)C(N1CCC(C)CC1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCNC(=O)Nc1ccc(C(=O)N2CCC(C)CC2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "0684fd1c-cf6b-4c9a-a510-ccf7d205c516", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC1(CNC(=O)C2=Cc3cc(F)ccc3OC2)CCCS1", "smiles_random": "C1(C(=O)NCC2(C)SCCC2)COc2c(cc(F)cc2)C=1"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(C(=O)NCC2(C)SCCC2)COc2c(cc(F)cc2)C=1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC1(CNC(=O)C2=Cc3cc(F)ccc3OC2)CCCS1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f9b63099-dd35-4989-b450-0d52a782e7eb", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COc1ccc(S(=O)(=O)NC2CCCCCCC2)cc1", "smiles_random": "c1c(ccc(c1)S(=O)(=O)NC1CCCCCCC1)OC"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(ccc(c1)S(=O)(=O)NC1CCCCCCC1)OC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccc(S(=O)(=O)NC2CCCCCCC2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "667a606c-fd19-4670-8d4a-ef325cb6ec0b", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1cc(NC(=O)C2COc3ccccc3O2)c2ncccc2c1", "smiles_random": "c1c(C)cc(c2ncccc12)NC(=O)C1COc2ccccc2O1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(C)cc(c2ncccc12)NC(=O)C1COc2ccccc2O1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(NC(=O)C2COc3ccccc3O2)c2ncccc2c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "e2b7642d-5081-4058-b25f-e68b00c79219", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(Cc1ccccc1)C(=O)NCc1cn(-c2ccccc2)nn1", "smiles_random": "c1cc(CC(C)C(=O)NCc2cn(-c3ccccc3)nn2)ccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(CC(C)C(=O)NCc2cn(-c3ccccc3)nn2)ccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(Cc1ccccc1)C(=O)NCc1cn(-c2ccccc2)nn1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f089d4f7-15e1-48b0-a82c-af46fa41cc7d", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(NC1CCSc2ccc(F)cc21)C(O)c1ccccc1", "smiles_random": "c1cccc(c1)C(C(=O)NC1CCSc2ccc(F)cc12)O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cccc(c1)C(C(=O)NC1CCSc2ccc(F)cc12)O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(NC1CCSc2ccc(F)cc21)C(O)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "90a620e5-1db6-4adf-8d6a-9e9d7a2d5996", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CN(C)S(=O)(=O)CCNC(=O)C1COc2ccccc2C1", "smiles_random": "O=S(=O)(N(C)C)CCNC(=O)C1Cc2ccccc2OC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=S(=O)(N(C)C)CCNC(=O)C1Cc2ccccc2OC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CN(C)S(=O)(=O)CCNC(=O)C1COc2ccccc2C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c403a290-dde0-4003-a7c3-1dee3d74e719", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(=O)Nc1cccc(NC(=O)NCCc2nc(C(C)C)no2)c1", "smiles_random": "n1c(C(C)C)nc(o1)CCNC(Nc1cc(NC(=O)C)ccc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nn1c(C(C)C)nc(o1)CCNC(Nc1cc(NC(=O)C)ccc1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(=O)Nc1cccc(NC(=O)NCCc2nc(C(C)C)no2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "642152eb-eb7e-4a5d-8067-8d4d4325cace", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(NCC(c1ccccc1)C(C)(C)CO)c1cc(F)ccc1F", "smiles_random": "c1ccccc1C(C(C)(CO)C)CNC(c1cc(F)ccc1F)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1ccccc1C(C(C)(CO)C)CNC(c1cc(F)ccc1F)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(NCC(c1ccccc1)C(C)(C)CO)c1cc(F)ccc1F", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "33864186-f851-4d9a-b2d6-59dd6276e894", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(CCc1ccccc1)NC(=O)C(=O)NCc1ccccc1Cl", "smiles_random": "c1(c(Cl)cccc1)CNC(C(=O)NC(CCc1ccccc1)C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(c(Cl)cccc1)CNC(C(=O)NC(CCc1ccccc1)C)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(CCc1ccccc1)NC(=O)C(=O)NCc1ccccc1Cl", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f579bc65-f7a6-4f0f-bd9b-09fab80aaedb", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COCC(NC(=O)C=Cc1ccc(Br)s1)C(N)=O", "smiles_random": "O=C(NC(COC)C(N)=O)C=Cc1ccc(Br)s1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(NC(COC)C(N)=O)C=Cc1ccc(Br)s1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COCC(NC(=O)C=Cc1ccc(Br)s1)C(N)=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c8834fd1-be35-412d-8711-3fde4e9d3936", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCC(=O)Oc1ccc2c(C)c(Cc3ccccc3)c(=O)oc2c1C", "smiles_random": "O=C(CC)Oc1ccc2c(c1C)oc(c(Cc1ccccc1)c2C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(CC)Oc1ccc2c(c1C)oc(c(Cc1ccccc1)c2C)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(=O)Oc1ccc2c(C)c(Cc3ccccc3)c(=O)oc2c1C", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b7f7336b-8f50-4da6-8b31-a4ca78b89735", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1cc(C)n2nc(SCC(=O)c3ccc4[nH]c(=O)[nH]c4c3)nc2n1", "smiles_random": "c12nc(SCC(=O)c3cc4[nH]c([nH]c4cc3)=O)nn2c(cc(C)n1)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nc12nc(SCC(=O)c3cc4[nH]c([nH]c4cc3)=O)nn2c(cc(C)n1)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(C)n2nc(SCC(=O)c3ccc4[nH]c(=O)[nH]c4c3)nc2n1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "75f74b66-fcbd-4e16-b5f2-7c367983afd1", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(c1cc(Cl)c2ccccc2c1O)N1CCCCC1c1ncc[nH]1", "smiles_random": "C1CC(c2[nH]ccn2)N(C(c2cc(Cl)c3c(cccc3)c2O)=O)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1CC(c2[nH]ccn2)N(C(c2cc(Cl)c3c(cccc3)c2O)=O)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(c1cc(Cl)c2ccccc2c1O)N1CCCCC1c1ncc[nH]1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8d7a56a2-5476-40c9-a9e5-b81d511e60dd", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1cccc(-n2c(C)nnc2SCc2nc(-c3cccs3)no2)c1", "smiles_random": "n1c(-c2cccs2)nc(CSc2n(c(C)nn2)-c2cccc(C)c2)o1"}, "prompt": "Write the IUPAC name of this molecule:\n\nn1c(-c2cccs2)nc(CSc2n(c(C)nn2)-c2cccc(C)c2)o1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cccc(-n2c(C)nnc2SCc2nc(-c3cccs3)no2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "55f0fcf5-aca5-4fb9-9630-5d0101643f0b", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCC(C)C(C(=O)N(C)CC(=O)Nc1c(C)cccc1C)c1ccccc1", "smiles_random": "c1ccc(c(c1C)NC(CN(C(=O)C(c1ccccc1)C(C)CC)C)=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1ccc(c(c1C)NC(CN(C(=O)C(c1ccccc1)C(C)CC)C)=O)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(C)C(C(=O)N(C)CC(=O)Nc1c(C)cccc1C)c1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a176c2fc-92dd-4331-9e27-3c20fec7ebc7", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COc1ccc(C2=C(C=O)C(c3ccccc3)c3ccccc3O2)cc1OC", "smiles_random": "O1C(c2ccc(OC)c(c2)OC)=C(C=O)C(c2ccccc21)c1ccccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nO1C(c2ccc(OC)c(c2)OC)=C(C=O)C(c2ccccc21)c1ccccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccc(C2=C(C=O)C(c3ccccc3)c3ccccc3O2)cc1OC", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a5a261a6-790e-4a46-98dd-45381da1a25b", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCCC1CN(C(=O)c2c(C)cc(=O)n(CC(=O)NC(C)C)c2C)CCO1", "smiles_random": "C1(CN(C(=O)c2c(C)n(CC(=O)NC(C)C)c(=O)cc2C)CCO1)CCC"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(CN(C(=O)c2c(C)n(CC(=O)NC(C)C)c(=O)cc2C)CCO1)CCC\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCC1CN(C(=O)c2c(C)cc(=O)n(CC(=O)NC(C)C)c2C)CCO1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a9a5e74a-94b1-4cc2-9635-3304d66d0496", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCc1cccc(C)c1NC(=O)C(C)S(=O)(=O)Cc1cccc(F)c1", "smiles_random": "c1c(F)cccc1CS(=O)(C(C)C(=O)Nc1c(cccc1C)CC)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(F)cccc1CS(=O)(C(C)C(=O)Nc1c(cccc1C)CC)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCc1cccc(C)c1NC(=O)C(C)S(=O)(=O)Cc1cccc(F)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f03867a8-732e-41ce-947a-51a440e056c6", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COc1ccccc1C(=O)N1CCCC(c2ncccc2S(C)(=O)=O)C1", "smiles_random": "C1CCN(C(=O)c2ccccc2OC)CC1c1ncccc1S(C)(=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1CCN(C(=O)c2ccccc2OC)CC1c1ncccc1S(C)(=O)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccccc1C(=O)N1CCCC(c2ncccc2S(C)(=O)=O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a5e2bd08-e215-4055-b723-0b116fcadaae", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCC1CCCCN1C(=O)NC(c1ccc(OC)cc1)C1CCOCC1", "smiles_random": "c1(OC)ccc(C(C2CCOCC2)NC(N2C(CC)CCCC2)=O)cc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(OC)ccc(C(C2CCOCC2)NC(N2C(CC)CCCC2)=O)cc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC1CCCCN1C(=O)NC(c1ccc(OC)cc1)C1CCOCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "6e88e7c1-343b-444d-802b-c402883ab394", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(c1ccc(NC(=O)N2CCN(Cc3ccccc3)CC2)cc1)N1CCOCC1", "smiles_random": "c1cc(ccc1C(N1CCOCC1)C)NC(N1CCN(Cc2ccccc2)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(ccc1C(N1CCOCC1)C)NC(N1CCN(Cc2ccccc2)CC1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(c1ccc(NC(=O)N2CCN(Cc3ccccc3)CC2)cc1)N1CCOCC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "00eff658-a1cc-45f5-be93-f84a16febd0c", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(NCC(c1cccnc1)N1CCc2ccccc2C1)C(=O)Nc1ccccc1", "smiles_random": "c1cc(NC(=O)C(NCC(c2cccnc2)N2Cc3c(cccc3)CC2)=O)ccc1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cc(NC(=O)C(NCC(c2cccnc2)N2Cc3c(cccc3)CC2)=O)ccc1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(NCC(c1cccnc1)N1CCc2ccccc2C1)C(=O)Nc1ccccc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "5b763756-ca6b-4780-b23e-9a94439440cd", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COc1ccccc1-c1nnc(SCC(=O)Nc2ccc3c(c2)OCCO3)o1", "smiles_random": "c1(OC)ccccc1-c1oc(nn1)SCC(=O)Nc1cc2c(cc1)OCCO2"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(OC)ccccc1-c1oc(nn1)SCC(=O)Nc1cc2c(cc1)OCCO2\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1ccccc1-c1nnc(SCC(=O)Nc2ccc3c(c2)OCCO3)o1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "79a5e8f1-c66c-4067-b1a4-e07573af492b", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccc(-c2nc(C)c(C(=O)NC(c3ccc(F)cc3)C3CCCO3)s2)o1", "smiles_random": "C1(CCCO1)C(c1ccc(cc1)F)NC(c1sc(-c2ccc(C)o2)nc1C)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(CCCO1)C(c1ccc(cc1)F)NC(c1sc(-c2ccc(C)o2)nc1C)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(-c2nc(C)c(C(=O)NC(c3ccc(F)cc3)C3CCCO3)s2)o1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f9f19cbe-df24-4904-b653-a44d274bf475", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCCC(=O)N1CCCCC1c1nc2c(c(=O)[nH]1)CN(C(=O)C1CCCC1)CC2", "smiles_random": "c12c(c([nH]c(C3CCCCN3C(=O)CCC)n1)=O)CN(CC2)C(C1CCCC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc12c(c([nH]c(C3CCCCN3C(=O)CCC)n1)=O)CN(CC2)C(C1CCCC1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCCC(=O)N1CCCCC1c1nc2c(c(=O)[nH]1)CN(C(=O)C1CCCC1)CC2", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "3964d2d4-3de8-46ee-92c2-c4673de00fcd", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCn1c(SCC(=O)NC(=O)NCc2ccccc2)nnc1-c1ccc(Cl)cc1", "smiles_random": "c1(ccc(cc1)Cl)-c1n(CC)c(nn1)SCC(NC(NCc1ccccc1)=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(ccc(cc1)Cl)-c1n(CC)c(nn1)SCC(NC(NCc1ccccc1)=O)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCn1c(SCC(=O)NC(=O)NCc2ccccc2)nnc1-c1ccc(Cl)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "881379b7-3317-4f7b-a235-1c2a98be30bf", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CC(C)Oc1cc2ccccc2cc1C(=O)N1CCn2c(nnc2-c2cccs2)C1", "smiles_random": "CC(C)Oc1cc2ccccc2cc1C(N1Cc2nnc(n2CC1)-c1sccc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nCC(C)Oc1cc2ccccc2cc1C(N1Cc2nnc(n2CC1)-c1sccc1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CC(C)Oc1cc2ccccc2cc1C(=O)N1CCn2c(nnc2-c2cccs2)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "edd306f6-708a-4619-886e-10597fb4c742", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCC(Oc1ccccc1F)C(=O)N(Cc1cccc(Cl)c1)C1CCS(=O)(=O)C1", "smiles_random": "C1C(N(Cc2cc(ccc2)Cl)C(C(CC)Oc2ccccc2F)=O)CS(C1)(=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1C(N(Cc2cc(ccc2)Cl)C(C(CC)Oc2ccccc2F)=O)CS(C1)(=O)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCC(Oc1ccccc1F)C(=O)N(Cc1cccc(Cl)c1)C1CCS(=O)(=O)C1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "9be80276-c5ca-4889-8914-42e03f1e4ce8", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1nnsc1C(=O)N1CCC(CNC(=O)C(C)(C)Oc2ccc(Cl)cc2)CC1", "smiles_random": "c1(Cl)ccc(cc1)OC(C)(C)C(=O)NCC1CCN(C(c2c(nns2)C)=O)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(Cl)ccc(cc1)OC(C)(C)C(=O)NCC1CCN(C(c2c(nns2)C)=O)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1nnsc1C(=O)N1CCC(CNC(=O)C(C)(C)Oc2ccc(Cl)cc2)CC1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "b29d086a-3683-455d-87a5-7fb2c22c9a66", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C(COc1ccc(Br)cc1)Nc1ccc2c(c1)C(=O)N(CC1CCCO1)C2=O", "smiles_random": "C1(OCCC1)CN1C(c2ccc(cc2C1=O)NC(COc1ccc(cc1)Br)=O)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(OCCC1)CN1C(c2ccc(cc2C1=O)NC(COc1ccc(cc1)Br)=O)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C(COc1ccc(Br)cc1)Nc1ccc2c(c1)C(=O)N(CC1CCCO1)C2=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "da8295f8-512c-40c7-a633-f5fb93e37b06", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COc1cc(C=NNC(=O)c2cc(C)n[nH]2)ccc1OC(=O)c1cccc(Br)c1", "smiles_random": "C(c1cc(ccc1)Br)(Oc1ccc(C=NNC(c2[nH]nc(c2)C)=O)cc1OC)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nC(c1cc(ccc1)Br)(Oc1ccc(C=NNC(c2[nH]nc(c2)C)=O)cc1OC)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COc1cc(C=NNC(=O)c2cc(C)n[nH]2)ccc1OC(=O)c1cccc(Br)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "1b941d07-0ffd-4da9-93c0-138a9648aa61", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=S(=O)(c1ccc(Cl)cc1)n1nc(-c2cccnc2)nc1NCc1ccc(F)cc1", "smiles_random": "c1(ccc(CNc2n(nc(n2)-c2cnccc2)S(=O)(c2ccc(Cl)cc2)=O)cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(ccc(CNc2n(nc(n2)-c2cnccc2)S(=O)(c2ccc(Cl)cc2)=O)cc1)F\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=S(=O)(c1ccc(Cl)cc1)n1nc(-c2cccnc2)nc1NCc1ccc(F)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "0d5481aa-9fff-442c-88ce-135352d03280", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "NS(=O)(=O)c1ccc(Br)c(C(=O)Nc2cccc(NC(=O)c3ccco3)c2)c1", "smiles_random": "O=C(c1cc(ccc1Br)S(=O)(=O)N)Nc1cccc(c1)NC(c1occc1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nO=C(c1cc(ccc1Br)S(=O)(=O)N)Nc1cccc(c1)NC(c1occc1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "NS(=O)(=O)c1ccc(Br)c(C(=O)Nc2cccc(NC(=O)c3ccco3)c2)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d06498e9-c6fe-4b8d-8fe8-bfda001790f3", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1noc2nc(C3CC3)cc(C(=O)N3CCN(S(=O)(=O)c4cccs4)CC3)c12", "smiles_random": "c12c(cc(nc1onc2C)C1CC1)C(N1CCN(S(=O)(=O)c2sccc2)CC1)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc12c(cc(nc1onc2C)C1CC1)C(N1CCN(S(=O)(=O)c2sccc2)CC1)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1noc2nc(C3CC3)cc(C(=O)N3CCN(S(=O)(=O)c4cccs4)CC3)c12", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "d7ab036b-ef19-4ab3-8afd-4e23f6e6b0e5", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "CCOc1cc(C=Nc2c(C)n(C)n(-c3ccccc3)c2=O)cc(I)c1OC", "smiles_random": "c1cccc(c1)-n1c(c(c(n1C)C)N=Cc1cc(OCC)c(OC)c(c1)I)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1cccc(c1)-n1c(c(c(n1C)C)N=Cc1cc(OCC)c(OC)c(c1)I)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "CCOc1cc(C=Nc2c(C)n(C)n(-c3ccccc3)c2=O)cc(I)c1OC", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "a8142455-f0d4-492e-8c1b-f624dc650ff0", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccc(C(=O)CSc2nnc3c(=O)n(-c4ccc(Br)cc4)ccn23)c(C)c1", "smiles_random": "c1c(ccc(Br)c1)-n1c(c2n(cc1)c(SCC(=O)c1ccc(cc1C)C)nn2)=O"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1c(ccc(Br)c1)-n1c(c2n(cc1)c(SCC(=O)c1ccc(cc1C)C)nn2)=O\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(C(=O)CSc2nnc3c(=O)n(-c4ccc(Br)cc4)ccn23)c(C)c1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "8ad6858b-1011-42ab-89a9-010f32670fde", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "COC(=O)c1ccc(N=C2SC(CC(=O)Nc3ccc(Br)cc3)C(=O)N2C)cc1", "smiles_random": "C1(=Nc2ccc(cc2)C(OC)=O)N(C(C(CC(=O)Nc2ccc(Br)cc2)S1)=O)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nC1(=Nc2ccc(cc2)C(OC)=O)N(C(C(CC(=O)Nc2ccc(Br)cc2)S1)=O)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "COC(=O)c1ccc(N=C2SC(CC(=O)Nc3ccc(Br)cc3)C(=O)N2C)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "9840f579-8f80-4f2b-aec8-d281f720c7f1", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1ccc(S(=O)(=O)N(CC(=O)N2CCN(C)CC2)c2ccc(Br)cc2)cc1", "smiles_random": "CN1CCN(C(=O)CN(c2ccc(cc2)Br)S(=O)(=O)c2ccc(cc2)C)CC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nCN1CCN(C(=O)CN(c2ccc(cc2)Br)S(=O)(=O)c2ccc(cc2)C)CC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1ccc(S(=O)(=O)N(CC(=O)N2CCN(C)CC2)c2ccc(Br)cc2)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "3df3eb16-66ee-4cfe-b87e-8913832d6f07", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cc1cc(C)n(CC(=O)Nc2ccc(F)cc2)c(=O)c1S(=O)(=O)c1ccc(Br)cc1", "smiles_random": "c1(NC(Cn2c(cc(c(c2=O)S(=O)(=O)c2ccc(Br)cc2)C)C)=O)ccc(cc1)F"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(NC(Cn2c(cc(c(c2=O)S(=O)(=O)c2ccc(Br)cc2)C)C)=O)ccc(cc1)F\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cc1cc(C)n(CC(=O)Nc2ccc(F)cc2)c(=O)c1S(=O)(=O)c1ccc(Br)cc1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "f3359621-ab7e-473b-9db4-5a3c1ec8abfa", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "O=C1Nc2c(Cl)cc(Cl)cc2C1(O)c1sc(N2CCCCC2)nc1-c1cccs1", "smiles_random": "c1(C2(c3c(c(Cl)cc(c3)Cl)NC2=O)O)sc(nc1-c1cccs1)N1CCCCC1"}, "prompt": "Write the IUPAC name of this molecule:\n\nc1(C2(c3c(c(Cl)cc(c3)Cl)NC2=O)O)sc(nc1-c1cccs1)N1CCCCC1\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "O=C1Nc2c(Cl)cc(Cl)cc2C1(O)c1sc(N2CCCCC2)nc1-c1cccs1", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "cb2c25e9-7fcf-4899-a692-1abc7ff6725d", "question_category": "smiles_to_iupac", "sub_category": "zinc_random", "meta_data": {"smiles": "Cn1c(=O)c2c(nc(Br)n2CC(O)COc2ccc(Cl)cc2Cl)n(C)c1=O", "smiles_random": "n1(c(=O)n(c(c2n(c(nc12)Br)CC(O)COc1ccc(cc1Cl)Cl)=O)C)C"}, "prompt": "Write the IUPAC name of this molecule:\n\nn1(c(=O)n(c(c2n(c(nc12)Br)CC(O)COc1ccc(cc1Cl)Cl)=O)C)C\n\nWrite the IUPAC name only. Do not write any comments.", "answer": "Cn1c(=O)c2c(nc(Br)n2CC(O)COc2ccc(Cl)cc2Cl)n(C)c1=O", "answer_format": "iupac", "answer_range": null, "verification_method": "opsin", "ChemIQ": true}
{"uuid": "c8bbe2e7-1c23-4d28-99af-c5d3002fa378", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 0, "noise_variance": 0, "answer": 441, "answer_confidence_interval": "(441, 441)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 0, 0, 1, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1]]), 'b': array([500., 602., 442., 499., 468., 479., 629.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)ccc(Br)c1cc(Br)o2", "score": 500, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 174, "2": 127, "3": 199}}, {"smiles": "c12c(Cl)ccc(Cl)c1cc(F)o2", "score": 602, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 180, "2": 250, "3": 172}}, {"smiles": "c12c(Br)ccc(Br)c1cc(Cl)o2", "score": 442, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 174, "2": 127, "3": 141}}, {"smiles": "c12c(Br)ccc(F)c1cc(F)o2", "score": 499, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 174, "2": 153, "3": 172}}, {"smiles": "c12c(F)ccc(F)c1cc(Br)o2", "score": 468, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 116, "2": 153, "3": 199}}, {"smiles": "c12c(Cl)ccc(Br)c1cc(F)o2", "score": 479, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 180, "2": 127, "3": 172}}, {"smiles": "c12c(Cl)ccc(Cl)c1cc(Br)o2", "score": 629, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 180, "2": 250, "3": 199}}], "unknown_molecule_details": {"smiles": "c12c(F)ccc(F)c1cc(F)o2", "score": 441, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 116, "2": 153, "3": 172}}, "rgroup_scores": "{1: {'*F': 116, '*Cl': 180, '*Br': 174}, 2: {'*F': 153, '*Cl': 250, '*Br': 127}, 3: {'*F': 172, '*Cl': 141, '*Br': 199}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1cc(Br)o2\t500\n1\tc12c(Cl)ccc(Cl)c1cc(F)o2\t602\n2\tc12c(Br)ccc(Br)c1cc(Cl)o2\t442\n3\tc12c(Br)ccc(F)c1cc(F)o2\t499\n4\tc12c(F)ccc(F)c1cc(Br)o2\t468\n5\tc12c(Cl)ccc(Br)c1cc(F)o2\t479\n6\tc12c(Cl)ccc(Cl)c1cc(Br)o2\t629\n\nUnknown molecule: c12c(F)ccc(F)c1cc(F)o2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1cc(Br)o2\t500\n1\tc12c(Cl)ccc(Cl)c1cc(F)o2\t602\n2\tc12c(Br)ccc(Br)c1cc(Cl)o2\t442\n3\tc12c(Br)ccc(F)c1cc(F)o2\t499\n4\tc12c(F)ccc(F)c1cc(Br)o2\t468\n5\tc12c(Cl)ccc(Br)c1cc(F)o2\t479\n6\tc12c(Cl)ccc(Cl)c1cc(Br)o2\t629\n\nUnknown molecule: c12c(F)ccc(F)c1cc(F)o2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 441, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "93078d92-6304-4ebf-86d5-67e353115187", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 1, "noise_variance": 0, "answer": 427, "answer_confidence_interval": "(427, 427)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 0, 1]]), 'b': array([462., 427., 506., 540., 383., 353., 444.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)c(F)ccc1c(Br)co2", "score": 462, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 115, "2": 244, "3": 103}}, {"smiles": "c12c(Cl)c(F)ccc1c(Br)co2", "score": 427, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 80, "2": 244, "3": 103}}, {"smiles": "c12c(F)c(F)ccc1c(Cl)co2", "score": 506, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 115, "2": 244, "3": 147}}, {"smiles": "c12c(Cl)c(F)ccc1c(F)co2", "score": 540, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 80, "2": 244, "3": 216}}, {"smiles": "c12c(F)c(Cl)ccc1c(Br)co2", "score": 383, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 115, "2": 165, "3": 103}}, {"smiles": "c12c(Cl)c(Br)ccc1c(Br)co2", "score": 353, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 80, "2": 170, "3": 103}}, {"smiles": "c12c(Br)c(Cl)ccc1c(Br)co2", "score": 444, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 176, "2": 165, "3": 103}}], "unknown_molecule_details": {"smiles": "c12c(F)c(Cl)ccc1c(Cl)co2", "score": 427, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 115, "2": 165, "3": 147}}, "rgroup_scores": "{1: {'*F': 115, '*Cl': 80, '*Br': 176}, 2: {'*F': 244, '*Cl': 165, '*Br': 170}, 3: {'*F': 216, '*Cl': 147, '*Br': 103}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t462\n1\tc12c(Cl)c(F)ccc1c(Br)co2\t427\n2\tc12c(F)c(F)ccc1c(Cl)co2\t506\n3\tc12c(Cl)c(F)ccc1c(F)co2\t540\n4\tc12c(F)c(Cl)ccc1c(Br)co2\t383\n5\tc12c(Cl)c(Br)ccc1c(Br)co2\t353\n6\tc12c(Br)c(Cl)ccc1c(Br)co2\t444\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Cl)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t462\n1\tc12c(Cl)c(F)ccc1c(Br)co2\t427\n2\tc12c(F)c(F)ccc1c(Cl)co2\t506\n3\tc12c(Cl)c(F)ccc1c(F)co2\t540\n4\tc12c(F)c(Cl)ccc1c(Br)co2\t383\n5\tc12c(Cl)c(Br)ccc1c(Br)co2\t353\n6\tc12c(Br)c(Cl)ccc1c(Br)co2\t444\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Cl)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 427, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "1c4b9595-7450-4fac-9bba-c46e2883da5a", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 2, "noise_variance": 0, "answer": 475, "answer_confidence_interval": "(475, 475)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([568., 557., 519., 418., 557., 374., 412.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)cccc1c(F)c(Br)o2", "score": 568, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 142, "2": 221, "3": 205}}, {"smiles": "c12c(Br)cccc1c(Br)c(F)o2", "score": 557, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 238, "2": 114, "3": 205}}, {"smiles": "c12c(Cl)cccc1c(F)c(F)o2", "score": 519, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 93, "2": 221, "3": 205}}, {"smiles": "c12c(Cl)cccc1c(F)c(Cl)o2", "score": 418, "attachments": {"1": "*Cl", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 93, "2": 221, "3": 104}}, {"smiles": "c12c(Br)cccc1c(Br)c(Br)o2", "score": 557, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 238, "2": 114, "3": 205}}, {"smiles": "c12c(F)cccc1c(Cl)c(Cl)o2", "score": 374, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 142, "2": 128, "3": 104}}, {"smiles": "c12c(Cl)cccc1c(Br)c(F)o2", "score": 412, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 93, "2": 114, "3": 205}}], "unknown_molecule_details": {"smiles": "c12c(F)cccc1c(Cl)c(F)o2", "score": 475, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 142, "2": 128, "3": 205}}, "rgroup_scores": "{1: {'*F': 142, '*Cl': 93, '*Br': 238}, 2: {'*F': 221, '*Cl': 128, '*Br': 114}, 3: {'*F': 205, '*Cl': 104, '*Br': 205}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)cccc1c(F)c(Br)o2\t568\n1\tc12c(Br)cccc1c(Br)c(F)o2\t557\n2\tc12c(Cl)cccc1c(F)c(F)o2\t519\n3\tc12c(Cl)cccc1c(F)c(Cl)o2\t418\n4\tc12c(Br)cccc1c(Br)c(Br)o2\t557\n5\tc12c(F)cccc1c(Cl)c(Cl)o2\t374\n6\tc12c(Cl)cccc1c(Br)c(F)o2\t412\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(F)o2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)cccc1c(F)c(Br)o2\t568\n1\tc12c(Br)cccc1c(Br)c(F)o2\t557\n2\tc12c(Cl)cccc1c(F)c(F)o2\t519\n3\tc12c(Cl)cccc1c(F)c(Cl)o2\t418\n4\tc12c(Br)cccc1c(Br)c(Br)o2\t557\n5\tc12c(F)cccc1c(Cl)c(Cl)o2\t374\n6\tc12c(Cl)cccc1c(Br)c(F)o2\t412\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(F)o2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 475, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "daacd37f-1bb2-415b-88f5-7f281c9a31a0", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 3, "noise_variance": 0, "answer": 512, "answer_confidence_interval": "(512, 512)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1]]), 'b': array([619., 323., 547., 584., 586., 434., 572.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(Cl)ccc1c(F)c(F)o2", "score": 619, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 204, "2": 210, "3": 205}}, {"smiles": "c12cc(Cl)ccc1c(Br)c(Cl)o2", "score": 323, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 204, "2": 66, "3": 53}}, {"smiles": "c12cc(F)ccc1c(Cl)c(F)o2", "score": 547, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 144, "2": 198, "3": 205}}, {"smiles": "c12cc(Cl)ccc1c(F)c(Br)o2", "score": 584, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 204, "2": 210, "3": 170}}, {"smiles": "c12cc(Br)ccc1c(F)c(F)o2", "score": 586, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 171, "2": 210, "3": 205}}, {"smiles": "c12cc(Br)ccc1c(F)c(Cl)o2", "score": 434, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 171, "2": 210, "3": 53}}, {"smiles": "c12cc(Cl)ccc1c(Cl)c(Br)o2", "score": 572, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 204, "2": 198, "3": 170}}], "unknown_molecule_details": {"smiles": "c12cc(F)ccc1c(Cl)c(Br)o2", "score": 512, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 144, "2": 198, "3": 170}}, "rgroup_scores": "{1: {'*F': 144, '*Cl': 204, '*Br': 171}, 2: {'*F': 210, '*Cl': 198, '*Br': 66}, 3: {'*F': 205, '*Cl': 53, '*Br': 170}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)ccc1c(F)c(F)o2\t619\n1\tc12cc(Cl)ccc1c(Br)c(Cl)o2\t323\n2\tc12cc(F)ccc1c(Cl)c(F)o2\t547\n3\tc12cc(Cl)ccc1c(F)c(Br)o2\t584\n4\tc12cc(Br)ccc1c(F)c(F)o2\t586\n5\tc12cc(Br)ccc1c(F)c(Cl)o2\t434\n6\tc12cc(Cl)ccc1c(Cl)c(Br)o2\t572\n\nUnknown molecule: c12cc(F)ccc1c(Cl)c(Br)o2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)ccc1c(F)c(F)o2\t619\n1\tc12cc(Cl)ccc1c(Br)c(Cl)o2\t323\n2\tc12cc(F)ccc1c(Cl)c(F)o2\t547\n3\tc12cc(Cl)ccc1c(F)c(Br)o2\t584\n4\tc12cc(Br)ccc1c(F)c(F)o2\t586\n5\tc12cc(Br)ccc1c(F)c(Cl)o2\t434\n6\tc12cc(Cl)ccc1c(Cl)c(Br)o2\t572\n\nUnknown molecule: c12cc(F)ccc1c(Cl)c(Br)o2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 512, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "480d38e8-14b3-4b9e-ab5a-b69f03d4f66e", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 4, "noise_variance": 0, "answer": 429, "answer_confidence_interval": "(429, 429)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0]]), 'b': array([435., 397., 376., 356., 451., 273., 279.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)c(Cl)c(Br)cc1cco2", "score": 435, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 172, "2": 73, "3": 190}}, {"smiles": "c12c(Br)c(Cl)c(Cl)cc1cco2", "score": 397, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 172, "2": 73, "3": 152}}, {"smiles": "c12c(Cl)c(Cl)c(Cl)cc1cco2", "score": 376, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 151, "2": 73, "3": 152}}, {"smiles": "c12c(F)c(Br)c(F)cc1cco2", "score": 356, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 234, "2": 67, "3": 55}}, {"smiles": "c12c(Br)c(F)c(Br)cc1cco2", "score": 451, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 172, "2": 89, "3": 190}}, {"smiles": "c12c(Cl)c(Br)c(F)cc1cco2", "score": 273, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 151, "2": 67, "3": 55}}, {"smiles": "c12c(Cl)c(Cl)c(F)cc1cco2", "score": 279, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 151, "2": 73, "3": 55}}], "unknown_molecule_details": {"smiles": "c12c(Br)c(Br)c(Br)cc1cco2", "score": 429, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 172, "2": 67, "3": 190}}, "rgroup_scores": "{1: {'*F': 234, '*Cl': 151, '*Br': 172}, 2: {'*F': 89, '*Cl': 73, '*Br': 67}, 3: {'*F': 55, '*Cl': 152, '*Br': 190}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(Cl)c(Br)cc1cco2\t435\n1\tc12c(Br)c(Cl)c(Cl)cc1cco2\t397\n2\tc12c(Cl)c(Cl)c(Cl)cc1cco2\t376\n3\tc12c(F)c(Br)c(F)cc1cco2\t356\n4\tc12c(Br)c(F)c(Br)cc1cco2\t451\n5\tc12c(Cl)c(Br)c(F)cc1cco2\t273\n6\tc12c(Cl)c(Cl)c(F)cc1cco2\t279\n\nUnknown molecule: c12c(Br)c(Br)c(Br)cc1cco2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(Cl)c(Br)cc1cco2\t435\n1\tc12c(Br)c(Cl)c(Cl)cc1cco2\t397\n2\tc12c(Cl)c(Cl)c(Cl)cc1cco2\t376\n3\tc12c(F)c(Br)c(F)cc1cco2\t356\n4\tc12c(Br)c(F)c(Br)cc1cco2\t451\n5\tc12c(Cl)c(Br)c(F)cc1cco2\t273\n6\tc12c(Cl)c(Cl)c(F)cc1cco2\t279\n\nUnknown molecule: c12c(Br)c(Br)c(Br)cc1cco2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 429, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "ec855a37-ab48-4a92-9492-422a448f8946", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 5, "noise_variance": 0, "answer": 498, "answer_confidence_interval": "(498, 498)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0]]), 'b': array([611., 649., 409., 521., 489., 672., 514.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(F)cc1c(Br)c(Br)o2", "score": 611, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 226, "2": 169, "3": 216}}, {"smiles": "c12ccc(Br)cc1c(F)c(F)o2", "score": 649, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 216, "2": 185, "3": 248}}, {"smiles": "c12ccc(Cl)cc1c(Cl)c(Cl)o2", "score": 409, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 239, "2": 57, "3": 113}}, {"smiles": "c12ccc(Cl)cc1c(Br)c(Cl)o2", "score": 521, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 239, "2": 169, "3": 113}}, {"smiles": "c12ccc(Br)cc1c(Cl)c(Br)o2", "score": 489, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 57, "3": 216}}, {"smiles": "c12ccc(Cl)cc1c(F)c(F)o2", "score": 672, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 239, "2": 185, "3": 248}}, {"smiles": "c12ccc(Br)cc1c(F)c(Cl)o2", "score": 514, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 185, "3": 113}}], "unknown_molecule_details": {"smiles": "c12ccc(Br)cc1c(Br)c(Cl)o2", "score": 498, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 169, "3": 113}}, "rgroup_scores": "{1: {'*F': 226, '*Cl': 239, '*Br': 216}, 2: {'*F': 185, '*Cl': 57, '*Br': 169}, 3: {'*F': 248, '*Cl': 113, '*Br': 216}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)cc1c(Br)c(Br)o2\t611\n1\tc12ccc(Br)cc1c(F)c(F)o2\t649\n2\tc12ccc(Cl)cc1c(Cl)c(Cl)o2\t409\n3\tc12ccc(Cl)cc1c(Br)c(Cl)o2\t521\n4\tc12ccc(Br)cc1c(Cl)c(Br)o2\t489\n5\tc12ccc(Cl)cc1c(F)c(F)o2\t672\n6\tc12ccc(Br)cc1c(F)c(Cl)o2\t514\n\nUnknown molecule: c12ccc(Br)cc1c(Br)c(Cl)o2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)cc1c(Br)c(Br)o2\t611\n1\tc12ccc(Br)cc1c(F)c(F)o2\t649\n2\tc12ccc(Cl)cc1c(Cl)c(Cl)o2\t409\n3\tc12ccc(Cl)cc1c(Br)c(Cl)o2\t521\n4\tc12ccc(Br)cc1c(Cl)c(Br)o2\t489\n5\tc12ccc(Cl)cc1c(F)c(F)o2\t672\n6\tc12ccc(Br)cc1c(F)c(Cl)o2\t514\n\nUnknown molecule: c12ccc(Br)cc1c(Br)c(Cl)o2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 498, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "f2bab032-3529-42d6-b845-0f9962e61b47", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 6, "noise_variance": 0, "answer": 576, "answer_confidence_interval": "(576, 576)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 0, 1],\n       [1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 1, 0, 0]]), 'b': array([478., 279., 505., 634., 522., 539., 346.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)ccc(Br)c1c(F)co2", "score": 478, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 59, "2": 219, "3": 200}}, {"smiles": "c12c(Br)ccc(F)c1c(Cl)co2", "score": 279, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 59, "2": 50, "3": 170}}, {"smiles": "c12c(Cl)ccc(Br)c1c(Cl)co2", "score": 505, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 116, "2": 219, "3": 170}}, {"smiles": "c12c(F)ccc(Br)c1c(Cl)co2", "score": 634, "attachments": {"1": "*F", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 245, "2": 219, "3": 170}}, {"smiles": "c12c(Br)ccc(Br)c1c(Br)co2", "score": 522, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 59, "2": 219, "3": 244}}, {"smiles": "c12c(F)ccc(F)c1c(Br)co2", "score": 539, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 245, "2": 50, "3": 244}}, {"smiles": "c12c(Br)ccc(Cl)c1c(F)co2", "score": 346, "attachments": {"1": "*Br", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 59, "2": 87, "3": 200}}], "unknown_molecule_details": {"smiles": "c12c(F)ccc(Cl)c1c(Br)co2", "score": 576, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 245, "2": 87, "3": 244}}, "rgroup_scores": "{1: {'*F': 245, '*Cl': 116, '*Br': 59}, 2: {'*F': 50, '*Cl': 87, '*Br': 219}, 3: {'*F': 200, '*Cl': 170, '*Br': 244}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1c(F)co2\t478\n1\tc12c(Br)ccc(F)c1c(Cl)co2\t279\n2\tc12c(Cl)ccc(Br)c1c(Cl)co2\t505\n3\tc12c(F)ccc(Br)c1c(Cl)co2\t634\n4\tc12c(Br)ccc(Br)c1c(Br)co2\t522\n5\tc12c(F)ccc(F)c1c(Br)co2\t539\n6\tc12c(Br)ccc(Cl)c1c(F)co2\t346\n\nUnknown molecule: c12c(F)ccc(Cl)c1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1c(F)co2\t478\n1\tc12c(Br)ccc(F)c1c(Cl)co2\t279\n2\tc12c(Cl)ccc(Br)c1c(Cl)co2\t505\n3\tc12c(F)ccc(Br)c1c(Cl)co2\t634\n4\tc12c(Br)ccc(Br)c1c(Br)co2\t522\n5\tc12c(F)ccc(F)c1c(Br)co2\t539\n6\tc12c(Br)ccc(Cl)c1c(F)co2\t346\n\nUnknown molecule: c12c(F)ccc(Cl)c1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 576, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "c7e84d2a-b33a-4777-9c7b-e06f572bd083", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 7, "noise_variance": 0, "answer": 469, "answer_confidence_interval": "(469, 469)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1],\n       [1, 0, 0, 0, 0, 1, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 0, 0, 1]]), 'b': array([319., 315., 538., 354., 434., 335., 390.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(Br)c(F)c(Cl)c1cco2", "score": 319, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 68, "2": 187, "3": 64}}, {"smiles": "c12cc(Cl)c(Cl)c(Br)c1cco2", "score": 315, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 62, "2": 74, "3": 179}}, {"smiles": "c12cc(F)c(Br)c(Br)c1cco2", "score": 538, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 143, "3": 179}}, {"smiles": "c12cc(F)c(Cl)c(Cl)c1cco2", "score": 354, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 74, "3": 64}}, {"smiles": "c12cc(Br)c(F)c(Br)c1cco2", "score": 434, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 68, "2": 187, "3": 179}}, {"smiles": "c12cc(Cl)c(Cl)c(F)c1cco2", "score": 335, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 62, "2": 74, "3": 199}}, {"smiles": "c12cc(Br)c(Br)c(Br)c1cco2", "score": 390, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 68, "2": 143, "3": 179}}], "unknown_molecule_details": {"smiles": "c12cc(F)c(Cl)c(Br)c1cco2", "score": 469, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 74, "3": 179}}, "rgroup_scores": "{1: {'*F': 216, '*Cl': 62, '*Br': 68}, 2: {'*F': 187, '*Cl': 74, '*Br': 143}, 3: {'*F': 199, '*Cl': 64, '*Br': 179}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Br)c(F)c(Cl)c1cco2\t319\n1\tc12cc(Cl)c(Cl)c(Br)c1cco2\t315\n2\tc12cc(F)c(Br)c(Br)c1cco2\t538\n3\tc12cc(F)c(Cl)c(Cl)c1cco2\t354\n4\tc12cc(Br)c(F)c(Br)c1cco2\t434\n5\tc12cc(Cl)c(Cl)c(F)c1cco2\t335\n6\tc12cc(Br)c(Br)c(Br)c1cco2\t390\n\nUnknown molecule: c12cc(F)c(Cl)c(Br)c1cco2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Br)c(F)c(Cl)c1cco2\t319\n1\tc12cc(Cl)c(Cl)c(Br)c1cco2\t315\n2\tc12cc(F)c(Br)c(Br)c1cco2\t538\n3\tc12cc(F)c(Cl)c(Cl)c1cco2\t354\n4\tc12cc(Br)c(F)c(Br)c1cco2\t434\n5\tc12cc(Cl)c(Cl)c(F)c1cco2\t335\n6\tc12cc(Br)c(Br)c(Br)c1cco2\t390\n\nUnknown molecule: c12cc(F)c(Cl)c(Br)c1cco2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 469, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "5695849a-cd02-47d8-ae1e-51355e9776e8", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 8, "noise_variance": 0, "answer": 322, "answer_confidence_interval": "(322, 322)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1]]), 'b': array([273., 339., 470., 263., 256., 349., 287.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(Cl)c(F)c(F)c1cco2", "score": 273, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 99, "2": 61, "3": 113}}, {"smiles": "c12cc(Cl)c(F)c(Cl)c1cco2", "score": 339, "attachments": {"1": "*Cl", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 99, "2": 61, "3": 179}}, {"smiles": "c12cc(Br)c(F)c(Cl)c1cco2", "score": 470, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 230, "2": 61, "3": 179}}, {"smiles": "c12cc(Cl)c(F)c(Br)c1cco2", "score": 263, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 99, "2": 61, "3": 103}}, {"smiles": "c12cc(F)c(Cl)c(Br)c1cco2", "score": 256, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 82, "2": 71, "3": 103}}, {"smiles": "c12cc(Cl)c(Cl)c(Cl)c1cco2", "score": 349, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 99, "2": 71, "3": 179}}, {"smiles": "c12cc(Cl)c(Br)c(Br)c1cco2", "score": 287, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 99, "2": 85, "3": 103}}], "unknown_molecule_details": {"smiles": "c12cc(F)c(F)c(Cl)c1cco2", "score": 322, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 82, "2": 61, "3": 179}}, "rgroup_scores": "{1: {'*F': 82, '*Cl': 99, '*Br': 230}, 2: {'*F': 61, '*Cl': 71, '*Br': 85}, 3: {'*F': 113, '*Cl': 179, '*Br': 103}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)c(F)c(F)c1cco2\t273\n1\tc12cc(Cl)c(F)c(Cl)c1cco2\t339\n2\tc12cc(Br)c(F)c(Cl)c1cco2\t470\n3\tc12cc(Cl)c(F)c(Br)c1cco2\t263\n4\tc12cc(F)c(Cl)c(Br)c1cco2\t256\n5\tc12cc(Cl)c(Cl)c(Cl)c1cco2\t349\n6\tc12cc(Cl)c(Br)c(Br)c1cco2\t287\n\nUnknown molecule: c12cc(F)c(F)c(Cl)c1cco2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)c(F)c(F)c1cco2\t273\n1\tc12cc(Cl)c(F)c(Cl)c1cco2\t339\n2\tc12cc(Br)c(F)c(Cl)c1cco2\t470\n3\tc12cc(Cl)c(F)c(Br)c1cco2\t263\n4\tc12cc(F)c(Cl)c(Br)c1cco2\t256\n5\tc12cc(Cl)c(Cl)c(Cl)c1cco2\t349\n6\tc12cc(Cl)c(Br)c(Br)c1cco2\t287\n\nUnknown molecule: c12cc(F)c(F)c(Cl)c1cco2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 322, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "064fab44-e9f1-4760-b8ad-399042e4b112", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 9, "noise_variance": 0, "answer": 401, "answer_confidence_interval": "(401, 401)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [1, 0, 0, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([498., 337., 512., 411., 399., 422., 432.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(Br)c(F)c1c(F)co2", "score": 498, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 97, "2": 223, "3": 178}}, {"smiles": "c12ccc(F)c(Cl)c1c(Cl)co2", "score": 337, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 118, "2": 51, "3": 168}}, {"smiles": "c12ccc(Cl)c(F)c1c(Br)co2", "score": 512, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 85, "2": 223, "3": 204}}, {"smiles": "c12ccc(Br)c(Br)c1c(F)co2", "score": 411, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 97, "2": 136, "3": 178}}, {"smiles": "c12ccc(Cl)c(Br)c1c(F)co2", "score": 399, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 85, "2": 136, "3": 178}}, {"smiles": "c12ccc(F)c(Br)c1c(Cl)co2", "score": 422, "attachments": {"1": "*F", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 118, "2": 136, "3": 168}}, {"smiles": "c12ccc(F)c(Br)c1c(F)co2", "score": 432, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 118, "2": 136, "3": 178}}], "unknown_molecule_details": {"smiles": "c12ccc(Br)c(Br)c1c(Cl)co2", "score": 401, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 97, "2": 136, "3": 168}}, "rgroup_scores": "{1: {'*F': 118, '*Cl': 85, '*Br': 97}, 2: {'*F': 223, '*Cl': 51, '*Br': 136}, 3: {'*F': 178, '*Cl': 168, '*Br': 204}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Br)c(F)c1c(F)co2\t498\n1\tc12ccc(F)c(Cl)c1c(Cl)co2\t337\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t512\n3\tc12ccc(Br)c(Br)c1c(F)co2\t411\n4\tc12ccc(Cl)c(Br)c1c(F)co2\t399\n5\tc12ccc(F)c(Br)c1c(Cl)co2\t422\n6\tc12ccc(F)c(Br)c1c(F)co2\t432\n\nUnknown molecule: c12ccc(Br)c(Br)c1c(Cl)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Br)c(F)c1c(F)co2\t498\n1\tc12ccc(F)c(Cl)c1c(Cl)co2\t337\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t512\n3\tc12ccc(Br)c(Br)c1c(F)co2\t411\n4\tc12ccc(Cl)c(Br)c1c(F)co2\t399\n5\tc12ccc(F)c(Br)c1c(Cl)co2\t422\n6\tc12ccc(F)c(Br)c1c(F)co2\t432\n\nUnknown molecule: c12ccc(Br)c(Br)c1c(Cl)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 401, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "fd4ee3e8-076b-4524-a60a-22e0def62194", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 10, "noise_variance": 0, "answer": 396, "answer_confidence_interval": "(396, 396)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1]]), 'b': array([439., 420., 349., 456., 462., 372., 432.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)ccc(Br)c1c(Br)co2", "score": 439, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 173, "2": 175, "3": 91}}, {"smiles": "c12c(Cl)ccc(F)c1c(F)co2", "score": 420, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 197, "2": 102, "3": 121}}, {"smiles": "c12c(Br)ccc(Br)c1c(F)co2", "score": 349, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 53, "2": 175, "3": 121}}, {"smiles": "c12c(Cl)ccc(Cl)c1c(Br)co2", "score": 456, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 197, "2": 168, "3": 91}}, {"smiles": "c12c(F)ccc(Cl)c1c(F)co2", "score": 462, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 173, "2": 168, "3": 121}}, {"smiles": "c12c(Br)ccc(F)c1c(Cl)co2", "score": 372, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 53, "2": 102, "3": 217}}, {"smiles": "c12c(F)ccc(Cl)c1c(Br)co2", "score": 432, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 173, "2": 168, "3": 91}}], "unknown_molecule_details": {"smiles": "c12c(F)ccc(F)c1c(F)co2", "score": 396, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 173, "2": 102, "3": 121}}, "rgroup_scores": "{1: {'*F': 173, '*Cl': 197, '*Br': 53}, 2: {'*F': 102, '*Cl': 168, '*Br': 175}, 3: {'*F': 121, '*Cl': 217, '*Br': 91}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)ccc(Br)c1c(Br)co2\t439\n1\tc12c(Cl)ccc(F)c1c(F)co2\t420\n2\tc12c(Br)ccc(Br)c1c(F)co2\t349\n3\tc12c(Cl)ccc(Cl)c1c(Br)co2\t456\n4\tc12c(F)ccc(Cl)c1c(F)co2\t462\n5\tc12c(Br)ccc(F)c1c(Cl)co2\t372\n6\tc12c(F)ccc(Cl)c1c(Br)co2\t432\n\nUnknown molecule: c12c(F)ccc(F)c1c(F)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)ccc(Br)c1c(Br)co2\t439\n1\tc12c(Cl)ccc(F)c1c(F)co2\t420\n2\tc12c(Br)ccc(Br)c1c(F)co2\t349\n3\tc12c(Cl)ccc(Cl)c1c(Br)co2\t456\n4\tc12c(F)ccc(Cl)c1c(F)co2\t462\n5\tc12c(Br)ccc(F)c1c(Cl)co2\t372\n6\tc12c(F)ccc(Cl)c1c(Br)co2\t432\n\nUnknown molecule: c12c(F)ccc(F)c1c(F)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 396, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "edea327f-ab0e-4402-9bac-b8d825bed55c", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 11, "noise_variance": 0, "answer": 517, "answer_confidence_interval": "(517, 517)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0]]), 'b': array([532., 485., 505., 557., 572., 468., 509.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cccc(Cl)c1c(Br)c(F)o2", "score": 532, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 180, "2": 181, "3": 171}}, {"smiles": "c12cccc(Cl)c1c(F)c(Br)o2", "score": 485, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 180, "2": 98, "3": 207}}, {"smiles": "c12cccc(Br)c1c(F)c(Br)o2", "score": 505, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 200, "2": 98, "3": 207}}, {"smiles": "c12cccc(F)c1c(Br)c(Cl)o2", "score": 557, "attachments": {"1": "*F", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 165, "2": 181, "3": 211}}, {"smiles": "c12cccc(Cl)c1c(Br)c(Cl)o2", "score": 572, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 180, "2": 181, "3": 211}}, {"smiles": "c12cccc(Br)c1c(Cl)c(F)o2", "score": 468, "attachments": {"1": "*Br", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 200, "2": 97, "3": 171}}, {"smiles": "c12cccc(Br)c1c(F)c(Cl)o2", "score": 509, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 200, "2": 98, "3": 211}}], "unknown_molecule_details": {"smiles": "c12cccc(F)c1c(Br)c(F)o2", "score": 517, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 165, "2": 181, "3": 171}}, "rgroup_scores": "{1: {'*F': 165, '*Cl': 180, '*Br': 200}, 2: {'*F': 98, '*Cl': 97, '*Br': 181}, 3: {'*F': 171, '*Cl': 211, '*Br': 207}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cccc(Cl)c1c(Br)c(F)o2\t532\n1\tc12cccc(Cl)c1c(F)c(Br)o2\t485\n2\tc12cccc(Br)c1c(F)c(Br)o2\t505\n3\tc12cccc(F)c1c(Br)c(Cl)o2\t557\n4\tc12cccc(Cl)c1c(Br)c(Cl)o2\t572\n5\tc12cccc(Br)c1c(Cl)c(F)o2\t468\n6\tc12cccc(Br)c1c(F)c(Cl)o2\t509\n\nUnknown molecule: c12cccc(F)c1c(Br)c(F)o2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cccc(Cl)c1c(Br)c(F)o2\t532\n1\tc12cccc(Cl)c1c(F)c(Br)o2\t485\n2\tc12cccc(Br)c1c(F)c(Br)o2\t505\n3\tc12cccc(F)c1c(Br)c(Cl)o2\t557\n4\tc12cccc(Cl)c1c(Br)c(Cl)o2\t572\n5\tc12cccc(Br)c1c(Cl)c(F)o2\t468\n6\tc12cccc(Br)c1c(F)c(Cl)o2\t509\n\nUnknown molecule: c12cccc(F)c1c(Br)c(F)o2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 517, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "77462078-8952-4ff9-8b80-d8dd16ea4c27", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 12, "noise_variance": 0, "answer": 457, "answer_confidence_interval": "(457, 457)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 0, 1, 0, 0, 1]]), 'b': array([534., 487., 339., 423., 434., 411., 432.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(Cl)c(Cl)c1c(F)co2", "score": 534, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 147, "2": 173, "3": 214}}, {"smiles": "c12ccc(Cl)c(Cl)c1c(Cl)co2", "score": 487, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 147, "2": 173, "3": 167}}, {"smiles": "c12ccc(Br)c(Br)c1c(Cl)co2", "score": 339, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 52, "2": 120, "3": 167}}, {"smiles": "c12ccc(Br)c(F)c1c(Br)co2", "score": 423, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 52, "2": 145, "3": 226}}, {"smiles": "c12ccc(Cl)c(Br)c1c(Cl)co2", "score": 434, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 147, "2": 120, "3": 167}}, {"smiles": "c12ccc(Br)c(F)c1c(F)co2", "score": 411, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 52, "2": 145, "3": 214}}, {"smiles": "c12ccc(F)c(Br)c1c(Br)co2", "score": 432, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 86, "2": 120, "3": 226}}], "unknown_molecule_details": {"smiles": "c12ccc(F)c(F)c1c(Br)co2", "score": 457, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 86, "2": 145, "3": 226}}, "rgroup_scores": "{1: {'*F': 86, '*Cl': 147, '*Br': 52}, 2: {'*F': 145, '*Cl': 173, '*Br': 120}, 3: {'*F': 214, '*Cl': 167, '*Br': 226}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Cl)c(Cl)c1c(F)co2\t534\n1\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t487\n2\tc12ccc(Br)c(Br)c1c(Cl)co2\t339\n3\tc12ccc(Br)c(F)c1c(Br)co2\t423\n4\tc12ccc(Cl)c(Br)c1c(Cl)co2\t434\n5\tc12ccc(Br)c(F)c1c(F)co2\t411\n6\tc12ccc(F)c(Br)c1c(Br)co2\t432\n\nUnknown molecule: c12ccc(F)c(F)c1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Cl)c(Cl)c1c(F)co2\t534\n1\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t487\n2\tc12ccc(Br)c(Br)c1c(Cl)co2\t339\n3\tc12ccc(Br)c(F)c1c(Br)co2\t423\n4\tc12ccc(Cl)c(Br)c1c(Cl)co2\t434\n5\tc12ccc(Br)c(F)c1c(F)co2\t411\n6\tc12ccc(F)c(Br)c1c(Br)co2\t432\n\nUnknown molecule: c12ccc(F)c(F)c1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 457, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "be519e7f-1c2d-4d4b-ae46-62e8d4c099c5", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 13, "noise_variance": 0, "answer": 544, "answer_confidence_interval": "(544, 544)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1]]), 'b': array([406., 424., 293., 560., 400., 531., 279.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(F)c(Cl)cc1cc(Br)o2", "score": 406, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 107, "3": 83}}, {"smiles": "c12cc(Br)c(Cl)cc1cc(Cl)o2", "score": 424, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 220, "2": 107, "3": 97}}, {"smiles": "c12cc(Cl)c(F)cc1cc(Cl)o2", "score": 293, "attachments": {"1": "*Cl", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 109, "2": 87, "3": 97}}, {"smiles": "c12cc(F)c(Cl)cc1cc(F)o2", "score": 560, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 216, "2": 107, "3": 237}}, {"smiles": "c12cc(F)c(F)cc1cc(Cl)o2", "score": 400, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 87, "3": 97}}, {"smiles": "c12cc(Br)c(Br)cc1cc(Cl)o2", "score": 531, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 220, "2": 214, "3": 97}}, {"smiles": "c12cc(Cl)c(F)cc1cc(Br)o2", "score": 279, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 109, "2": 87, "3": 83}}], "unknown_molecule_details": {"smiles": "c12cc(Br)c(F)cc1cc(F)o2", "score": 544, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 220, "2": 87, "3": 237}}, "rgroup_scores": "{1: {'*F': 216, '*Cl': 109, '*Br': 220}, 2: {'*F': 87, '*Cl': 107, '*Br': 214}, 3: {'*F': 237, '*Cl': 97, '*Br': 83}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(F)c(Cl)cc1cc(Br)o2\t406\n1\tc12cc(Br)c(Cl)cc1cc(Cl)o2\t424\n2\tc12cc(Cl)c(F)cc1cc(Cl)o2\t293\n3\tc12cc(F)c(Cl)cc1cc(F)o2\t560\n4\tc12cc(F)c(F)cc1cc(Cl)o2\t400\n5\tc12cc(Br)c(Br)cc1cc(Cl)o2\t531\n6\tc12cc(Cl)c(F)cc1cc(Br)o2\t279\n\nUnknown molecule: c12cc(Br)c(F)cc1cc(F)o2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(F)c(Cl)cc1cc(Br)o2\t406\n1\tc12cc(Br)c(Cl)cc1cc(Cl)o2\t424\n2\tc12cc(Cl)c(F)cc1cc(Cl)o2\t293\n3\tc12cc(F)c(Cl)cc1cc(F)o2\t560\n4\tc12cc(F)c(F)cc1cc(Cl)o2\t400\n5\tc12cc(Br)c(Br)cc1cc(Cl)o2\t531\n6\tc12cc(Cl)c(F)cc1cc(Br)o2\t279\n\nUnknown molecule: c12cc(Br)c(F)cc1cc(F)o2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 544, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "33228152-e99b-4115-a76f-3f22b963fc45", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 14, "noise_variance": 0, "answer": 483, "answer_confidence_interval": "(483, 483)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0]]), 'b': array([366., 517., 405., 580., 471., 640., 408.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)c(F)ccc1c(Br)co2", "score": 366, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 115, "2": 124, "3": 127}}, {"smiles": "c12c(Br)c(Cl)ccc1c(Cl)co2", "score": 517, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 115, "2": 237, "3": 165}}, {"smiles": "c12c(F)c(Br)ccc1c(F)co2", "score": 405, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 119, "2": 68, "3": 218}}, {"smiles": "c12c(Cl)c(F)ccc1c(F)co2", "score": 580, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 238, "2": 124, "3": 218}}, {"smiles": "c12c(Cl)c(Br)ccc1c(Cl)co2", "score": 471, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 238, "2": 68, "3": 165}}, {"smiles": "c12c(Cl)c(Cl)ccc1c(Cl)co2", "score": 640, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 238, "2": 237, "3": 165}}, {"smiles": "c12c(F)c(F)ccc1c(Cl)co2", "score": 408, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 119, "2": 124, "3": 165}}], "unknown_molecule_details": {"smiles": "c12c(F)c(Cl)ccc1c(Br)co2", "score": 483, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 119, "2": 237, "3": 127}}, "rgroup_scores": "{1: {'*F': 119, '*Cl': 238, '*Br': 115}, 2: {'*F': 124, '*Cl': 237, '*Br': 68}, 3: {'*F': 218, '*Cl': 165, '*Br': 127}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(F)ccc1c(Br)co2\t366\n1\tc12c(Br)c(Cl)ccc1c(Cl)co2\t517\n2\tc12c(F)c(Br)ccc1c(F)co2\t405\n3\tc12c(Cl)c(F)ccc1c(F)co2\t580\n4\tc12c(Cl)c(Br)ccc1c(Cl)co2\t471\n5\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t640\n6\tc12c(F)c(F)ccc1c(Cl)co2\t408\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(F)ccc1c(Br)co2\t366\n1\tc12c(Br)c(Cl)ccc1c(Cl)co2\t517\n2\tc12c(F)c(Br)ccc1c(F)co2\t405\n3\tc12c(Cl)c(F)ccc1c(F)co2\t580\n4\tc12c(Cl)c(Br)ccc1c(Cl)co2\t471\n5\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t640\n6\tc12c(F)c(F)ccc1c(Cl)co2\t408\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 483, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "43b28196-71ac-471c-a8ba-d47e8a9774f2", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 15, "noise_variance": 0, "answer": 425, "answer_confidence_interval": "(425, 425)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1]]), 'b': array([265., 298., 381., 479., 285., 402., 309.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)c(F)ccc1c(Br)co2", "score": 265, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 90, "2": 64, "3": 111}}, {"smiles": "c12c(F)c(F)ccc1c(Cl)co2", "score": 298, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 90, "2": 64, "3": 144}}, {"smiles": "c12c(F)c(F)ccc1c(F)co2", "score": 381, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 90, "2": 64, "3": 227}}, {"smiles": "c12c(Cl)c(Cl)ccc1c(Cl)co2", "score": 479, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 111, "2": 224, "3": 144}}, {"smiles": "c12c(Br)c(Br)ccc1c(Cl)co2", "score": 285, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 54, "2": 87, "3": 144}}, {"smiles": "c12c(Cl)c(F)ccc1c(F)co2", "score": 402, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 64, "3": 227}}, {"smiles": "c12c(Cl)c(Br)ccc1c(Br)co2", "score": 309, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 111, "2": 87, "3": 111}}], "unknown_molecule_details": {"smiles": "c12c(Cl)c(Br)ccc1c(F)co2", "score": 425, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 87, "3": 227}}, "rgroup_scores": "{1: {'*F': 90, '*Cl': 111, '*Br': 54}, 2: {'*F': 64, '*Cl': 224, '*Br': 87}, 3: {'*F': 227, '*Cl': 144, '*Br': 111}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t265\n1\tc12c(F)c(F)ccc1c(Cl)co2\t298\n2\tc12c(F)c(F)ccc1c(F)co2\t381\n3\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t479\n4\tc12c(Br)c(Br)ccc1c(Cl)co2\t285\n5\tc12c(Cl)c(F)ccc1c(F)co2\t402\n6\tc12c(Cl)c(Br)ccc1c(Br)co2\t309\n\nUnknown molecule: c12c(Cl)c(Br)ccc1c(F)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t265\n1\tc12c(F)c(F)ccc1c(Cl)co2\t298\n2\tc12c(F)c(F)ccc1c(F)co2\t381\n3\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t479\n4\tc12c(Br)c(Br)ccc1c(Cl)co2\t285\n5\tc12c(Cl)c(F)ccc1c(F)co2\t402\n6\tc12c(Cl)c(Br)ccc1c(Br)co2\t309\n\nUnknown molecule: c12c(Cl)c(Br)ccc1c(F)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 425, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "39e79b00-6172-418a-a2c1-fad0170ed02b", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 16, "noise_variance": 0, "answer": 436, "answer_confidence_interval": "(436, 436)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([494., 391., 518., 439., 289., 504., 528.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(F)c(Br)c1c(F)co2", "score": 494, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 122, "2": 154, "3": 218}}, {"smiles": "c12ccc(F)c(Cl)c1c(F)co2", "score": 391, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 122, "2": 51, "3": 218}}, {"smiles": "c12ccc(F)c(F)c1c(Cl)co2", "score": 518, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 122, "2": 164, "3": 232}}, {"smiles": "c12ccc(Cl)c(Cl)c1c(Cl)co2", "score": 439, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 156, "2": 51, "3": 232}}, {"smiles": "c12ccc(F)c(Cl)c1c(Br)co2", "score": 289, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 122, "2": 51, "3": 116}}, {"smiles": "c12ccc(Br)c(F)c1c(Cl)co2", "score": 504, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 108, "2": 164, "3": 232}}, {"smiles": "c12ccc(Cl)c(Br)c1c(F)co2", "score": 528, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 156, "2": 154, "3": 218}}], "unknown_molecule_details": {"smiles": "c12ccc(Cl)c(F)c1c(Br)co2", "score": 436, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 156, "2": 164, "3": 116}}, "rgroup_scores": "{1: {'*F': 122, '*Cl': 156, '*Br': 108}, 2: {'*F': 164, '*Cl': 51, '*Br': 154}, 3: {'*F': 218, '*Cl': 232, '*Br': 116}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t494\n1\tc12ccc(F)c(Cl)c1c(F)co2\t391\n2\tc12ccc(F)c(F)c1c(Cl)co2\t518\n3\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t439\n4\tc12ccc(F)c(Cl)c1c(Br)co2\t289\n5\tc12ccc(Br)c(F)c1c(Cl)co2\t504\n6\tc12ccc(Cl)c(Br)c1c(F)co2\t528\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t494\n1\tc12ccc(F)c(Cl)c1c(F)co2\t391\n2\tc12ccc(F)c(F)c1c(Cl)co2\t518\n3\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t439\n4\tc12ccc(F)c(Cl)c1c(Br)co2\t289\n5\tc12ccc(Br)c(F)c1c(Cl)co2\t504\n6\tc12ccc(Cl)c(Br)c1c(F)co2\t528\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(Br)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 436, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "0a549a7c-a3dd-4fd9-99db-95d09a1e5088", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 17, "noise_variance": 0, "answer": 558, "answer_confidence_interval": "(558, 558)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0]]), 'b': array([561., 461., 491., 512., 543., 494., 559.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(F)c(Br)c1c(F)co2", "score": 561, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 143, "2": 230, "3": 188}}, {"smiles": "c12ccc(Br)c(F)c1c(Br)co2", "score": 461, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 94, "2": 246, "3": 121}}, {"smiles": "c12ccc(Cl)c(F)c1c(Br)co2", "score": 491, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 124, "2": 246, "3": 121}}, {"smiles": "c12ccc(Br)c(Br)c1c(F)co2", "score": 512, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 94, "2": 230, "3": 188}}, {"smiles": "c12ccc(Br)c(Br)c1c(Cl)co2", "score": 543, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 94, "2": 230, "3": 219}}, {"smiles": "c12ccc(F)c(Cl)c1c(Br)co2", "score": 494, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 143, "2": 230, "3": 121}}, {"smiles": "c12ccc(Br)c(F)c1c(Cl)co2", "score": 559, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 94, "2": 246, "3": 219}}], "unknown_molecule_details": {"smiles": "c12ccc(Cl)c(F)c1c(F)co2", "score": 558, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 124, "2": 246, "3": 188}}, "rgroup_scores": "{1: {'*F': 143, '*Cl': 124, '*Br': 94}, 2: {'*F': 246, '*Cl': 230, '*Br': 230}, 3: {'*F': 188, '*Cl': 219, '*Br': 121}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t561\n1\tc12ccc(Br)c(F)c1c(Br)co2\t461\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t491\n3\tc12ccc(Br)c(Br)c1c(F)co2\t512\n4\tc12ccc(Br)c(Br)c1c(Cl)co2\t543\n5\tc12ccc(F)c(Cl)c1c(Br)co2\t494\n6\tc12ccc(Br)c(F)c1c(Cl)co2\t559\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(F)co2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t561\n1\tc12ccc(Br)c(F)c1c(Br)co2\t461\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t491\n3\tc12ccc(Br)c(Br)c1c(F)co2\t512\n4\tc12ccc(Br)c(Br)c1c(Cl)co2\t543\n5\tc12ccc(F)c(Cl)c1c(Br)co2\t494\n6\tc12ccc(Br)c(F)c1c(Cl)co2\t559\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(F)co2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 558, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "658c5047-153c-4b19-afba-3fae48111bfd", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 18, "noise_variance": 0, "answer": 400, "answer_confidence_interval": "(400, 400)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([517., 482., 406., 372., 435., 417., 383.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)c(Cl)cc(Cl)c1cco2", "score": 517, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 135, "2": 210, "3": 172}}, {"smiles": "c12c(F)c(F)cc(Cl)c1cco2", "score": 482, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 135, "2": 175, "3": 172}}, {"smiles": "c12c(F)c(F)cc(F)c1cco2", "score": 406, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 135, "2": 175, "3": 96}}, {"smiles": "c12c(Br)c(Br)cc(F)c1cco2", "score": 372, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 100, "2": 176, "3": 96}}, {"smiles": "c12c(F)c(F)cc(Br)c1cco2", "score": 435, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 135, "2": 175, "3": 125}}, {"smiles": "c12c(Cl)c(Cl)cc(F)c1cco2", "score": 417, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 210, "3": 96}}, {"smiles": "c12c(Cl)c(Br)cc(F)c1cco2", "score": 383, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 176, "3": 96}}], "unknown_molecule_details": {"smiles": "c12c(Br)c(F)cc(Br)c1cco2", "score": 400, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 100, "2": 175, "3": 125}}, "rgroup_scores": "{1: {'*F': 135, '*Cl': 111, '*Br': 100}, 2: {'*F': 175, '*Cl': 210, '*Br': 176}, 3: {'*F': 96, '*Cl': 172, '*Br': 125}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(Cl)cc(Cl)c1cco2\t517\n1\tc12c(F)c(F)cc(Cl)c1cco2\t482\n2\tc12c(F)c(F)cc(F)c1cco2\t406\n3\tc12c(Br)c(Br)cc(F)c1cco2\t372\n4\tc12c(F)c(F)cc(Br)c1cco2\t435\n5\tc12c(Cl)c(Cl)cc(F)c1cco2\t417\n6\tc12c(Cl)c(Br)cc(F)c1cco2\t383\n\nUnknown molecule: c12c(Br)c(F)cc(Br)c1cco2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(Cl)cc(Cl)c1cco2\t517\n1\tc12c(F)c(F)cc(Cl)c1cco2\t482\n2\tc12c(F)c(F)cc(F)c1cco2\t406\n3\tc12c(Br)c(Br)cc(F)c1cco2\t372\n4\tc12c(F)c(F)cc(Br)c1cco2\t435\n5\tc12c(Cl)c(Cl)cc(F)c1cco2\t417\n6\tc12c(Cl)c(Br)cc(F)c1cco2\t383\n\nUnknown molecule: c12c(Br)c(F)cc(Br)c1cco2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 400, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "4711d40f-1c53-422e-9188-b2170840fd34", "question_category": "sar", "sub_category": "integer", "meta_data": {"iteration": 19, "noise_variance": 0, "answer": 452, "answer_confidence_interval": "(452, 452)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1]]), 'b': array([424., 375., 487., 567., 427., 537., 441.]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Cl)cccc1c(Br)c(F)o2", "score": 424, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 101, "2": 124, "3": 199}}, {"smiles": "c12c(Br)cccc1c(F)c(Cl)o2", "score": 375, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 150, "2": 138, "3": 87}}, {"smiles": "c12c(Br)cccc1c(F)c(F)o2", "score": 487, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 150, "2": 138, "3": 199}}, {"smiles": "c12c(F)cccc1c(Cl)c(Br)o2", "score": 567, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 180, "2": 185, "3": 202}}, {"smiles": "c12c(Cl)cccc1c(Br)c(Br)o2", "score": 427, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 101, "2": 124, "3": 202}}, {"smiles": "c12c(Br)cccc1c(Cl)c(Br)o2", "score": 537, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 150, "2": 185, "3": 202}}, {"smiles": "c12c(Cl)cccc1c(F)c(Br)o2", "score": 441, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 101, "2": 138, "3": 202}}], "unknown_molecule_details": {"smiles": "c12c(F)cccc1c(Cl)c(Cl)o2", "score": 452, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 180, "2": 185, "3": 87}}, "rgroup_scores": "{1: {'*F': 180, '*Cl': 101, '*Br': 150}, 2: {'*F': 138, '*Cl': 185, '*Br': 124}, 3: {'*F': 199, '*Cl': 87, '*Br': 202}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Cl)cccc1c(Br)c(F)o2\t424\n1\tc12c(Br)cccc1c(F)c(Cl)o2\t375\n2\tc12c(Br)cccc1c(F)c(F)o2\t487\n3\tc12c(F)cccc1c(Cl)c(Br)o2\t567\n4\tc12c(Cl)cccc1c(Br)c(Br)o2\t427\n5\tc12c(Br)cccc1c(Cl)c(Br)o2\t537\n6\tc12c(Cl)cccc1c(F)c(Br)o2\t441\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(Cl)o2\n\nWrite your answer as an integer only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Cl)cccc1c(Br)c(F)o2\t424\n1\tc12c(Br)cccc1c(F)c(Cl)o2\t375\n2\tc12c(Br)cccc1c(F)c(F)o2\t487\n3\tc12c(F)cccc1c(Cl)c(Br)o2\t567\n4\tc12c(Cl)cccc1c(Br)c(Br)o2\t427\n5\tc12c(Br)cccc1c(Cl)c(Br)o2\t537\n6\tc12c(Cl)cccc1c(F)c(Br)o2\t441\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(Cl)o2\n\nWrite your answer as an integer only. Do not write any comments.", "answer": 452, "answer_format": "integer", "answer_range": null, "verification_method": "exact_match", "ChemIQ": true}
{"uuid": "e27e756f-95f7-49b0-8ab1-51dea9ebe2d3", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 0, "noise_variance": 3, "answer": 441, "answer_confidence_interval": "(434.21, 447.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 0, 0, 1, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1]]), 'b': array([498.03, 602.74, 445.59, 500.48, 468.66, 478.61, 630.46]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)ccc(Br)c1cc(Br)o2", "score": 498.03, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 174, "2": 127, "3": 199}}, {"smiles": "c12c(Cl)ccc(Cl)c1cc(F)o2", "score": 602.74, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 180, "2": 250, "3": 172}}, {"smiles": "c12c(Br)ccc(Br)c1cc(Cl)o2", "score": 445.59, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 174, "2": 127, "3": 141}}, {"smiles": "c12c(Br)ccc(F)c1cc(F)o2", "score": 500.48, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 174, "2": 153, "3": 172}}, {"smiles": "c12c(F)ccc(F)c1cc(Br)o2", "score": 468.66, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 116, "2": 153, "3": 199}}, {"smiles": "c12c(Cl)ccc(Br)c1cc(F)o2", "score": 478.61, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 180, "2": 127, "3": 172}}, {"smiles": "c12c(Cl)ccc(Cl)c1cc(Br)o2", "score": 630.46, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 180, "2": 250, "3": 199}}], "unknown_molecule_details": {"smiles": "c12c(F)ccc(F)c1cc(F)o2", "score": 441, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 116, "2": 153, "3": 172}}, "rgroup_scores": "{1: {'*F': 116, '*Cl': 180, '*Br': 174}, 2: {'*F': 153, '*Cl': 250, '*Br': 127}, 3: {'*F': 172, '*Cl': 141, '*Br': 199}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1cc(Br)o2\t498.03\n1\tc12c(Cl)ccc(Cl)c1cc(F)o2\t602.74\n2\tc12c(Br)ccc(Br)c1cc(Cl)o2\t445.59\n3\tc12c(Br)ccc(F)c1cc(F)o2\t500.48\n4\tc12c(F)ccc(F)c1cc(Br)o2\t468.66\n5\tc12c(Cl)ccc(Br)c1cc(F)o2\t478.61\n6\tc12c(Cl)ccc(Cl)c1cc(Br)o2\t630.46\n\nUnknown molecule: c12c(F)ccc(F)c1cc(F)o2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1cc(Br)o2\t498.03\n1\tc12c(Cl)ccc(Cl)c1cc(F)o2\t602.74\n2\tc12c(Br)ccc(Br)c1cc(Cl)o2\t445.59\n3\tc12c(Br)ccc(F)c1cc(F)o2\t500.48\n4\tc12c(F)ccc(F)c1cc(Br)o2\t468.66\n5\tc12c(Cl)ccc(Br)c1cc(F)o2\t478.61\n6\tc12c(Cl)ccc(Cl)c1cc(Br)o2\t630.46\n\nUnknown molecule: c12c(F)ccc(F)c1cc(F)o2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 441, "answer_format": "float", "answer_range": "(434.21, 447.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "f19c07fc-46b0-49b6-9472-abd51efd6213", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 1, "noise_variance": 3, "answer": 427, "answer_confidence_interval": "(420.21, 433.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 0, 1]]), 'b': array([460.49, 426.48, 504.7 , 537.37, 386.78, 351.83, 444.7 ]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)c(F)ccc1c(Br)co2", "score": 460.49, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 115, "2": 244, "3": 103}}, {"smiles": "c12c(Cl)c(F)ccc1c(Br)co2", "score": 426.48, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 80, "2": 244, "3": 103}}, {"smiles": "c12c(F)c(F)ccc1c(Cl)co2", "score": 504.7, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 115, "2": 244, "3": 147}}, {"smiles": "c12c(Cl)c(F)ccc1c(F)co2", "score": 537.37, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 80, "2": 244, "3": 216}}, {"smiles": "c12c(F)c(Cl)ccc1c(Br)co2", "score": 386.78, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 115, "2": 165, "3": 103}}, {"smiles": "c12c(Cl)c(Br)ccc1c(Br)co2", "score": 351.83, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 80, "2": 170, "3": 103}}, {"smiles": "c12c(Br)c(Cl)ccc1c(Br)co2", "score": 444.7, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 176, "2": 165, "3": 103}}], "unknown_molecule_details": {"smiles": "c12c(F)c(Cl)ccc1c(Cl)co2", "score": 427, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 115, "2": 165, "3": 147}}, "rgroup_scores": "{1: {'*F': 115, '*Cl': 80, '*Br': 176}, 2: {'*F': 244, '*Cl': 165, '*Br': 170}, 3: {'*F': 216, '*Cl': 147, '*Br': 103}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t460.49\n1\tc12c(Cl)c(F)ccc1c(Br)co2\t426.48\n2\tc12c(F)c(F)ccc1c(Cl)co2\t504.7\n3\tc12c(Cl)c(F)ccc1c(F)co2\t537.37\n4\tc12c(F)c(Cl)ccc1c(Br)co2\t386.78\n5\tc12c(Cl)c(Br)ccc1c(Br)co2\t351.83\n6\tc12c(Br)c(Cl)ccc1c(Br)co2\t444.7\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Cl)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t460.49\n1\tc12c(Cl)c(F)ccc1c(Br)co2\t426.48\n2\tc12c(F)c(F)ccc1c(Cl)co2\t504.7\n3\tc12c(Cl)c(F)ccc1c(F)co2\t537.37\n4\tc12c(F)c(Cl)ccc1c(Br)co2\t386.78\n5\tc12c(Cl)c(Br)ccc1c(Br)co2\t351.83\n6\tc12c(Br)c(Cl)ccc1c(Br)co2\t444.7\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Cl)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 427, "answer_format": "float", "answer_range": "(420.21, 433.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "dcf37e41-0e4f-4587-b70d-433b8fe0d424", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 2, "noise_variance": 3, "answer": 475, "answer_confidence_interval": "(468.21, 481.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([569.52, 557.23, 520.35, 419.57, 559.59, 373.98, 413.52]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)cccc1c(F)c(Br)o2", "score": 569.52, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 142, "2": 221, "3": 205}}, {"smiles": "c12c(Br)cccc1c(Br)c(F)o2", "score": 557.23, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 238, "2": 114, "3": 205}}, {"smiles": "c12c(Cl)cccc1c(F)c(F)o2", "score": 520.35, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 93, "2": 221, "3": 205}}, {"smiles": "c12c(Cl)cccc1c(F)c(Cl)o2", "score": 419.57, "attachments": {"1": "*Cl", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 93, "2": 221, "3": 104}}, {"smiles": "c12c(Br)cccc1c(Br)c(Br)o2", "score": 559.59, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 238, "2": 114, "3": 205}}, {"smiles": "c12c(F)cccc1c(Cl)c(Cl)o2", "score": 373.98, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 142, "2": 128, "3": 104}}, {"smiles": "c12c(Cl)cccc1c(Br)c(F)o2", "score": 413.52, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 93, "2": 114, "3": 205}}], "unknown_molecule_details": {"smiles": "c12c(F)cccc1c(Cl)c(F)o2", "score": 475, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 142, "2": 128, "3": 205}}, "rgroup_scores": "{1: {'*F': 142, '*Cl': 93, '*Br': 238}, 2: {'*F': 221, '*Cl': 128, '*Br': 114}, 3: {'*F': 205, '*Cl': 104, '*Br': 205}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)cccc1c(F)c(Br)o2\t569.52\n1\tc12c(Br)cccc1c(Br)c(F)o2\t557.23\n2\tc12c(Cl)cccc1c(F)c(F)o2\t520.35\n3\tc12c(Cl)cccc1c(F)c(Cl)o2\t419.57\n4\tc12c(Br)cccc1c(Br)c(Br)o2\t559.59\n5\tc12c(F)cccc1c(Cl)c(Cl)o2\t373.98\n6\tc12c(Cl)cccc1c(Br)c(F)o2\t413.52\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(F)o2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)cccc1c(F)c(Br)o2\t569.52\n1\tc12c(Br)cccc1c(Br)c(F)o2\t557.23\n2\tc12c(Cl)cccc1c(F)c(F)o2\t520.35\n3\tc12c(Cl)cccc1c(F)c(Cl)o2\t419.57\n4\tc12c(Br)cccc1c(Br)c(Br)o2\t559.59\n5\tc12c(F)cccc1c(Cl)c(Cl)o2\t373.98\n6\tc12c(Cl)cccc1c(Br)c(F)o2\t413.52\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(F)o2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 475, "answer_format": "float", "answer_range": "(468.21, 481.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "5220f0cc-c3b3-414b-9c69-d8b973274d9f", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 3, "noise_variance": 3, "answer": 512, "answer_confidence_interval": "(505.21, 518.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1]]), 'b': array([618.13, 319.2 , 544.54, 585.91, 582.19, 435.38, 572.57]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(Cl)ccc1c(F)c(F)o2", "score": 618.13, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 204, "2": 210, "3": 205}}, {"smiles": "c12cc(Cl)ccc1c(Br)c(Cl)o2", "score": 319.2, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 204, "2": 66, "3": 53}}, {"smiles": "c12cc(F)ccc1c(Cl)c(F)o2", "score": 544.54, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 144, "2": 198, "3": 205}}, {"smiles": "c12cc(Cl)ccc1c(F)c(Br)o2", "score": 585.91, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 204, "2": 210, "3": 170}}, {"smiles": "c12cc(Br)ccc1c(F)c(F)o2", "score": 582.19, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 171, "2": 210, "3": 205}}, {"smiles": "c12cc(Br)ccc1c(F)c(Cl)o2", "score": 435.38, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 171, "2": 210, "3": 53}}, {"smiles": "c12cc(Cl)ccc1c(Cl)c(Br)o2", "score": 572.57, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 204, "2": 198, "3": 170}}], "unknown_molecule_details": {"smiles": "c12cc(F)ccc1c(Cl)c(Br)o2", "score": 512, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 144, "2": 198, "3": 170}}, "rgroup_scores": "{1: {'*F': 144, '*Cl': 204, '*Br': 171}, 2: {'*F': 210, '*Cl': 198, '*Br': 66}, 3: {'*F': 205, '*Cl': 53, '*Br': 170}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)ccc1c(F)c(F)o2\t618.13\n1\tc12cc(Cl)ccc1c(Br)c(Cl)o2\t319.2\n2\tc12cc(F)ccc1c(Cl)c(F)o2\t544.54\n3\tc12cc(Cl)ccc1c(F)c(Br)o2\t585.91\n4\tc12cc(Br)ccc1c(F)c(F)o2\t582.19\n5\tc12cc(Br)ccc1c(F)c(Cl)o2\t435.38\n6\tc12cc(Cl)ccc1c(Cl)c(Br)o2\t572.57\n\nUnknown molecule: c12cc(F)ccc1c(Cl)c(Br)o2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)ccc1c(F)c(F)o2\t618.13\n1\tc12cc(Cl)ccc1c(Br)c(Cl)o2\t319.2\n2\tc12cc(F)ccc1c(Cl)c(F)o2\t544.54\n3\tc12cc(Cl)ccc1c(F)c(Br)o2\t585.91\n4\tc12cc(Br)ccc1c(F)c(F)o2\t582.19\n5\tc12cc(Br)ccc1c(F)c(Cl)o2\t435.38\n6\tc12cc(Cl)ccc1c(Cl)c(Br)o2\t572.57\n\nUnknown molecule: c12cc(F)ccc1c(Cl)c(Br)o2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 512, "answer_format": "float", "answer_range": "(505.21, 518.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "aa920dee-38f0-4379-a8fe-867b716d4649", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 4, "noise_variance": 3, "answer": 429, "answer_confidence_interval": "(422.21, 435.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0]]), 'b': array([434.03, 395.19, 376.86, 357.76, 454.42, 275.15, 280.45]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)c(Cl)c(Br)cc1cco2", "score": 434.03, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 172, "2": 73, "3": 190}}, {"smiles": "c12c(Br)c(Cl)c(Cl)cc1cco2", "score": 395.19, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 172, "2": 73, "3": 152}}, {"smiles": "c12c(Cl)c(Cl)c(Cl)cc1cco2", "score": 376.86, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 151, "2": 73, "3": 152}}, {"smiles": "c12c(F)c(Br)c(F)cc1cco2", "score": 357.76, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 234, "2": 67, "3": 55}}, {"smiles": "c12c(Br)c(F)c(Br)cc1cco2", "score": 454.42, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 172, "2": 89, "3": 190}}, {"smiles": "c12c(Cl)c(Br)c(F)cc1cco2", "score": 275.15, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 151, "2": 67, "3": 55}}, {"smiles": "c12c(Cl)c(Cl)c(F)cc1cco2", "score": 280.45, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 151, "2": 73, "3": 55}}], "unknown_molecule_details": {"smiles": "c12c(Br)c(Br)c(Br)cc1cco2", "score": 429, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 172, "2": 67, "3": 190}}, "rgroup_scores": "{1: {'*F': 234, '*Cl': 151, '*Br': 172}, 2: {'*F': 89, '*Cl': 73, '*Br': 67}, 3: {'*F': 55, '*Cl': 152, '*Br': 190}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(Cl)c(Br)cc1cco2\t434.03\n1\tc12c(Br)c(Cl)c(Cl)cc1cco2\t395.19\n2\tc12c(Cl)c(Cl)c(Cl)cc1cco2\t376.86\n3\tc12c(F)c(Br)c(F)cc1cco2\t357.76\n4\tc12c(Br)c(F)c(Br)cc1cco2\t454.42\n5\tc12c(Cl)c(Br)c(F)cc1cco2\t275.15\n6\tc12c(Cl)c(Cl)c(F)cc1cco2\t280.45\n\nUnknown molecule: c12c(Br)c(Br)c(Br)cc1cco2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(Cl)c(Br)cc1cco2\t434.03\n1\tc12c(Br)c(Cl)c(Cl)cc1cco2\t395.19\n2\tc12c(Cl)c(Cl)c(Cl)cc1cco2\t376.86\n3\tc12c(F)c(Br)c(F)cc1cco2\t357.76\n4\tc12c(Br)c(F)c(Br)cc1cco2\t454.42\n5\tc12c(Cl)c(Br)c(F)cc1cco2\t275.15\n6\tc12c(Cl)c(Cl)c(F)cc1cco2\t280.45\n\nUnknown molecule: c12c(Br)c(Br)c(Br)cc1cco2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 429, "answer_format": "float", "answer_range": "(422.21, 435.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "6e7d796a-bcf5-4d85-a488-4207d49af398", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 5, "noise_variance": 3, "answer": 498, "answer_confidence_interval": "(491.21, 504.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0]]), 'b': array([612.01, 648.74, 409.75, 522.3 , 490.12, 675.36, 513.23]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(F)cc1c(Br)c(Br)o2", "score": 612.01, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 226, "2": 169, "3": 216}}, {"smiles": "c12ccc(Br)cc1c(F)c(F)o2", "score": 648.74, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 216, "2": 185, "3": 248}}, {"smiles": "c12ccc(Cl)cc1c(Cl)c(Cl)o2", "score": 409.75, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 239, "2": 57, "3": 113}}, {"smiles": "c12ccc(Cl)cc1c(Br)c(Cl)o2", "score": 522.3, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 239, "2": 169, "3": 113}}, {"smiles": "c12ccc(Br)cc1c(Cl)c(Br)o2", "score": 490.12, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 57, "3": 216}}, {"smiles": "c12ccc(Cl)cc1c(F)c(F)o2", "score": 675.36, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 239, "2": 185, "3": 248}}, {"smiles": "c12ccc(Br)cc1c(F)c(Cl)o2", "score": 513.23, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 185, "3": 113}}], "unknown_molecule_details": {"smiles": "c12ccc(Br)cc1c(Br)c(Cl)o2", "score": 498, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 169, "3": 113}}, "rgroup_scores": "{1: {'*F': 226, '*Cl': 239, '*Br': 216}, 2: {'*F': 185, '*Cl': 57, '*Br': 169}, 3: {'*F': 248, '*Cl': 113, '*Br': 216}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)cc1c(Br)c(Br)o2\t612.01\n1\tc12ccc(Br)cc1c(F)c(F)o2\t648.74\n2\tc12ccc(Cl)cc1c(Cl)c(Cl)o2\t409.75\n3\tc12ccc(Cl)cc1c(Br)c(Cl)o2\t522.3\n4\tc12ccc(Br)cc1c(Cl)c(Br)o2\t490.12\n5\tc12ccc(Cl)cc1c(F)c(F)o2\t675.36\n6\tc12ccc(Br)cc1c(F)c(Cl)o2\t513.23\n\nUnknown molecule: c12ccc(Br)cc1c(Br)c(Cl)o2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)cc1c(Br)c(Br)o2\t612.01\n1\tc12ccc(Br)cc1c(F)c(F)o2\t648.74\n2\tc12ccc(Cl)cc1c(Cl)c(Cl)o2\t409.75\n3\tc12ccc(Cl)cc1c(Br)c(Cl)o2\t522.3\n4\tc12ccc(Br)cc1c(Cl)c(Br)o2\t490.12\n5\tc12ccc(Cl)cc1c(F)c(F)o2\t675.36\n6\tc12ccc(Br)cc1c(F)c(Cl)o2\t513.23\n\nUnknown molecule: c12ccc(Br)cc1c(Br)c(Cl)o2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 498, "answer_format": "float", "answer_range": "(491.21, 504.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "0d235391-1e64-411a-a288-fb67391d5989", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 6, "noise_variance": 3, "answer": 576, "answer_confidence_interval": "(569.21, 582.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 0, 1],\n       [1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 1, 0, 0]]), 'b': array([477.09, 276.24, 504.06, 631.06, 522.43, 539.3 , 348.66]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)ccc(Br)c1c(F)co2", "score": 477.09, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 59, "2": 219, "3": 200}}, {"smiles": "c12c(Br)ccc(F)c1c(Cl)co2", "score": 276.24, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 59, "2": 50, "3": 170}}, {"smiles": "c12c(Cl)ccc(Br)c1c(Cl)co2", "score": 504.06, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 116, "2": 219, "3": 170}}, {"smiles": "c12c(F)ccc(Br)c1c(Cl)co2", "score": 631.06, "attachments": {"1": "*F", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 245, "2": 219, "3": 170}}, {"smiles": "c12c(Br)ccc(Br)c1c(Br)co2", "score": 522.43, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 59, "2": 219, "3": 244}}, {"smiles": "c12c(F)ccc(F)c1c(Br)co2", "score": 539.3, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 245, "2": 50, "3": 244}}, {"smiles": "c12c(Br)ccc(Cl)c1c(F)co2", "score": 348.66, "attachments": {"1": "*Br", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 59, "2": 87, "3": 200}}], "unknown_molecule_details": {"smiles": "c12c(F)ccc(Cl)c1c(Br)co2", "score": 576, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 245, "2": 87, "3": 244}}, "rgroup_scores": "{1: {'*F': 245, '*Cl': 116, '*Br': 59}, 2: {'*F': 50, '*Cl': 87, '*Br': 219}, 3: {'*F': 200, '*Cl': 170, '*Br': 244}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1c(F)co2\t477.09\n1\tc12c(Br)ccc(F)c1c(Cl)co2\t276.24\n2\tc12c(Cl)ccc(Br)c1c(Cl)co2\t504.06\n3\tc12c(F)ccc(Br)c1c(Cl)co2\t631.06\n4\tc12c(Br)ccc(Br)c1c(Br)co2\t522.43\n5\tc12c(F)ccc(F)c1c(Br)co2\t539.3\n6\tc12c(Br)ccc(Cl)c1c(F)co2\t348.66\n\nUnknown molecule: c12c(F)ccc(Cl)c1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)ccc(Br)c1c(F)co2\t477.09\n1\tc12c(Br)ccc(F)c1c(Cl)co2\t276.24\n2\tc12c(Cl)ccc(Br)c1c(Cl)co2\t504.06\n3\tc12c(F)ccc(Br)c1c(Cl)co2\t631.06\n4\tc12c(Br)ccc(Br)c1c(Br)co2\t522.43\n5\tc12c(F)ccc(F)c1c(Br)co2\t539.3\n6\tc12c(Br)ccc(Cl)c1c(F)co2\t348.66\n\nUnknown molecule: c12c(F)ccc(Cl)c1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 576, "answer_format": "float", "answer_range": "(569.21, 582.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "6b85b25c-1c6a-47ee-b3de-76ac633a253f", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 7, "noise_variance": 3, "answer": 469, "answer_confidence_interval": "(462.21, 475.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1],\n       [1, 0, 0, 0, 0, 1, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 0, 0, 1]]), 'b': array([319.53, 315.68, 536.85, 356.97, 434.96, 333.93, 388.72]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(Br)c(F)c(Cl)c1cco2", "score": 319.53, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 68, "2": 187, "3": 64}}, {"smiles": "c12cc(Cl)c(Cl)c(Br)c1cco2", "score": 315.68, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 62, "2": 74, "3": 179}}, {"smiles": "c12cc(F)c(Br)c(Br)c1cco2", "score": 536.85, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 143, "3": 179}}, {"smiles": "c12cc(F)c(Cl)c(Cl)c1cco2", "score": 356.97, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 74, "3": 64}}, {"smiles": "c12cc(Br)c(F)c(Br)c1cco2", "score": 434.96, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 68, "2": 187, "3": 179}}, {"smiles": "c12cc(Cl)c(Cl)c(F)c1cco2", "score": 333.93, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 62, "2": 74, "3": 199}}, {"smiles": "c12cc(Br)c(Br)c(Br)c1cco2", "score": 388.72, "attachments": {"1": "*Br", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 68, "2": 143, "3": 179}}], "unknown_molecule_details": {"smiles": "c12cc(F)c(Cl)c(Br)c1cco2", "score": 469, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 74, "3": 179}}, "rgroup_scores": "{1: {'*F': 216, '*Cl': 62, '*Br': 68}, 2: {'*F': 187, '*Cl': 74, '*Br': 143}, 3: {'*F': 199, '*Cl': 64, '*Br': 179}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Br)c(F)c(Cl)c1cco2\t319.53\n1\tc12cc(Cl)c(Cl)c(Br)c1cco2\t315.68\n2\tc12cc(F)c(Br)c(Br)c1cco2\t536.85\n3\tc12cc(F)c(Cl)c(Cl)c1cco2\t356.97\n4\tc12cc(Br)c(F)c(Br)c1cco2\t434.96\n5\tc12cc(Cl)c(Cl)c(F)c1cco2\t333.93\n6\tc12cc(Br)c(Br)c(Br)c1cco2\t388.72\n\nUnknown molecule: c12cc(F)c(Cl)c(Br)c1cco2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Br)c(F)c(Cl)c1cco2\t319.53\n1\tc12cc(Cl)c(Cl)c(Br)c1cco2\t315.68\n2\tc12cc(F)c(Br)c(Br)c1cco2\t536.85\n3\tc12cc(F)c(Cl)c(Cl)c1cco2\t356.97\n4\tc12cc(Br)c(F)c(Br)c1cco2\t434.96\n5\tc12cc(Cl)c(Cl)c(F)c1cco2\t333.93\n6\tc12cc(Br)c(Br)c(Br)c1cco2\t388.72\n\nUnknown molecule: c12cc(F)c(Cl)c(Br)c1cco2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 469, "answer_format": "float", "answer_range": "(462.21, 475.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "bbe9dcee-96c7-4639-8a15-9176f01c0ef4", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 8, "noise_variance": 3, "answer": 322, "answer_confidence_interval": "(312.4, 331.6)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1]]), 'b': array([270.54, 341.13, 470.47, 263.38, 256.07, 349.73, 285.81]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(Cl)c(F)c(F)c1cco2", "score": 270.54, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 99, "2": 61, "3": 113}}, {"smiles": "c12cc(Cl)c(F)c(Cl)c1cco2", "score": 341.13, "attachments": {"1": "*Cl", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 99, "2": 61, "3": 179}}, {"smiles": "c12cc(Br)c(F)c(Cl)c1cco2", "score": 470.47, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 230, "2": 61, "3": 179}}, {"smiles": "c12cc(Cl)c(F)c(Br)c1cco2", "score": 263.38, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 99, "2": 61, "3": 103}}, {"smiles": "c12cc(F)c(Cl)c(Br)c1cco2", "score": 256.07, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 82, "2": 71, "3": 103}}, {"smiles": "c12cc(Cl)c(Cl)c(Cl)c1cco2", "score": 349.73, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 99, "2": 71, "3": 179}}, {"smiles": "c12cc(Cl)c(Br)c(Br)c1cco2", "score": 285.81, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 99, "2": 85, "3": 103}}], "unknown_molecule_details": {"smiles": "c12cc(F)c(F)c(Cl)c1cco2", "score": 322, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 82, "2": 61, "3": 179}}, "rgroup_scores": "{1: {'*F': 82, '*Cl': 99, '*Br': 230}, 2: {'*F': 61, '*Cl': 71, '*Br': 85}, 3: {'*F': 113, '*Cl': 179, '*Br': 103}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)c(F)c(F)c1cco2\t270.54\n1\tc12cc(Cl)c(F)c(Cl)c1cco2\t341.13\n2\tc12cc(Br)c(F)c(Cl)c1cco2\t470.47\n3\tc12cc(Cl)c(F)c(Br)c1cco2\t263.38\n4\tc12cc(F)c(Cl)c(Br)c1cco2\t256.07\n5\tc12cc(Cl)c(Cl)c(Cl)c1cco2\t349.73\n6\tc12cc(Cl)c(Br)c(Br)c1cco2\t285.81\n\nUnknown molecule: c12cc(F)c(F)c(Cl)c1cco2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(Cl)c(F)c(F)c1cco2\t270.54\n1\tc12cc(Cl)c(F)c(Cl)c1cco2\t341.13\n2\tc12cc(Br)c(F)c(Cl)c1cco2\t470.47\n3\tc12cc(Cl)c(F)c(Br)c1cco2\t263.38\n4\tc12cc(F)c(Cl)c(Br)c1cco2\t256.07\n5\tc12cc(Cl)c(Cl)c(Cl)c1cco2\t349.73\n6\tc12cc(Cl)c(Br)c(Br)c1cco2\t285.81\n\nUnknown molecule: c12cc(F)c(F)c(Cl)c1cco2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 322, "answer_format": "float", "answer_range": "(312.4, 331.6)", "verification_method": "range", "ChemIQ": true}
{"uuid": "5a5416f5-e314-4539-83ff-0b2c04aa6449", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 9, "noise_variance": 3, "answer": 401, "answer_confidence_interval": "(394.21, 407.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [1, 0, 0, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([497.72, 335.21, 513.16, 411.71, 399.35, 423.36, 432.42]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(Br)c(F)c1c(F)co2", "score": 497.72, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 97, "2": 223, "3": 178}}, {"smiles": "c12ccc(F)c(Cl)c1c(Cl)co2", "score": 335.21, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 118, "2": 51, "3": 168}}, {"smiles": "c12ccc(Cl)c(F)c1c(Br)co2", "score": 513.16, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 85, "2": 223, "3": 204}}, {"smiles": "c12ccc(Br)c(Br)c1c(F)co2", "score": 411.71, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 97, "2": 136, "3": 178}}, {"smiles": "c12ccc(Cl)c(Br)c1c(F)co2", "score": 399.35, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 85, "2": 136, "3": 178}}, {"smiles": "c12ccc(F)c(Br)c1c(Cl)co2", "score": 423.36, "attachments": {"1": "*F", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 118, "2": 136, "3": 168}}, {"smiles": "c12ccc(F)c(Br)c1c(F)co2", "score": 432.42, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 118, "2": 136, "3": 178}}], "unknown_molecule_details": {"smiles": "c12ccc(Br)c(Br)c1c(Cl)co2", "score": 401, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 97, "2": 136, "3": 168}}, "rgroup_scores": "{1: {'*F': 118, '*Cl': 85, '*Br': 97}, 2: {'*F': 223, '*Cl': 51, '*Br': 136}, 3: {'*F': 178, '*Cl': 168, '*Br': 204}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Br)c(F)c1c(F)co2\t497.72\n1\tc12ccc(F)c(Cl)c1c(Cl)co2\t335.21\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t513.16\n3\tc12ccc(Br)c(Br)c1c(F)co2\t411.71\n4\tc12ccc(Cl)c(Br)c1c(F)co2\t399.35\n5\tc12ccc(F)c(Br)c1c(Cl)co2\t423.36\n6\tc12ccc(F)c(Br)c1c(F)co2\t432.42\n\nUnknown molecule: c12ccc(Br)c(Br)c1c(Cl)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Br)c(F)c1c(F)co2\t497.72\n1\tc12ccc(F)c(Cl)c1c(Cl)co2\t335.21\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t513.16\n3\tc12ccc(Br)c(Br)c1c(F)co2\t411.71\n4\tc12ccc(Cl)c(Br)c1c(F)co2\t399.35\n5\tc12ccc(F)c(Br)c1c(Cl)co2\t423.36\n6\tc12ccc(F)c(Br)c1c(F)co2\t432.42\n\nUnknown molecule: c12ccc(Br)c(Br)c1c(Cl)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 401, "answer_format": "float", "answer_range": "(394.21, 407.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "fd3c784a-0afb-4e60-830d-2ccf316c3a62", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 10, "noise_variance": 3, "answer": 396, "answer_confidence_interval": "(389.21, 402.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 0, 1],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1]]), 'b': array([439.15, 420.04, 351.75, 459.07, 461.46, 373.56, 433.21]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)ccc(Br)c1c(Br)co2", "score": 439.15, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 173, "2": 175, "3": 91}}, {"smiles": "c12c(Cl)ccc(F)c1c(F)co2", "score": 420.04, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 197, "2": 102, "3": 121}}, {"smiles": "c12c(Br)ccc(Br)c1c(F)co2", "score": 351.75, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 53, "2": 175, "3": 121}}, {"smiles": "c12c(Cl)ccc(Cl)c1c(Br)co2", "score": 459.07, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 197, "2": 168, "3": 91}}, {"smiles": "c12c(F)ccc(Cl)c1c(F)co2", "score": 461.46, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 173, "2": 168, "3": 121}}, {"smiles": "c12c(Br)ccc(F)c1c(Cl)co2", "score": 373.56, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 53, "2": 102, "3": 217}}, {"smiles": "c12c(F)ccc(Cl)c1c(Br)co2", "score": 433.21, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 173, "2": 168, "3": 91}}], "unknown_molecule_details": {"smiles": "c12c(F)ccc(F)c1c(F)co2", "score": 396, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 173, "2": 102, "3": 121}}, "rgroup_scores": "{1: {'*F': 173, '*Cl': 197, '*Br': 53}, 2: {'*F': 102, '*Cl': 168, '*Br': 175}, 3: {'*F': 121, '*Cl': 217, '*Br': 91}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)ccc(Br)c1c(Br)co2\t439.15\n1\tc12c(Cl)ccc(F)c1c(F)co2\t420.04\n2\tc12c(Br)ccc(Br)c1c(F)co2\t351.75\n3\tc12c(Cl)ccc(Cl)c1c(Br)co2\t459.07\n4\tc12c(F)ccc(Cl)c1c(F)co2\t461.46\n5\tc12c(Br)ccc(F)c1c(Cl)co2\t373.56\n6\tc12c(F)ccc(Cl)c1c(Br)co2\t433.21\n\nUnknown molecule: c12c(F)ccc(F)c1c(F)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)ccc(Br)c1c(Br)co2\t439.15\n1\tc12c(Cl)ccc(F)c1c(F)co2\t420.04\n2\tc12c(Br)ccc(Br)c1c(F)co2\t351.75\n3\tc12c(Cl)ccc(Cl)c1c(Br)co2\t459.07\n4\tc12c(F)ccc(Cl)c1c(F)co2\t461.46\n5\tc12c(Br)ccc(F)c1c(Cl)co2\t373.56\n6\tc12c(F)ccc(Cl)c1c(Br)co2\t433.21\n\nUnknown molecule: c12c(F)ccc(F)c1c(F)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 396, "answer_format": "float", "answer_range": "(389.21, 402.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "3bdf95bd-7ead-4bfe-9136-74e63990af99", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 11, "noise_variance": 3, "answer": 517, "answer_confidence_interval": "(510.21, 523.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 0, 1, 0, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0]]), 'b': array([529.54, 484.7 , 502.45, 557.  , 570.65, 468.37, 514.72]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cccc(Cl)c1c(Br)c(F)o2", "score": 529.54, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 180, "2": 181, "3": 171}}, {"smiles": "c12cccc(Cl)c1c(F)c(Br)o2", "score": 484.7, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 180, "2": 98, "3": 207}}, {"smiles": "c12cccc(Br)c1c(F)c(Br)o2", "score": 502.45, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 200, "2": 98, "3": 207}}, {"smiles": "c12cccc(F)c1c(Br)c(Cl)o2", "score": 557.0, "attachments": {"1": "*F", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 165, "2": 181, "3": 211}}, {"smiles": "c12cccc(Cl)c1c(Br)c(Cl)o2", "score": 570.65, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 180, "2": 181, "3": 211}}, {"smiles": "c12cccc(Br)c1c(Cl)c(F)o2", "score": 468.37, "attachments": {"1": "*Br", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 200, "2": 97, "3": 171}}, {"smiles": "c12cccc(Br)c1c(F)c(Cl)o2", "score": 514.72, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 200, "2": 98, "3": 211}}], "unknown_molecule_details": {"smiles": "c12cccc(F)c1c(Br)c(F)o2", "score": 517, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 165, "2": 181, "3": 171}}, "rgroup_scores": "{1: {'*F': 165, '*Cl': 180, '*Br': 200}, 2: {'*F': 98, '*Cl': 97, '*Br': 181}, 3: {'*F': 171, '*Cl': 211, '*Br': 207}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cccc(Cl)c1c(Br)c(F)o2\t529.54\n1\tc12cccc(Cl)c1c(F)c(Br)o2\t484.7\n2\tc12cccc(Br)c1c(F)c(Br)o2\t502.45\n3\tc12cccc(F)c1c(Br)c(Cl)o2\t557.0\n4\tc12cccc(Cl)c1c(Br)c(Cl)o2\t570.65\n5\tc12cccc(Br)c1c(Cl)c(F)o2\t468.37\n6\tc12cccc(Br)c1c(F)c(Cl)o2\t514.72\n\nUnknown molecule: c12cccc(F)c1c(Br)c(F)o2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cccc(Cl)c1c(Br)c(F)o2\t529.54\n1\tc12cccc(Cl)c1c(F)c(Br)o2\t484.7\n2\tc12cccc(Br)c1c(F)c(Br)o2\t502.45\n3\tc12cccc(F)c1c(Br)c(Cl)o2\t557.0\n4\tc12cccc(Cl)c1c(Br)c(Cl)o2\t570.65\n5\tc12cccc(Br)c1c(Cl)c(F)o2\t468.37\n6\tc12cccc(Br)c1c(F)c(Cl)o2\t514.72\n\nUnknown molecule: c12cccc(F)c1c(Br)c(F)o2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 517, "answer_format": "float", "answer_range": "(510.21, 523.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "16329997-709f-4cb7-a706-13c740a78a78", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 12, "noise_variance": 3, "answer": 457, "answer_confidence_interval": "(448.68, 465.32)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 0, 1, 0, 0, 1]]), 'b': array([534.8 , 486.72, 338.17, 423.43, 433.08, 412.38, 432.34]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(Cl)c(Cl)c1c(F)co2", "score": 534.8, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 147, "2": 173, "3": 214}}, {"smiles": "c12ccc(Cl)c(Cl)c1c(Cl)co2", "score": 486.72, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 147, "2": 173, "3": 167}}, {"smiles": "c12ccc(Br)c(Br)c1c(Cl)co2", "score": 338.17, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 52, "2": 120, "3": 167}}, {"smiles": "c12ccc(Br)c(F)c1c(Br)co2", "score": 423.43, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 52, "2": 145, "3": 226}}, {"smiles": "c12ccc(Cl)c(Br)c1c(Cl)co2", "score": 433.08, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 147, "2": 120, "3": 167}}, {"smiles": "c12ccc(Br)c(F)c1c(F)co2", "score": 412.38, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 52, "2": 145, "3": 214}}, {"smiles": "c12ccc(F)c(Br)c1c(Br)co2", "score": 432.34, "attachments": {"1": "*F", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 86, "2": 120, "3": 226}}], "unknown_molecule_details": {"smiles": "c12ccc(F)c(F)c1c(Br)co2", "score": 457, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 86, "2": 145, "3": 226}}, "rgroup_scores": "{1: {'*F': 86, '*Cl': 147, '*Br': 52}, 2: {'*F': 145, '*Cl': 173, '*Br': 120}, 3: {'*F': 214, '*Cl': 167, '*Br': 226}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Cl)c(Cl)c1c(F)co2\t534.8\n1\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t486.72\n2\tc12ccc(Br)c(Br)c1c(Cl)co2\t338.17\n3\tc12ccc(Br)c(F)c1c(Br)co2\t423.43\n4\tc12ccc(Cl)c(Br)c1c(Cl)co2\t433.08\n5\tc12ccc(Br)c(F)c1c(F)co2\t412.38\n6\tc12ccc(F)c(Br)c1c(Br)co2\t432.34\n\nUnknown molecule: c12ccc(F)c(F)c1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(Cl)c(Cl)c1c(F)co2\t534.8\n1\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t486.72\n2\tc12ccc(Br)c(Br)c1c(Cl)co2\t338.17\n3\tc12ccc(Br)c(F)c1c(Br)co2\t423.43\n4\tc12ccc(Cl)c(Br)c1c(Cl)co2\t433.08\n5\tc12ccc(Br)c(F)c1c(F)co2\t412.38\n6\tc12ccc(F)c(Br)c1c(Br)co2\t432.34\n\nUnknown molecule: c12ccc(F)c(F)c1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 457, "answer_format": "float", "answer_range": "(448.68, 465.32)", "verification_method": "range", "ChemIQ": true}
{"uuid": "2186cb26-2f46-4b0e-b464-9ebb4a428183", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 13, "noise_variance": 3, "answer": 544, "answer_confidence_interval": "(530.42, 557.58)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1]]), 'b': array([407.89, 422.41, 292.1 , 558.68, 397.97, 529.62, 278.85]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12cc(F)c(Cl)cc1cc(Br)o2", "score": 407.89, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 216, "2": 107, "3": 83}}, {"smiles": "c12cc(Br)c(Cl)cc1cc(Cl)o2", "score": 422.41, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 220, "2": 107, "3": 97}}, {"smiles": "c12cc(Cl)c(F)cc1cc(Cl)o2", "score": 292.1, "attachments": {"1": "*Cl", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 109, "2": 87, "3": 97}}, {"smiles": "c12cc(F)c(Cl)cc1cc(F)o2", "score": 558.68, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 216, "2": 107, "3": 237}}, {"smiles": "c12cc(F)c(F)cc1cc(Cl)o2", "score": 397.97, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 216, "2": 87, "3": 97}}, {"smiles": "c12cc(Br)c(Br)cc1cc(Cl)o2", "score": 529.62, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 220, "2": 214, "3": 97}}, {"smiles": "c12cc(Cl)c(F)cc1cc(Br)o2", "score": 278.85, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 109, "2": 87, "3": 83}}], "unknown_molecule_details": {"smiles": "c12cc(Br)c(F)cc1cc(F)o2", "score": 544, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 220, "2": 87, "3": 237}}, "rgroup_scores": "{1: {'*F': 216, '*Cl': 109, '*Br': 220}, 2: {'*F': 87, '*Cl': 107, '*Br': 214}, 3: {'*F': 237, '*Cl': 97, '*Br': 83}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(F)c(Cl)cc1cc(Br)o2\t407.89\n1\tc12cc(Br)c(Cl)cc1cc(Cl)o2\t422.41\n2\tc12cc(Cl)c(F)cc1cc(Cl)o2\t292.1\n3\tc12cc(F)c(Cl)cc1cc(F)o2\t558.68\n4\tc12cc(F)c(F)cc1cc(Cl)o2\t397.97\n5\tc12cc(Br)c(Br)cc1cc(Cl)o2\t529.62\n6\tc12cc(Cl)c(F)cc1cc(Br)o2\t278.85\n\nUnknown molecule: c12cc(Br)c(F)cc1cc(F)o2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12cc(F)c(Cl)cc1cc(Br)o2\t407.89\n1\tc12cc(Br)c(Cl)cc1cc(Cl)o2\t422.41\n2\tc12cc(Cl)c(F)cc1cc(Cl)o2\t292.1\n3\tc12cc(F)c(Cl)cc1cc(F)o2\t558.68\n4\tc12cc(F)c(F)cc1cc(Cl)o2\t397.97\n5\tc12cc(Br)c(Br)cc1cc(Cl)o2\t529.62\n6\tc12cc(Cl)c(F)cc1cc(Br)o2\t278.85\n\nUnknown molecule: c12cc(Br)c(F)cc1cc(F)o2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 544, "answer_format": "float", "answer_range": "(530.42, 557.58)", "verification_method": "range", "ChemIQ": true}
{"uuid": "7562d037-ffdc-4c99-9ed8-e0f393722a6c", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 14, "noise_variance": 3, "answer": 483, "answer_confidence_interval": "(472.26, 493.74)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0]]), 'b': array([367.35, 521.59, 400.66, 583.01, 468.8 , 640.89, 409.84]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Br)c(F)ccc1c(Br)co2", "score": 367.35, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 115, "2": 124, "3": 127}}, {"smiles": "c12c(Br)c(Cl)ccc1c(Cl)co2", "score": 521.59, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 115, "2": 237, "3": 165}}, {"smiles": "c12c(F)c(Br)ccc1c(F)co2", "score": 400.66, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 119, "2": 68, "3": 218}}, {"smiles": "c12c(Cl)c(F)ccc1c(F)co2", "score": 583.01, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 238, "2": 124, "3": 218}}, {"smiles": "c12c(Cl)c(Br)ccc1c(Cl)co2", "score": 468.8, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 238, "2": 68, "3": 165}}, {"smiles": "c12c(Cl)c(Cl)ccc1c(Cl)co2", "score": 640.89, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 238, "2": 237, "3": 165}}, {"smiles": "c12c(F)c(F)ccc1c(Cl)co2", "score": 409.84, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 119, "2": 124, "3": 165}}], "unknown_molecule_details": {"smiles": "c12c(F)c(Cl)ccc1c(Br)co2", "score": 483, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 119, "2": 237, "3": 127}}, "rgroup_scores": "{1: {'*F': 119, '*Cl': 238, '*Br': 115}, 2: {'*F': 124, '*Cl': 237, '*Br': 68}, 3: {'*F': 218, '*Cl': 165, '*Br': 127}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(F)ccc1c(Br)co2\t367.35\n1\tc12c(Br)c(Cl)ccc1c(Cl)co2\t521.59\n2\tc12c(F)c(Br)ccc1c(F)co2\t400.66\n3\tc12c(Cl)c(F)ccc1c(F)co2\t583.01\n4\tc12c(Cl)c(Br)ccc1c(Cl)co2\t468.8\n5\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t640.89\n6\tc12c(F)c(F)ccc1c(Cl)co2\t409.84\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Br)c(F)ccc1c(Br)co2\t367.35\n1\tc12c(Br)c(Cl)ccc1c(Cl)co2\t521.59\n2\tc12c(F)c(Br)ccc1c(F)co2\t400.66\n3\tc12c(Cl)c(F)ccc1c(F)co2\t583.01\n4\tc12c(Cl)c(Br)ccc1c(Cl)co2\t468.8\n5\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t640.89\n6\tc12c(F)c(F)ccc1c(Cl)co2\t409.84\n\nUnknown molecule: c12c(F)c(Cl)ccc1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 483, "answer_format": "float", "answer_range": "(472.26, 493.74)", "verification_method": "range", "ChemIQ": true}
{"uuid": "a63ede84-f156-4ed6-90e4-e97e76002a09", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 15, "noise_variance": 3, "answer": 425, "answer_confidence_interval": "(418.21, 431.79)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [0, 1, 0, 1, 0, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1]]), 'b': array([263.6 , 298.56, 380.35, 477.22, 285.53, 398.89, 313.01]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)c(F)ccc1c(Br)co2", "score": 263.6, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 90, "2": 64, "3": 111}}, {"smiles": "c12c(F)c(F)ccc1c(Cl)co2", "score": 298.56, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 90, "2": 64, "3": 144}}, {"smiles": "c12c(F)c(F)ccc1c(F)co2", "score": 380.35, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 90, "2": 64, "3": 227}}, {"smiles": "c12c(Cl)c(Cl)ccc1c(Cl)co2", "score": 477.22, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 111, "2": 224, "3": 144}}, {"smiles": "c12c(Br)c(Br)ccc1c(Cl)co2", "score": 285.53, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 54, "2": 87, "3": 144}}, {"smiles": "c12c(Cl)c(F)ccc1c(F)co2", "score": 398.89, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 64, "3": 227}}, {"smiles": "c12c(Cl)c(Br)ccc1c(Br)co2", "score": 313.01, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 111, "2": 87, "3": 111}}], "unknown_molecule_details": {"smiles": "c12c(Cl)c(Br)ccc1c(F)co2", "score": 425, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 87, "3": 227}}, "rgroup_scores": "{1: {'*F': 90, '*Cl': 111, '*Br': 54}, 2: {'*F': 64, '*Cl': 224, '*Br': 87}, 3: {'*F': 227, '*Cl': 144, '*Br': 111}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t263.6\n1\tc12c(F)c(F)ccc1c(Cl)co2\t298.56\n2\tc12c(F)c(F)ccc1c(F)co2\t380.35\n3\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t477.22\n4\tc12c(Br)c(Br)ccc1c(Cl)co2\t285.53\n5\tc12c(Cl)c(F)ccc1c(F)co2\t398.89\n6\tc12c(Cl)c(Br)ccc1c(Br)co2\t313.01\n\nUnknown molecule: c12c(Cl)c(Br)ccc1c(F)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(F)ccc1c(Br)co2\t263.6\n1\tc12c(F)c(F)ccc1c(Cl)co2\t298.56\n2\tc12c(F)c(F)ccc1c(F)co2\t380.35\n3\tc12c(Cl)c(Cl)ccc1c(Cl)co2\t477.22\n4\tc12c(Br)c(Br)ccc1c(Cl)co2\t285.53\n5\tc12c(Cl)c(F)ccc1c(F)co2\t398.89\n6\tc12c(Cl)c(Br)ccc1c(Br)co2\t313.01\n\nUnknown molecule: c12c(Cl)c(Br)ccc1c(F)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 425, "answer_format": "float", "answer_range": "(418.21, 431.79)", "verification_method": "range", "ChemIQ": true}
{"uuid": "500b6d5d-8795-492a-80b3-3c2620d324fe", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 16, "noise_variance": 3, "answer": 436, "answer_confidence_interval": "(424.24, 447.76)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([493.84, 394.05, 516.95, 440.48, 286.37, 500.7 , 527.86]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(F)c(Br)c1c(F)co2", "score": 493.84, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 122, "2": 154, "3": 218}}, {"smiles": "c12ccc(F)c(Cl)c1c(F)co2", "score": 394.05, "attachments": {"1": "*F", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 122, "2": 51, "3": 218}}, {"smiles": "c12ccc(F)c(F)c1c(Cl)co2", "score": 516.95, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 122, "2": 164, "3": 232}}, {"smiles": "c12ccc(Cl)c(Cl)c1c(Cl)co2", "score": 440.48, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 156, "2": 51, "3": 232}}, {"smiles": "c12ccc(F)c(Cl)c1c(Br)co2", "score": 286.37, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 122, "2": 51, "3": 116}}, {"smiles": "c12ccc(Br)c(F)c1c(Cl)co2", "score": 500.7, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 108, "2": 164, "3": 232}}, {"smiles": "c12ccc(Cl)c(Br)c1c(F)co2", "score": 527.86, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 156, "2": 154, "3": 218}}], "unknown_molecule_details": {"smiles": "c12ccc(Cl)c(F)c1c(Br)co2", "score": 436, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 156, "2": 164, "3": 116}}, "rgroup_scores": "{1: {'*F': 122, '*Cl': 156, '*Br': 108}, 2: {'*F': 164, '*Cl': 51, '*Br': 154}, 3: {'*F': 218, '*Cl': 232, '*Br': 116}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t493.84\n1\tc12ccc(F)c(Cl)c1c(F)co2\t394.05\n2\tc12ccc(F)c(F)c1c(Cl)co2\t516.95\n3\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t440.48\n4\tc12ccc(F)c(Cl)c1c(Br)co2\t286.37\n5\tc12ccc(Br)c(F)c1c(Cl)co2\t500.7\n6\tc12ccc(Cl)c(Br)c1c(F)co2\t527.86\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t493.84\n1\tc12ccc(F)c(Cl)c1c(F)co2\t394.05\n2\tc12ccc(F)c(F)c1c(Cl)co2\t516.95\n3\tc12ccc(Cl)c(Cl)c1c(Cl)co2\t440.48\n4\tc12ccc(F)c(Cl)c1c(Br)co2\t286.37\n5\tc12ccc(Br)c(F)c1c(Cl)co2\t500.7\n6\tc12ccc(Cl)c(Br)c1c(F)co2\t527.86\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(Br)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 436, "answer_format": "float", "answer_range": "(424.24, 447.76)", "verification_method": "range", "ChemIQ": true}
{"uuid": "aea7225e-372b-4a2a-8e2d-559a24801a53", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 17, "noise_variance": 3, "answer": 558, "answer_confidence_interval": "(549.68, 566.32)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 0, 1, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0]]), 'b': array([557.58, 460.84, 489.51, 510.19, 542.27, 492.43, 556.94]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12ccc(F)c(Br)c1c(F)co2", "score": 557.58, "attachments": {"1": "*F", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 143, "2": 230, "3": 188}}, {"smiles": "c12ccc(Br)c(F)c1c(Br)co2", "score": 460.84, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 94, "2": 246, "3": 121}}, {"smiles": "c12ccc(Cl)c(F)c1c(Br)co2", "score": 489.51, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 124, "2": 246, "3": 121}}, {"smiles": "c12ccc(Br)c(Br)c1c(F)co2", "score": 510.19, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 94, "2": 230, "3": 188}}, {"smiles": "c12ccc(Br)c(Br)c1c(Cl)co2", "score": 542.27, "attachments": {"1": "*Br", "2": "*Br", "3": "*Cl"}, "rgroup_score_mapping": {"1": 94, "2": 230, "3": 219}}, {"smiles": "c12ccc(F)c(Cl)c1c(Br)co2", "score": 492.43, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 143, "2": 230, "3": 121}}, {"smiles": "c12ccc(Br)c(F)c1c(Cl)co2", "score": 556.94, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 94, "2": 246, "3": 219}}], "unknown_molecule_details": {"smiles": "c12ccc(Cl)c(F)c1c(F)co2", "score": 558, "attachments": {"1": "*Cl", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 124, "2": 246, "3": 188}}, "rgroup_scores": "{1: {'*F': 143, '*Cl': 124, '*Br': 94}, 2: {'*F': 246, '*Cl': 230, '*Br': 230}, 3: {'*F': 188, '*Cl': 219, '*Br': 121}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t557.58\n1\tc12ccc(Br)c(F)c1c(Br)co2\t460.84\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t489.51\n3\tc12ccc(Br)c(Br)c1c(F)co2\t510.19\n4\tc12ccc(Br)c(Br)c1c(Cl)co2\t542.27\n5\tc12ccc(F)c(Cl)c1c(Br)co2\t492.43\n6\tc12ccc(Br)c(F)c1c(Cl)co2\t556.94\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(F)co2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12ccc(F)c(Br)c1c(F)co2\t557.58\n1\tc12ccc(Br)c(F)c1c(Br)co2\t460.84\n2\tc12ccc(Cl)c(F)c1c(Br)co2\t489.51\n3\tc12ccc(Br)c(Br)c1c(F)co2\t510.19\n4\tc12ccc(Br)c(Br)c1c(Cl)co2\t542.27\n5\tc12ccc(F)c(Cl)c1c(Br)co2\t492.43\n6\tc12ccc(Br)c(F)c1c(Cl)co2\t556.94\n\nUnknown molecule: c12ccc(Cl)c(F)c1c(F)co2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 558, "answer_format": "float", "answer_range": "(549.68, 566.32)", "verification_method": "range", "ChemIQ": true}
{"uuid": "7fe9fce5-dcd0-4025-994b-38504347d9ed", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 18, "noise_variance": 3, "answer": 400, "answer_confidence_interval": "(390.4, 409.6)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[1, 0, 0, 0, 1, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 0, 1, 0],\n       [1, 0, 0, 1, 0, 0, 1, 0, 0],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0],\n       [1, 0, 0, 1, 0, 0, 0, 0, 1],\n       [0, 1, 0, 0, 1, 0, 1, 0, 0],\n       [0, 1, 0, 0, 0, 1, 1, 0, 0]]), 'b': array([517.52, 484.74, 403.74, 371.45, 431.81, 416.46, 382.14]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(F)c(Cl)cc(Cl)c1cco2", "score": 517.52, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 135, "2": 210, "3": 172}}, {"smiles": "c12c(F)c(F)cc(Cl)c1cco2", "score": 484.74, "attachments": {"1": "*F", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 135, "2": 175, "3": 172}}, {"smiles": "c12c(F)c(F)cc(F)c1cco2", "score": 403.74, "attachments": {"1": "*F", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 135, "2": 175, "3": 96}}, {"smiles": "c12c(Br)c(Br)cc(F)c1cco2", "score": 371.45, "attachments": {"1": "*Br", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 100, "2": 176, "3": 96}}, {"smiles": "c12c(F)c(F)cc(Br)c1cco2", "score": 431.81, "attachments": {"1": "*F", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 135, "2": 175, "3": 125}}, {"smiles": "c12c(Cl)c(Cl)cc(F)c1cco2", "score": 416.46, "attachments": {"1": "*Cl", "2": "*Cl", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 210, "3": 96}}, {"smiles": "c12c(Cl)c(Br)cc(F)c1cco2", "score": 382.14, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 111, "2": 176, "3": 96}}], "unknown_molecule_details": {"smiles": "c12c(Br)c(F)cc(Br)c1cco2", "score": 400, "attachments": {"1": "*Br", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 100, "2": 175, "3": 125}}, "rgroup_scores": "{1: {'*F': 135, '*Cl': 111, '*Br': 100}, 2: {'*F': 175, '*Cl': 210, '*Br': 176}, 3: {'*F': 96, '*Cl': 172, '*Br': 125}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(Cl)cc(Cl)c1cco2\t517.52\n1\tc12c(F)c(F)cc(Cl)c1cco2\t484.74\n2\tc12c(F)c(F)cc(F)c1cco2\t403.74\n3\tc12c(Br)c(Br)cc(F)c1cco2\t371.45\n4\tc12c(F)c(F)cc(Br)c1cco2\t431.81\n5\tc12c(Cl)c(Cl)cc(F)c1cco2\t416.46\n6\tc12c(Cl)c(Br)cc(F)c1cco2\t382.14\n\nUnknown molecule: c12c(Br)c(F)cc(Br)c1cco2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(F)c(Cl)cc(Cl)c1cco2\t517.52\n1\tc12c(F)c(F)cc(Cl)c1cco2\t484.74\n2\tc12c(F)c(F)cc(F)c1cco2\t403.74\n3\tc12c(Br)c(Br)cc(F)c1cco2\t371.45\n4\tc12c(F)c(F)cc(Br)c1cco2\t431.81\n5\tc12c(Cl)c(Cl)cc(F)c1cco2\t416.46\n6\tc12c(Cl)c(Br)cc(F)c1cco2\t382.14\n\nUnknown molecule: c12c(Br)c(F)cc(Br)c1cco2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 400, "answer_format": "float", "answer_range": "(390.4, 409.6)", "verification_method": "range", "ChemIQ": true}
{"uuid": "fc410edd-e3ee-4946-b9f1-dc6f7597c560", "question_category": "sar", "sub_category": "noise", "meta_data": {"iteration": 19, "noise_variance": 3, "answer": 452, "answer_confidence_interval": "(443.68, 460.32)", "system": "{'variables': [(1, '*F'), (1, '*Cl'), (1, '*Br'), (2, '*F'), (2, '*Cl'), (2, '*Br'), (3, '*F'), (3, '*Cl'), (3, '*Br')], 'A': array([[0, 1, 0, 0, 0, 1, 1, 0, 0],\n       [0, 0, 1, 1, 0, 0, 0, 1, 0],\n       [0, 0, 1, 1, 0, 0, 1, 0, 0],\n       [1, 0, 0, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 0, 0, 1, 0, 0, 1],\n       [0, 0, 1, 0, 1, 0, 0, 0, 1],\n       [0, 1, 0, 1, 0, 0, 0, 0, 1]]), 'b': array([423.2 , 373.78, 489.82, 565.33, 428.12, 532.85, 441.23]), 'rank': 7}", "provided_molecules_details": [{"smiles": "c12c(Cl)cccc1c(Br)c(F)o2", "score": 423.2, "attachments": {"1": "*Cl", "2": "*Br", "3": "*F"}, "rgroup_score_mapping": {"1": 101, "2": 124, "3": 199}}, {"smiles": "c12c(Br)cccc1c(F)c(Cl)o2", "score": 373.78, "attachments": {"1": "*Br", "2": "*F", "3": "*Cl"}, "rgroup_score_mapping": {"1": 150, "2": 138, "3": 87}}, {"smiles": "c12c(Br)cccc1c(F)c(F)o2", "score": 489.82, "attachments": {"1": "*Br", "2": "*F", "3": "*F"}, "rgroup_score_mapping": {"1": 150, "2": 138, "3": 199}}, {"smiles": "c12c(F)cccc1c(Cl)c(Br)o2", "score": 565.33, "attachments": {"1": "*F", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 180, "2": 185, "3": 202}}, {"smiles": "c12c(Cl)cccc1c(Br)c(Br)o2", "score": 428.12, "attachments": {"1": "*Cl", "2": "*Br", "3": "*Br"}, "rgroup_score_mapping": {"1": 101, "2": 124, "3": 202}}, {"smiles": "c12c(Br)cccc1c(Cl)c(Br)o2", "score": 532.85, "attachments": {"1": "*Br", "2": "*Cl", "3": "*Br"}, "rgroup_score_mapping": {"1": 150, "2": 185, "3": 202}}, {"smiles": "c12c(Cl)cccc1c(F)c(Br)o2", "score": 441.23, "attachments": {"1": "*Cl", "2": "*F", "3": "*Br"}, "rgroup_score_mapping": {"1": 101, "2": 138, "3": 202}}], "unknown_molecule_details": {"smiles": "c12c(F)cccc1c(Cl)c(Cl)o2", "score": 452, "attachments": {"1": "*F", "2": "*Cl", "3": "*Cl"}, "rgroup_score_mapping": {"1": 180, "2": 185, "3": 87}}, "rgroup_scores": "{1: {'*F': 180, '*Cl': 101, '*Br': 150}, 2: {'*F': 138, '*Cl': 185, '*Br': 124}, 3: {'*F': 199, '*Cl': 87, '*Br': 202}}", "core_molecule_smi": "c12ccccc1C=CO2", "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Cl)cccc1c(Br)c(F)o2\t423.2\n1\tc12c(Br)cccc1c(F)c(Cl)o2\t373.78\n2\tc12c(Br)cccc1c(F)c(F)o2\t489.82\n3\tc12c(F)cccc1c(Cl)c(Br)o2\t565.33\n4\tc12c(Cl)cccc1c(Br)c(Br)o2\t428.12\n5\tc12c(Br)cccc1c(Cl)c(Br)o2\t532.85\n6\tc12c(Cl)cccc1c(F)c(Br)o2\t441.23\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(Cl)o2\n\nWrite your answer as a real number only. Do not write any comments."}, "prompt": "Determine the score of the unknown molecule.\n\nIndex\tSMILES\t\tScore\n0\tc12c(Cl)cccc1c(Br)c(F)o2\t423.2\n1\tc12c(Br)cccc1c(F)c(Cl)o2\t373.78\n2\tc12c(Br)cccc1c(F)c(F)o2\t489.82\n3\tc12c(F)cccc1c(Cl)c(Br)o2\t565.33\n4\tc12c(Cl)cccc1c(Br)c(Br)o2\t428.12\n5\tc12c(Br)cccc1c(Cl)c(Br)o2\t532.85\n6\tc12c(Cl)cccc1c(F)c(Br)o2\t441.23\n\nUnknown molecule: c12c(F)cccc1c(Cl)c(Cl)o2\n\nWrite your answer as a real number only. Do not write any comments.", "answer": 452, "answer_format": "float", "answer_range": "(443.68, 460.32)", "verification_method": "range", "ChemIQ": true}
{"uuid": "253fa07f-4573-4876-9d37-cf523a7c556b", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Amide-coupling", "reactant_1": "CCC(=O)O", "reactant_2": "CCCN", "product": "CCCNC(=O)CC", "reactant_1_random": "OC(=O)CC", "reactant_2_random": "C(N)CC", "product_random": "CCC(=O)NCCC"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nOC(=O)CC\n+\nC(N)CC\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCNC(=O)CC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "2b75b858-e4cf-49e5-9ac2-65757da7ca22", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)C1CCOC1", "reactant_2": "Nc1ccccn1", "product": "O=C(Nc1ccccn1)C1CCOC1", "reactant_1_random": "OC(C1COCC1)=O", "reactant_2_random": "c1nc(ccc1)N", "product_random": "c1(NC(=O)C2COCC2)ccccn1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nOC(C1COCC1)=O\n+\nc1nc(ccc1)N\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(Nc1ccccn1)C1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d66ed73f-c7df-41ac-8b83-428bec8c598e", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)c1ccncc1", "reactant_2": "NC1CCSC1", "product": "O=C(NC1CCSC1)c1ccncc1", "reactant_1_random": "n1ccc(C(O)=O)cc1", "reactant_2_random": "C1CSCC1N", "product_random": "n1ccc(C(NC2CCSC2)=O)cc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nn1ccc(C(O)=O)cc1\n+\nC1CSCC1N\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(NC1CCSC1)c1ccncc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "2ec29e13-f31a-4b2b-bcef-7ab9911dc1cc", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)c1ccccn1", "reactant_2": "NC1CC1", "product": "O=C(NC1CC1)c1ccccn1", "reactant_1_random": "c1(C(O)=O)ncccc1", "reactant_2_random": "NC1CC1", "product_random": "C1C(NC(c2ccccn2)=O)C1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nc1(C(O)=O)ncccc1\n+\nNC1CC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(NC1CC1)c1ccccn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "aa1407b6-0e5f-42a6-a864-18548e2fb966", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)C1CCC1", "reactant_2": "NC1CSC1", "product": "O=C(NC1CSC1)C1CCC1", "reactant_1_random": "OC(=O)C1CCC1", "reactant_2_random": "S1CC(C1)N", "product_random": "C1C(C(NC2CSC2)=O)CC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nOC(=O)C1CCC1\n+\nS1CC(C1)N\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(NC1CSC1)C1CCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "009de2eb-40d4-4e7d-b188-9288a4f47365", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=Nc1ccccc1", "reactant_2": "C#CCCCl", "product": "ClCCc1cn(-c2ccccc2)nn1", "reactant_1_random": "[Cu+].c1cccc(c1)N=[N+]=[N-]", "reactant_2_random": "C(C#C)CCl", "product_random": "c1cccc(c1)-n1cc(nn1)CCCl"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].c1cccc(c1)N=[N+]=[N-]\n+\nC(C#C)CCl\n\nOnly write the SMILES string. Do not write any comments.", "answer": "ClCCc1cn(-c2ccccc2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "bd82382b-e4fd-4250-b8b2-5107fc87ee77", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NCCCl", "reactant_2": "C#Cc1cccnc1", "product": "ClCCn1cc(-c2cccnc2)nn1", "reactant_1_random": "C(CCl)N=[N+]=[N-].[Cu+]", "reactant_2_random": "c1c(C#C)cccn1", "product_random": "c1(nnn(c1)CCCl)-c1cnccc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC(CCl)N=[N+]=[N-].[Cu+]\n+\nc1c(C#C)cccn1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "ClCCn1cc(-c2cccnc2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "11ac781c-f8d6-452f-9caa-c1778eda591c", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NC1CCCC1", "reactant_2": "C#CC1CCC1", "product": "c1c(C2CCC2)nnn1C1CCCC1", "reactant_1_random": "[Cu+].[N-]=[N+]=NC1CCCC1", "reactant_2_random": "C1CC(C1)C#C", "product_random": "C1CCCC1n1cc(nn1)C1CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].[N-]=[N+]=NC1CCCC1\n+\nC1CC(C1)C#C\n\nOnly write the SMILES string. Do not write any comments.", "answer": "c1c(C2CCC2)nnn1C1CCCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "5131ffc4-3b4c-4076-b61b-423365352326", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NC1CCC1", "reactant_2": "C#CCCC", "product": "CCCc1cn(C2CCC2)nn1", "reactant_1_random": "[Cu+].[N+](=NC1CCC1)=[N-]", "reactant_2_random": "C#CCCC", "product_random": "C1C(n2nnc(c2)CCC)CC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].[N+](=NC1CCC1)=[N-]\n+\nC#CCCC\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCc1cn(C2CCC2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "6251d1a9-beff-4336-bec5-e0343b9377a3", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NC(F)(F)F", "reactant_2": "C#CC1CSC1", "product": "FC(F)(F)n1cc(C2CSC2)nn1", "reactant_1_random": "C(N=[N+]=[N-])(F)(F)F.[Cu+]", "reactant_2_random": "C1SCC1C#C", "product_random": "FC(n1nnc(c1)C1CSC1)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC(N=[N+]=[N-])(F)(F)F.[Cu+]\n+\nC1SCC1C#C\n\nOnly write the SMILES string. Do not write any comments.", "answer": "FC(F)(F)n1cc(C2CSC2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "b1c9dc8a-b9a0-499f-96f7-e6c034bc56ca", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)CCC", "reactant_2": "[Li]CC", "product": "C=CC(O)(CC)CCC", "reactant_1_random": "O=C(CCC)C=C", "reactant_2_random": "CC[Li]", "product_random": "CCC(CCC)(C=C)O"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(CCC)C=C\n+\nCC[Li]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(CC)CCC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "37a9dc9d-79d7-4fe4-869f-e75f61a17e67", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)c1ccccc1", "reactant_2": "[Li]C1CCCCC1", "product": "C=CC(O)(c1ccccc1)C1CCCCC1", "reactant_1_random": "c1c(cccc1)C(C=C)=O", "reactant_2_random": "[Li]C1CCCCC1", "product_random": "C(O)(C=C)(c1ccccc1)C1CCCCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nc1c(cccc1)C(C=C)=O\n+\n[Li]C1CCCCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(c1ccccc1)C1CCCCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "964930bc-b091-42da-ad81-b4a9f776e420", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)CC", "reactant_2": "[Li]C(F)(F)F", "product": "C=CC(O)(CC)C(F)(F)F", "reactant_1_random": "C(=C)C(=O)CC", "reactant_2_random": "FC(F)([Li])F", "product_random": "FC(F)(F)C(C=C)(CC)O"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC(=C)C(=O)CC\n+\nFC(F)([Li])F\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(CC)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e2c864f6-84db-4756-931c-13708f437bcb", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)C(F)(F)F", "reactant_2": "[Li]C1CCC1", "product": "C=CC(O)(C1CCC1)C(F)(F)F", "reactant_1_random": "C(C=C)(=O)C(F)(F)F", "reactant_2_random": "C1(CCC1)[Li]", "product_random": "FC(C(C=C)(C1CCC1)O)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC(C=C)(=O)C(F)(F)F\n+\nC1(CCC1)[Li]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(C1CCC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "7f29fa6f-1fba-43e7-99da-b540b332d0db", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)C(F)(F)F", "reactant_2": "[Li]C1COC1", "product": "C=CC(O)(C1COC1)C(F)(F)F", "reactant_1_random": "FC(F)(F)C(=O)C=C", "reactant_2_random": "C1OCC1[Li]", "product_random": "FC(F)(C(C1COC1)(C=C)O)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nFC(F)(F)C(=O)C=C\n+\nC1OCC1[Li]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(C1COC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "eb127089-6a22-474c-9795-39abda8559c5", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)C1COC1", "reactant_2": "SC1CCC1", "product": "O=C(CCSC1CCC1)C1COC1", "reactant_1_random": "C1C(C(C=C)=O)CO1", "reactant_2_random": "C1CCC1S", "product_random": "C(C(=O)C1COC1)CSC1CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC1C(C(C=C)=O)CO1\n+\nC1CCC1S\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSC1CCC1)C1COC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "0cb20456-b4c5-4d70-92fb-ab39ca15a870", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)C(F)(F)F", "reactant_2": "SC1CCSC1", "product": "O=C(CCSC1CCSC1)C(F)(F)F", "reactant_1_random": "FC(C(C=C)=O)(F)F", "reactant_2_random": "SC1CSCC1", "product_random": "C1(SCCC(C(F)(F)F)=O)CCSC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nFC(C(C=C)=O)(F)F\n+\nSC1CSCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSC1CCSC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "af196966-cdf9-4e9f-ba2d-b3825ab08bcb", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)c1cccnc1", "reactant_2": "FC(F)(F)S", "product": "O=C(CCSC(F)(F)F)c1cccnc1", "reactant_1_random": "n1cccc(C(C=C)=O)c1", "reactant_2_random": "FC(F)(S)F", "product_random": "C(CC(c1cnccc1)=O)SC(F)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nn1cccc(C(C=C)=O)c1\n+\nFC(F)(S)F\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSC(F)(F)F)c1cccnc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "85511af3-9c9c-4f74-9c8c-a09282e0de8f", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)c1cccnc1", "reactant_2": "FCCS", "product": "O=C(CCSCCF)c1cccnc1", "reactant_1_random": "C=CC(c1cnccc1)=O", "reactant_2_random": "C(F)CS", "product_random": "C(SCCC(c1cccnc1)=O)CF"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(c1cnccc1)=O\n+\nC(F)CS\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSCCF)c1cccnc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "bb6cd64c-2979-40ca-8a8d-33dbb405ecca", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)C1CC1", "reactant_2": "FCCS", "product": "O=C(CCSCCF)C1CC1", "reactant_1_random": "C=CC(=O)C1CC1", "reactant_2_random": "SCCF", "product_random": "C(CSCCC(=O)C1CC1)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)C1CC1\n+\nSCCF\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSCCF)C1CC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e2470402-2777-4ae7-88ec-6f7c8c84d0b5", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Mizoroki-Heck", "reactant_1": "Brc1cc(C2CCCCC2)c(-c2cccnc2)cc1C1CCSC1.[Pd]", "reactant_2": "C=CC1CCC1", "product": "C(=CC1CCC1)c1cc(C2CCCCC2)c(-c2cccnc2)cc1C1CCSC1", "reactant_1_random": "[Pd].c1cc(cnc1)-c1c(cc(c(c1)C1CCSC1)Br)C1CCCCC1", "reactant_2_random": "C1CC(C1)C=C", "product_random": "c1ccc(-c2cc(C3CSCC3)c(cc2C2CCCCC2)C=CC2CCC2)cn1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Pd].c1cc(cnc1)-c1c(cc(c(c1)C1CCSC1)Br)C1CCCCC1\n+\nC1CC(C1)C=C\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C(=CC1CCC1)c1cc(C2CCCCC2)c(-c2cccnc2)cc1C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "be631ef3-d37d-403b-a998-c8f717b27992", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Mizoroki-Heck", "reactant_1": "CCCc1cc(C)c(Br)cc1CCF.[Pd]", "reactant_2": "C=CC1CSC1", "product": "CCCc1cc(C)c(C=CC2CSC2)cc1CCF", "reactant_1_random": "[Pd].c1c(CCF)c(CCC)cc(C)c1Br", "reactant_2_random": "C(=C)C1CSC1", "product_random": "FCCc1c(CCC)cc(C)c(C=CC2CSC2)c1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Pd].c1c(CCF)c(CCC)cc(C)c1Br\n+\nC(=C)C1CSC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCc1cc(C)c(C=CC2CSC2)cc1CCF", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f8720a5c-e326-41d0-b7e1-fb7d7392b34b", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Mizoroki-Heck", "reactant_1": "Cc1cc(-c2ccccn2)c(Br)cc1-c1ccncc1.[Pd]", "reactant_2": "C=Cc1cccnc1", "product": "Cc1cc(-c2ccccn2)c(C=Cc2cccnc2)cc1-c1ccncc1", "reactant_1_random": "[Pd].c1c(c(Br)cc(c1C)-c1ccncc1)-c1ncccc1", "reactant_2_random": "c1(C=C)cnccc1", "product_random": "c1c(nccc1)-c1c(C=Cc2cccnc2)cc(-c2ccncc2)c(c1)C"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Pd].c1c(c(Br)cc(c1C)-c1ccncc1)-c1ncccc1\n+\nc1(C=C)cnccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "Cc1cc(-c2ccccn2)c(C=Cc2cccnc2)cc1-c1ccncc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "8269aca8-0193-4f2c-bede-eb629ab80169", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Mizoroki-Heck", "reactant_1": "Brc1cc(C2CCOC2)c(-c2ccncc2)cc1C1CCSC1.[Pd]", "reactant_2": "C=CCCF", "product": "FCCC=Cc1cc(C2CCOC2)c(-c2ccncc2)cc1C1CCSC1", "reactant_1_random": "S1CC(c2cc(-c3ccncc3)c(cc2Br)C2CCOC2)CC1.[Pd]", "reactant_2_random": "FCCC=C", "product_random": "FCCC=Cc1c(C2CCSC2)cc(c(C2COCC2)c1)-c1ccncc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nS1CC(c2cc(-c3ccncc3)c(cc2Br)C2CCOC2)CC1.[Pd]\n+\nFCCC=C\n\nOnly write the SMILES string. Do not write any comments.", "answer": "FCCC=Cc1cc(C2CCOC2)c(-c2ccncc2)cc1C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e23510b3-495a-4a91-979c-a63fab5f0155", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Mizoroki-Heck", "reactant_1": "CCCc1cc(-c2ccccn2)c(CCCl)cc1Br.[Pd]", "reactant_2": "C=CC", "product": "CC=Cc1cc(CCCl)c(-c2ccccn2)cc1CCC", "reactant_1_random": "[Pd].c1ccc(-c2c(cc(Br)c(c2)CCC)CCCl)nc1", "reactant_2_random": "CC=C", "product_random": "C(Cc1c(cc(CCC)c(c1)C=CC)-c1ccccn1)Cl"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Pd].c1ccc(-c2c(cc(Br)c(c2)CCC)CCCl)nc1\n+\nCC=C\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC=Cc1cc(CCCl)c(-c2ccccn2)cc1CCC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "5127245f-5188-486d-8aee-b80fdffa07fe", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Simmons-Smith", "reactant_1": "CCCC(=C(C)C1CCSC1)C1COC1", "reactant_2": "ICI.[Cu][Zn]", "product": "CCCC1(C2COC2)CC1(C)C1CCSC1", "reactant_1_random": "O1CC(C1)C(=C(C)C1CSCC1)CCC", "reactant_2_random": "ICI.[Zn][Cu]", "product_random": "C1(CC1(C1COC1)CCC)(C)C1CCSC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO1CC(C1)C(=C(C)C1CSCC1)CCC\n+\nICI.[Zn][Cu]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCC1(C2COC2)CC1(C)C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "7359a8de-2e8b-4395-b44e-e7542224d314", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Simmons-Smith", "reactant_1": "CCCC(=C(CC)CCCl)C1CCC1", "reactant_2": "ICI.[Cu][Zn]", "product": "CCCC1(C2CCC2)CC1(CC)CCCl", "reactant_1_random": "C1CCC1C(CCC)=C(CC)CCCl", "reactant_2_random": "ICI.[Zn][Cu]", "product_random": "C1CC(C1)C1(C(CC)(CCCl)C1)CCC"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC1CCC1C(CCC)=C(CC)CCCl\n+\nICI.[Zn][Cu]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCC1(C2CCC2)CC1(CC)CCCl", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "257a734b-f26e-4e85-a913-0badeda1c41b", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Simmons-Smith", "reactant_1": "c1ccc(C(=C(c2ccccn2)C2CCOC2)C2COC2)cc1", "reactant_2": "ICI.[Cu][Zn]", "product": "c1ccc(C2(C3COC3)CC2(c2ccccn2)C2CCOC2)cc1", "reactant_1_random": "n1ccccc1C(C1COCC1)=C(c1ccccc1)C1COC1", "reactant_2_random": "C(I)I.[Cu][Zn]", "product_random": "c1cccc(C2(C3COC3)CC2(C2CCOC2)c2ccccn2)c1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nn1ccccc1C(C1COCC1)=C(c1ccccc1)C1COC1\n+\nC(I)I.[Cu][Zn]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "c1ccc(C2(C3COC3)CC2(c2ccccn2)C2CCOC2)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "12b97712-1f1d-4029-a220-4e1a1c28e374", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Simmons-Smith", "reactant_1": "CC(=C(C1CCCCC1)C1CSC1)c1ccccc1", "reactant_2": "ICI.[Cu][Zn]", "product": "CC1(c2ccccc2)CC1(C1CCCCC1)C1CSC1", "reactant_1_random": "C1C(C(=C(C)c2ccccc2)C2CSC2)CCCC1", "reactant_2_random": "C(I)I.[Cu][Zn]", "product_random": "C1CCCC(C1)C1(C(C1)(C)c1ccccc1)C1CSC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC1C(C(=C(C)c2ccccc2)C2CSC2)CCCC1\n+\nC(I)I.[Cu][Zn]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC1(c2ccccc2)CC1(C1CCCCC1)C1CSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "77473f6a-20b4-4899-accf-8c07b6099389", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Simmons-Smith", "reactant_1": "c1ccc(C(=C(c2ccncc2)C2CCSC2)C2CC2)nc1", "reactant_2": "ICI.[Cu][Zn]", "product": "c1ccc(C2(C3CC3)CC2(c2ccncc2)C2CCSC2)nc1", "reactant_1_random": "c1cnccc1C(C1CCSC1)=C(c1ccccn1)C1CC1", "reactant_2_random": "ICI.[Zn][Cu]", "product_random": "c1(ccccn1)C1(C2CC2)CC1(C1CSCC1)c1ccncc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nc1cnccc1C(C1CCSC1)=C(c1ccccn1)C1CC1\n+\nICI.[Zn][Cu]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "c1ccc(C2(C3CC3)CC2(c2ccncc2)C2CCSC2)nc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "50817555-da4a-4233-bcd9-fc099ec5eb43", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Sn2", "reactant_1": "FCCCBr", "reactant_2": "[OH-]", "product": "OCCCF", "reactant_1_random": "C(CCF)Br", "reactant_2_random": "[OH-]", "product_random": "C(CCO)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC(CCF)Br\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCCCF", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "9f3dc111-9989-4536-8d8d-282bf3d3b95e", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Sn2", "reactant_1": "BrCC1CCOC1", "reactant_2": "[OH-]", "product": "OCC1CCOC1", "reactant_1_random": "BrCC1CCOC1", "reactant_2_random": "[OH-]", "product_random": "C1C(CCO1)CO"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrCC1CCOC1\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCC1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "632e02fe-ec4b-4748-9113-2b5860846d55", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Sn2", "reactant_1": "BrCC1CSC1", "reactant_2": "[OH-]", "product": "OCC1CSC1", "reactant_1_random": "C(C1CSC1)Br", "reactant_2_random": "[OH-]", "product_random": "C1(CSC1)CO"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC(C1CSC1)Br\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCC1CSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a2b3fd81-494a-402b-9799-5ea597803ad4", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Sn2", "reactant_1": "CCCBr", "reactant_2": "[OH-]", "product": "CCCO", "reactant_1_random": "BrCCC", "reactant_2_random": "[OH-]", "product_random": "C(CC)O"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrCCC\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCO", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "bb3eadc9-dadc-4b47-8742-ba671c2369a4", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Sn2", "reactant_1": "BrCC1CCC1", "reactant_2": "[OH-]", "product": "OCC1CCC1", "reactant_1_random": "BrCC1CCC1", "reactant_2_random": "[OH-]", "product_random": "C1(CO)CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrCC1CCC1\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCC1CCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "bf83237b-a701-4c98-989a-77a727a82ba7", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Suzuki-Miyaura", "reactant_1": "OB(O)c1c(CCF)cc(C2CCOC2)cc1C1CCCC1.[Pd]", "reactant_2": "CCCc1cc(Br)cc(CCCl)c1", "product": "CCCc1cc(CCCl)cc(-c2c(CCF)cc(C3CCOC3)cc2C2CCCC2)c1", "reactant_1_random": "C1CC(CC1)c1c(B(O)O)c(cc(C2COCC2)c1)CCF.[Pd]", "reactant_2_random": "C(C)Cc1cc(Br)cc(CCCl)c1", "product_random": "C1C(c2cc(C3COCC3)cc(c2-c2cc(cc(c2)CCC)CCCl)CCF)CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC1CC(CC1)c1c(B(O)O)c(cc(C2COCC2)c1)CCF.[Pd]\n+\nC(C)Cc1cc(Br)cc(CCCl)c1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCc1cc(CCCl)cc(-c2c(CCF)cc(C3CCOC3)cc2C2CCCC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "16d83fd9-85a0-4080-a5a5-2203ca71afc9", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Suzuki-Miyaura", "reactant_1": "OB(O)c1c(C2CC2)cc(-c2ccccn2)cc1C1CCSC1.[Pd]", "reactant_2": "ClCCc1cc(Br)cc(-c2ccncc2)c1", "product": "ClCCc1cc(-c2ccncc2)cc(-c2c(C3CC3)cc(-c3ccccn3)cc2C2CCSC2)c1", "reactant_1_random": "OB(c1c(cc(-c2ccccn2)cc1C1CSCC1)C1CC1)O.[Pd]", "reactant_2_random": "c1c(cc(CCCl)cc1Br)-c1ccncc1", "product_random": "c1c(cc(-c2ccncc2)cc1-c1c(cc(cc1C1CSCC1)-c1ncccc1)C1CC1)CCCl"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nOB(c1c(cc(-c2ccccn2)cc1C1CSCC1)C1CC1)O.[Pd]\n+\nc1c(cc(CCCl)cc1Br)-c1ccncc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "ClCCc1cc(-c2ccncc2)cc(-c2c(C3CC3)cc(-c3ccccn3)cc2C2CCSC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "ab7d1899-dad7-4527-9f6d-8d231b393dd0", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Suzuki-Miyaura", "reactant_1": "Cc1cc(C2CC2)cc(C2CSC2)c1B(O)O.[Pd]", "reactant_2": "ClCCc1cc(Br)cc(C2CCC2)c1", "product": "Cc1cc(C2CC2)cc(C2CSC2)c1-c1cc(CCCl)cc(C2CCC2)c1", "reactant_1_random": "S1CC(C1)c1cc(cc(C)c1B(O)O)C1CC1.[Pd]", "reactant_2_random": "c1(cc(C2CCC2)cc(Br)c1)CCCl", "product_random": "c1(-c2c(C)cc(cc2C2CSC2)C2CC2)cc(cc(CCCl)c1)C1CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nS1CC(C1)c1cc(cc(C)c1B(O)O)C1CC1.[Pd]\n+\nc1(cc(C2CCC2)cc(Br)c1)CCCl\n\nOnly write the SMILES string. Do not write any comments.", "answer": "Cc1cc(C2CC2)cc(C2CSC2)c1-c1cc(CCCl)cc(C2CCC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d612ceda-613a-4485-a284-d90a18dd90ec", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Suzuki-Miyaura", "reactant_1": "Cc1cc(C2CSC2)cc(CCCl)c1B(O)O.[Pd]", "reactant_2": "FC(F)(F)c1cc(Br)cc(C2CCSC2)c1", "product": "Cc1cc(C2CSC2)cc(CCCl)c1-c1cc(C2CCSC2)cc(C(F)(F)F)c1", "reactant_1_random": "C(Cc1cc(cc(C)c1B(O)O)C1CSC1)Cl.[Pd]", "reactant_2_random": "c1c(cc(cc1C1CSCC1)C(F)(F)F)Br", "product_random": "S1CC(c2cc(c(-c3cc(cc(C(F)(F)F)c3)C3CSCC3)c(CCCl)c2)C)C1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC(Cc1cc(cc(C)c1B(O)O)C1CSC1)Cl.[Pd]\n+\nc1c(cc(cc1C1CSCC1)C(F)(F)F)Br\n\nOnly write the SMILES string. Do not write any comments.", "answer": "Cc1cc(C2CSC2)cc(CCCl)c1-c1cc(C2CCSC2)cc(C(F)(F)F)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a883a090-6317-424e-aedd-2c00721eca52", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Suzuki-Miyaura", "reactant_1": "CCc1cc(C2CCCC2)cc(-c2ccccc2)c1B(O)O.[Pd]", "reactant_2": "Brc1cc(-c2ccncc2)cc(C2CCSC2)c1", "product": "CCc1cc(C2CCCC2)cc(-c2ccccc2)c1-c1cc(-c2ccncc2)cc(C2CCSC2)c1", "reactant_1_random": "CCc1c(B(O)O)c(cc(c1)C1CCCC1)-c1ccccc1.[Pd]", "reactant_2_random": "c1nccc(-c2cc(cc(c2)Br)C2CSCC2)c1", "product_random": "C1CCC(C1)c1cc(c(-c2cc(-c3ccncc3)cc(C3CSCC3)c2)c(c1)CC)-c1ccccc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCc1c(B(O)O)c(cc(c1)C1CCCC1)-c1ccccc1.[Pd]\n+\nc1nccc(-c2cc(cc(c2)Br)C2CSCC2)c1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCc1cc(C2CCCC2)cc(-c2ccccc2)c1-c1cc(-c2ccncc2)cc(C2CCSC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "62694a86-c53d-4cee-bd40-56f18b03036b", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 1, "reaction_class": "Wittig", "reactant_1": "CC(=O)C1CCCCC1", "reactant_2": "FC(F)(F)C=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "CC(=CC(F)(F)F)C1CCCCC1", "reactant_1_random": "C1CCC(C(C)=O)CC1", "reactant_2_random": "c1cc(ccc1)P(c1ccccc1)(=CC(F)(F)F)c1ccccc1", "product_random": "FC(C=C(C1CCCCC1)C)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC1CCC(C(C)=O)CC1\n+\nc1cc(ccc1)P(c1ccccc1)(=CC(F)(F)F)c1ccccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC(=CC(F)(F)F)C1CCCCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "13ebc5cd-272b-45fb-af13-79ba9df17c8e", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 4, "reaction_class": "Wittig", "reactant_1": "CCCC(=O)C1CCOC1", "reactant_2": "CC=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "CC=C(CCC)C1CCOC1", "reactant_1_random": "CCCC(C1CCOC1)=O", "reactant_2_random": "c1cc(P(=CC)(c2ccccc2)c2ccccc2)ccc1", "product_random": "C(CC(C1CCOC1)=CC)C"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCC(C1CCOC1)=O\n+\nc1cc(P(=CC)(c2ccccc2)c2ccccc2)ccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC=C(CCC)C1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "00edf9bf-26ec-440c-aeba-9ee571d2fe61", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 0, "reaction_class": "Wittig", "reactant_1": "O=C(CCF)C(F)(F)F", "reactant_2": "C(C1CC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "FCCC(=CC1CC1)C(F)(F)F", "reactant_1_random": "FC(F)(C(CCF)=O)F", "reactant_2_random": "C(=P(c1ccccc1)(c1ccccc1)c1ccccc1)C1CC1", "product_random": "FCCC(=CC1CC1)C(F)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nFC(F)(C(CCF)=O)F\n+\nC(=P(c1ccccc1)(c1ccccc1)c1ccccc1)C1CC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "FCCC(=CC1CC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "54ab77b6-ac74-49f1-8d94-e7e4f22a563f", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 3, "reaction_class": "Wittig", "reactant_1": "O=C(C1CCCCC1)C1CCC1", "reactant_2": "C(C1CCSC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "C(=C(C1CCCCC1)C1CCC1)C1CCSC1", "reactant_1_random": "C1CC(CCC1)C(=O)C1CCC1", "reactant_2_random": "c1ccc(cc1)P(c1ccccc1)(c1ccccc1)=CC1CSCC1", "product_random": "C1(C(=CC2CCSC2)C2CCC2)CCCCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC1CC(CCC1)C(=O)C1CCC1\n+\nc1ccc(cc1)P(c1ccccc1)(c1ccccc1)=CC1CSCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C(=C(C1CCCCC1)C1CCC1)C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "510e0c1b-9d95-4dd9-b5d6-dc3916af3a79", "question_category": "reaction", "sub_category": "synthetic_random", "meta_data": {"example": 2, "reaction_class": "Wittig", "reactant_1": "CCCC(=O)C1CCOC1", "reactant_2": "C(C1CCCCC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "CCCC(=CC1CCCCC1)C1CCOC1", "reactant_1_random": "O=C(CCC)C1CCOC1", "reactant_2_random": "c1ccc(cc1)P(c1ccccc1)(c1ccccc1)=CC1CCCCC1", "product_random": "CCCC(=CC1CCCCC1)C1CCOC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(CCC)C1CCOC1\n+\nc1ccc(cc1)P(c1ccccc1)(c1ccccc1)=CC1CCCCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCC(=CC1CCCCC1)C1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "c61a0174-3751-47ba-a76e-f2ce37128d62", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Amide-coupling", "reactant_1": "CCC(=O)O", "reactant_2": "CCCN", "product": "CCCNC(=O)CC", "reactant_1_random": "OC(=O)CC", "reactant_2_random": "C(N)CC", "product_random": "CCC(=O)NCCC"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCC(=O)O\n+\nCCCN\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCNC(=O)CC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "2f657dd9-e020-4dd8-9049-07c3f92f2769", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)C1CCOC1", "reactant_2": "Nc1ccccn1", "product": "O=C(Nc1ccccn1)C1CCOC1", "reactant_1_random": "OC(C1COCC1)=O", "reactant_2_random": "c1nc(ccc1)N", "product_random": "c1(NC(=O)C2COCC2)ccccn1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(O)C1CCOC1\n+\nNc1ccccn1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(Nc1ccccn1)C1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "99a46a16-766e-4de4-bbd5-4c790d33ba5d", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)c1ccncc1", "reactant_2": "NC1CCSC1", "product": "O=C(NC1CCSC1)c1ccncc1", "reactant_1_random": "n1ccc(C(O)=O)cc1", "reactant_2_random": "C1CSCC1N", "product_random": "n1ccc(C(NC2CCSC2)=O)cc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(O)c1ccncc1\n+\nNC1CCSC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(NC1CCSC1)c1ccncc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e688a3ff-be41-4a4a-899c-f6ff1812f727", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)c1ccccn1", "reactant_2": "NC1CC1", "product": "O=C(NC1CC1)c1ccccn1", "reactant_1_random": "c1(C(O)=O)ncccc1", "reactant_2_random": "NC1CC1", "product_random": "C1C(NC(c2ccccn2)=O)C1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(O)c1ccccn1\n+\nNC1CC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(NC1CC1)c1ccccn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "dcd7bdcd-f767-4726-8d83-144b40e98b94", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Amide-coupling", "reactant_1": "O=C(O)C1CCC1", "reactant_2": "NC1CSC1", "product": "O=C(NC1CSC1)C1CCC1", "reactant_1_random": "OC(=O)C1CCC1", "reactant_2_random": "S1CC(C1)N", "product_random": "C1C(C(NC2CSC2)=O)CC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(O)C1CCC1\n+\nNC1CSC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(NC1CSC1)C1CCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "db3fb69e-fada-4f98-aab0-8a9aceac4e67", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=Nc1ccccc1", "reactant_2": "C#CCCCl", "product": "ClCCc1cn(-c2ccccc2)nn1", "reactant_1_random": "[Cu+].c1cccc(c1)N=[N+]=[N-]", "reactant_2_random": "C(C#C)CCl", "product_random": "c1cccc(c1)-n1cc(nn1)CCCl"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].[N-]=[N+]=Nc1ccccc1\n+\nC#CCCCl\n\nOnly write the SMILES string. Do not write any comments.", "answer": "ClCCc1cn(-c2ccccc2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "652bca95-fd1e-4eeb-82e2-e0b5ebf84e4f", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NCCCl", "reactant_2": "C#Cc1cccnc1", "product": "ClCCn1cc(-c2cccnc2)nn1", "reactant_1_random": "C(CCl)N=[N+]=[N-].[Cu+]", "reactant_2_random": "c1c(C#C)cccn1", "product_random": "c1(nnn(c1)CCCl)-c1cnccc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].[N-]=[N+]=NCCCl\n+\nC#Cc1cccnc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "ClCCn1cc(-c2cccnc2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "384b1b16-001c-46d9-9dea-f5696a302a0e", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NC1CCCC1", "reactant_2": "C#CC1CCC1", "product": "c1c(C2CCC2)nnn1C1CCCC1", "reactant_1_random": "[Cu+].[N-]=[N+]=NC1CCCC1", "reactant_2_random": "C1CC(C1)C#C", "product_random": "C1CCCC1n1cc(nn1)C1CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].[N-]=[N+]=NC1CCCC1\n+\nC#CC1CCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "c1c(C2CCC2)nnn1C1CCCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "b3b518bf-2d72-497b-ace2-b3627cf75cc7", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NC1CCC1", "reactant_2": "C#CCCC", "product": "CCCc1cn(C2CCC2)nn1", "reactant_1_random": "[Cu+].[N+](=NC1CCC1)=[N-]", "reactant_2_random": "C#CCCC", "product_random": "C1C(n2nnc(c2)CCC)CC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].[N-]=[N+]=NC1CCC1\n+\nC#CCCC\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCc1cn(C2CCC2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "ca5935b1-bafd-4424-ab6a-1d591ecc69a5", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Copper-Click", "reactant_1": "[Cu+].[N-]=[N+]=NC(F)(F)F", "reactant_2": "C#CC1CSC1", "product": "FC(F)(F)n1cc(C2CSC2)nn1", "reactant_1_random": "C(N=[N+]=[N-])(F)(F)F.[Cu+]", "reactant_2_random": "C1SCC1C#C", "product_random": "FC(n1nnc(c1)C1CSC1)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\n[Cu+].[N-]=[N+]=NC(F)(F)F\n+\nC#CC1CSC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "FC(F)(F)n1cc(C2CSC2)nn1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "075a82d8-ea72-45a3-9b97-a84e464755ce", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)CCC", "reactant_2": "[Li]CC", "product": "C=CC(O)(CC)CCC", "reactant_1_random": "O=C(CCC)C=C", "reactant_2_random": "CC[Li]", "product_random": "CCC(CCC)(C=C)O"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)CCC\n+\n[Li]CC\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(CC)CCC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "acd2f9f0-365a-4b87-82b5-ade912fdcf5f", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)c1ccccc1", "reactant_2": "[Li]C1CCCCC1", "product": "C=CC(O)(c1ccccc1)C1CCCCC1", "reactant_1_random": "c1c(cccc1)C(C=C)=O", "reactant_2_random": "[Li]C1CCCCC1", "product_random": "C(O)(C=C)(c1ccccc1)C1CCCCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)c1ccccc1\n+\n[Li]C1CCCCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(c1ccccc1)C1CCCCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "4bc67c02-f2e0-4e15-9428-a1c94e9facbf", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)CC", "reactant_2": "[Li]C(F)(F)F", "product": "C=CC(O)(CC)C(F)(F)F", "reactant_1_random": "C(=C)C(=O)CC", "reactant_2_random": "FC(F)([Li])F", "product_random": "FC(F)(F)C(C=C)(CC)O"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)CC\n+\n[Li]C(F)(F)F\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(CC)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "830591ef-f82c-432a-8ef0-fc33e82281aa", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)C(F)(F)F", "reactant_2": "[Li]C1CCC1", "product": "C=CC(O)(C1CCC1)C(F)(F)F", "reactant_1_random": "C(C=C)(=O)C(F)(F)F", "reactant_2_random": "C1(CCC1)[Li]", "product_random": "FC(C(C=C)(C1CCC1)O)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)C(F)(F)F\n+\n[Li]C1CCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(C1CCC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "0497f03f-37bd-48e5-afa8-9df0271525cc", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Lithium-Grignard", "reactant_1": "C=CC(=O)C(F)(F)F", "reactant_2": "[Li]C1COC1", "product": "C=CC(O)(C1COC1)C(F)(F)F", "reactant_1_random": "FC(F)(F)C(=O)C=C", "reactant_2_random": "C1OCC1[Li]", "product_random": "FC(F)(C(C1COC1)(C=C)O)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)C(F)(F)F\n+\n[Li]C1COC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C=CC(O)(C1COC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "2251e85f-0e4a-4a49-ac5c-a069eb7abc31", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)C1COC1", "reactant_2": "SC1CCC1", "product": "O=C(CCSC1CCC1)C1COC1", "reactant_1_random": "C1C(C(C=C)=O)CO1", "reactant_2_random": "C1CCC1S", "product_random": "C(C(=O)C1COC1)CSC1CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)C1COC1\n+\nSC1CCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSC1CCC1)C1COC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "10af102e-25bd-489f-8fbb-9a9e21cd779f", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)C(F)(F)F", "reactant_2": "SC1CCSC1", "product": "O=C(CCSC1CCSC1)C(F)(F)F", "reactant_1_random": "FC(C(C=C)=O)(F)F", "reactant_2_random": "SC1CSCC1", "product_random": "C1(SCCC(C(F)(F)F)=O)CCSC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)C(F)(F)F\n+\nSC1CCSC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSC1CCSC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e6ac6821-b32a-4092-b50f-7afdc2977dda", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)c1cccnc1", "reactant_2": "FC(F)(F)S", "product": "O=C(CCSC(F)(F)F)c1cccnc1", "reactant_1_random": "n1cccc(C(C=C)=O)c1", "reactant_2_random": "FC(F)(S)F", "product_random": "C(CC(c1cnccc1)=O)SC(F)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)c1cccnc1\n+\nFC(F)(F)S\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSC(F)(F)F)c1cccnc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "1c6bdbd2-4ac6-479c-a385-bc027db8714f", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)c1cccnc1", "reactant_2": "FCCS", "product": "O=C(CCSCCF)c1cccnc1", "reactant_1_random": "C=CC(c1cnccc1)=O", "reactant_2_random": "C(F)CS", "product_random": "C(SCCC(c1cccnc1)=O)CF"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)c1cccnc1\n+\nFCCS\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSCCF)c1cccnc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "31f10e83-b4ad-491a-9d3f-086898b6bd53", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Michael-addition", "reactant_1": "C=CC(=O)C1CC1", "reactant_2": "FCCS", "product": "O=C(CCSCCF)C1CC1", "reactant_1_random": "C=CC(=O)C1CC1", "reactant_2_random": "SCCF", "product_random": "C(CSCCC(=O)C1CC1)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nC=CC(=O)C1CC1\n+\nFCCS\n\nOnly write the SMILES string. Do not write any comments.", "answer": "O=C(CCSCCF)C1CC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "6d1512b7-751e-4b59-a390-9caa591f1f59", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Mizoroki-Heck", "reactant_1": "Brc1cc(C2CCCCC2)c(-c2cccnc2)cc1C1CCSC1.[Pd]", "reactant_2": "C=CC1CCC1", "product": "C(=CC1CCC1)c1cc(C2CCCCC2)c(-c2cccnc2)cc1C1CCSC1", "reactant_1_random": "[Pd].c1cc(cnc1)-c1c(cc(c(c1)C1CCSC1)Br)C1CCCCC1", "reactant_2_random": "C1CC(C1)C=C", "product_random": "c1ccc(-c2cc(C3CSCC3)c(cc2C2CCCCC2)C=CC2CCC2)cn1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrc1cc(C2CCCCC2)c(-c2cccnc2)cc1C1CCSC1.[Pd]\n+\nC=CC1CCC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C(=CC1CCC1)c1cc(C2CCCCC2)c(-c2cccnc2)cc1C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "4455ba72-cec2-47a4-9c69-4978a4251935", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Mizoroki-Heck", "reactant_1": "CCCc1cc(C)c(Br)cc1CCF.[Pd]", "reactant_2": "C=CC1CSC1", "product": "CCCc1cc(C)c(C=CC2CSC2)cc1CCF", "reactant_1_random": "[Pd].c1c(CCF)c(CCC)cc(C)c1Br", "reactant_2_random": "C(=C)C1CSC1", "product_random": "FCCc1c(CCC)cc(C)c(C=CC2CSC2)c1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCc1cc(C)c(Br)cc1CCF.[Pd]\n+\nC=CC1CSC1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCc1cc(C)c(C=CC2CSC2)cc1CCF", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e6cc9b23-9cb2-41c3-a421-6d02af9e8f78", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Mizoroki-Heck", "reactant_1": "Cc1cc(-c2ccccn2)c(Br)cc1-c1ccncc1.[Pd]", "reactant_2": "C=Cc1cccnc1", "product": "Cc1cc(-c2ccccn2)c(C=Cc2cccnc2)cc1-c1ccncc1", "reactant_1_random": "[Pd].c1c(c(Br)cc(c1C)-c1ccncc1)-c1ncccc1", "reactant_2_random": "c1(C=C)cnccc1", "product_random": "c1c(nccc1)-c1c(C=Cc2cccnc2)cc(-c2ccncc2)c(c1)C"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCc1cc(-c2ccccn2)c(Br)cc1-c1ccncc1.[Pd]\n+\nC=Cc1cccnc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "Cc1cc(-c2ccccn2)c(C=Cc2cccnc2)cc1-c1ccncc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "849c98a6-4515-4cf1-b781-94f41cd88941", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Mizoroki-Heck", "reactant_1": "Brc1cc(C2CCOC2)c(-c2ccncc2)cc1C1CCSC1.[Pd]", "reactant_2": "C=CCCF", "product": "FCCC=Cc1cc(C2CCOC2)c(-c2ccncc2)cc1C1CCSC1", "reactant_1_random": "S1CC(c2cc(-c3ccncc3)c(cc2Br)C2CCOC2)CC1.[Pd]", "reactant_2_random": "FCCC=C", "product_random": "FCCC=Cc1c(C2CCSC2)cc(c(C2COCC2)c1)-c1ccncc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrc1cc(C2CCOC2)c(-c2ccncc2)cc1C1CCSC1.[Pd]\n+\nC=CCCF\n\nOnly write the SMILES string. Do not write any comments.", "answer": "FCCC=Cc1cc(C2CCOC2)c(-c2ccncc2)cc1C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "c136c48f-2e17-4ad2-abf0-5f69a76ade57", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Mizoroki-Heck", "reactant_1": "CCCc1cc(-c2ccccn2)c(CCCl)cc1Br.[Pd]", "reactant_2": "C=CC", "product": "CC=Cc1cc(CCCl)c(-c2ccccn2)cc1CCC", "reactant_1_random": "[Pd].c1ccc(-c2c(cc(Br)c(c2)CCC)CCCl)nc1", "reactant_2_random": "CC=C", "product_random": "C(Cc1c(cc(CCC)c(c1)C=CC)-c1ccccn1)Cl"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCc1cc(-c2ccccn2)c(CCCl)cc1Br.[Pd]\n+\nC=CC\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC=Cc1cc(CCCl)c(-c2ccccn2)cc1CCC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "c193e9e6-e900-41e9-b4dd-ed2a9a630d4d", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Simmons-Smith", "reactant_1": "CCCC(=C(C)C1CCSC1)C1COC1", "reactant_2": "ICI.[Cu][Zn]", "product": "CCCC1(C2COC2)CC1(C)C1CCSC1", "reactant_1_random": "O1CC(C1)C(=C(C)C1CSCC1)CCC", "reactant_2_random": "ICI.[Zn][Cu]", "product_random": "C1(CC1(C1COC1)CCC)(C)C1CCSC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCC(=C(C)C1CCSC1)C1COC1\n+\nICI.[Cu][Zn]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCC1(C2COC2)CC1(C)C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "da57137e-47c7-4914-bf82-966447105f70", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Simmons-Smith", "reactant_1": "CCCC(=C(CC)CCCl)C1CCC1", "reactant_2": "ICI.[Cu][Zn]", "product": "CCCC1(C2CCC2)CC1(CC)CCCl", "reactant_1_random": "C1CCC1C(CCC)=C(CC)CCCl", "reactant_2_random": "ICI.[Zn][Cu]", "product_random": "C1CC(C1)C1(C(CC)(CCCl)C1)CCC"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCC(=C(CC)CCCl)C1CCC1\n+\nICI.[Cu][Zn]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCC1(C2CCC2)CC1(CC)CCCl", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f3d1fae6-ae85-4b67-b92d-501d818929ba", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Simmons-Smith", "reactant_1": "c1ccc(C(=C(c2ccccn2)C2CCOC2)C2COC2)cc1", "reactant_2": "ICI.[Cu][Zn]", "product": "c1ccc(C2(C3COC3)CC2(c2ccccn2)C2CCOC2)cc1", "reactant_1_random": "n1ccccc1C(C1COCC1)=C(c1ccccc1)C1COC1", "reactant_2_random": "C(I)I.[Cu][Zn]", "product_random": "c1cccc(C2(C3COC3)CC2(C2CCOC2)c2ccccn2)c1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nc1ccc(C(=C(c2ccccn2)C2CCOC2)C2COC2)cc1\n+\nICI.[Cu][Zn]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "c1ccc(C2(C3COC3)CC2(c2ccccn2)C2CCOC2)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "18f43421-6435-469c-aadd-e2675c88727f", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Simmons-Smith", "reactant_1": "CC(=C(C1CCCCC1)C1CSC1)c1ccccc1", "reactant_2": "ICI.[Cu][Zn]", "product": "CC1(c2ccccc2)CC1(C1CCCCC1)C1CSC1", "reactant_1_random": "C1C(C(=C(C)c2ccccc2)C2CSC2)CCCC1", "reactant_2_random": "C(I)I.[Cu][Zn]", "product_random": "C1CCCC(C1)C1(C(C1)(C)c1ccccc1)C1CSC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCC(=C(C1CCCCC1)C1CSC1)c1ccccc1\n+\nICI.[Cu][Zn]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC1(c2ccccc2)CC1(C1CCCCC1)C1CSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f22490ae-1cc5-403e-898a-582b096e959e", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Simmons-Smith", "reactant_1": "c1ccc(C(=C(c2ccncc2)C2CCSC2)C2CC2)nc1", "reactant_2": "ICI.[Cu][Zn]", "product": "c1ccc(C2(C3CC3)CC2(c2ccncc2)C2CCSC2)nc1", "reactant_1_random": "c1cnccc1C(C1CCSC1)=C(c1ccccn1)C1CC1", "reactant_2_random": "ICI.[Zn][Cu]", "product_random": "c1(ccccn1)C1(C2CC2)CC1(C1CSCC1)c1ccncc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nc1ccc(C(=C(c2ccncc2)C2CCSC2)C2CC2)nc1\n+\nICI.[Cu][Zn]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "c1ccc(C2(C3CC3)CC2(c2ccncc2)C2CCSC2)nc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "cc5b3752-1c80-427b-b339-8afa325fdc74", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Sn2", "reactant_1": "FCCCBr", "reactant_2": "[OH-]", "product": "OCCCF", "reactant_1_random": "C(CCF)Br", "reactant_2_random": "[OH-]", "product_random": "C(CCO)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nFCCCBr\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCCCF", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "63cad441-442e-4d3f-92dc-852c71f7753d", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Sn2", "reactant_1": "BrCC1CCOC1", "reactant_2": "[OH-]", "product": "OCC1CCOC1", "reactant_1_random": "BrCC1CCOC1", "reactant_2_random": "[OH-]", "product_random": "C1C(CCO1)CO"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrCC1CCOC1\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCC1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a2df7b10-d517-47b9-9832-964c65138607", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Sn2", "reactant_1": "BrCC1CSC1", "reactant_2": "[OH-]", "product": "OCC1CSC1", "reactant_1_random": "C(C1CSC1)Br", "reactant_2_random": "[OH-]", "product_random": "C1(CSC1)CO"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrCC1CSC1\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCC1CSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "588a7d70-242b-4624-b8bb-a84d107caf64", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Sn2", "reactant_1": "CCCBr", "reactant_2": "[OH-]", "product": "CCCO", "reactant_1_random": "BrCCC", "reactant_2_random": "[OH-]", "product_random": "C(CC)O"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCBr\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCO", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "9f57e701-d698-4949-8819-bfe1f8a4be96", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Sn2", "reactant_1": "BrCC1CCC1", "reactant_2": "[OH-]", "product": "OCC1CCC1", "reactant_1_random": "BrCC1CCC1", "reactant_2_random": "[OH-]", "product_random": "C1(CO)CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nBrCC1CCC1\n+\n[OH-]\n\nOnly write the SMILES string. Do not write any comments.", "answer": "OCC1CCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "1d39efd5-1dea-4b09-9ac6-de391546128a", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Suzuki-Miyaura", "reactant_1": "OB(O)c1c(CCF)cc(C2CCOC2)cc1C1CCCC1.[Pd]", "reactant_2": "CCCc1cc(Br)cc(CCCl)c1", "product": "CCCc1cc(CCCl)cc(-c2c(CCF)cc(C3CCOC3)cc2C2CCCC2)c1", "reactant_1_random": "C1CC(CC1)c1c(B(O)O)c(cc(C2COCC2)c1)CCF.[Pd]", "reactant_2_random": "C(C)Cc1cc(Br)cc(CCCl)c1", "product_random": "C1C(c2cc(C3COCC3)cc(c2-c2cc(cc(c2)CCC)CCCl)CCF)CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nOB(O)c1c(CCF)cc(C2CCOC2)cc1C1CCCC1.[Pd]\n+\nCCCc1cc(Br)cc(CCCl)c1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCc1cc(CCCl)cc(-c2c(CCF)cc(C3CCOC3)cc2C2CCCC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d31c9ffc-4849-4f2a-acb4-560d807e2f3e", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Suzuki-Miyaura", "reactant_1": "OB(O)c1c(C2CC2)cc(-c2ccccn2)cc1C1CCSC1.[Pd]", "reactant_2": "ClCCc1cc(Br)cc(-c2ccncc2)c1", "product": "ClCCc1cc(-c2ccncc2)cc(-c2c(C3CC3)cc(-c3ccccn3)cc2C2CCSC2)c1", "reactant_1_random": "OB(c1c(cc(-c2ccccn2)cc1C1CSCC1)C1CC1)O.[Pd]", "reactant_2_random": "c1c(cc(CCCl)cc1Br)-c1ccncc1", "product_random": "c1c(cc(-c2ccncc2)cc1-c1c(cc(cc1C1CSCC1)-c1ncccc1)C1CC1)CCCl"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nOB(O)c1c(C2CC2)cc(-c2ccccn2)cc1C1CCSC1.[Pd]\n+\nClCCc1cc(Br)cc(-c2ccncc2)c1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "ClCCc1cc(-c2ccncc2)cc(-c2c(C3CC3)cc(-c3ccccn3)cc2C2CCSC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "690c430f-9871-455c-89ce-0a8d9030074f", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Suzuki-Miyaura", "reactant_1": "Cc1cc(C2CC2)cc(C2CSC2)c1B(O)O.[Pd]", "reactant_2": "ClCCc1cc(Br)cc(C2CCC2)c1", "product": "Cc1cc(C2CC2)cc(C2CSC2)c1-c1cc(CCCl)cc(C2CCC2)c1", "reactant_1_random": "S1CC(C1)c1cc(cc(C)c1B(O)O)C1CC1.[Pd]", "reactant_2_random": "c1(cc(C2CCC2)cc(Br)c1)CCCl", "product_random": "c1(-c2c(C)cc(cc2C2CSC2)C2CC2)cc(cc(CCCl)c1)C1CCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCc1cc(C2CC2)cc(C2CSC2)c1B(O)O.[Pd]\n+\nClCCc1cc(Br)cc(C2CCC2)c1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "Cc1cc(C2CC2)cc(C2CSC2)c1-c1cc(CCCl)cc(C2CCC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "742e0ed0-cf63-40c3-bce8-06cc25035593", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Suzuki-Miyaura", "reactant_1": "Cc1cc(C2CSC2)cc(CCCl)c1B(O)O.[Pd]", "reactant_2": "FC(F)(F)c1cc(Br)cc(C2CCSC2)c1", "product": "Cc1cc(C2CSC2)cc(CCCl)c1-c1cc(C2CCSC2)cc(C(F)(F)F)c1", "reactant_1_random": "C(Cc1cc(cc(C)c1B(O)O)C1CSC1)Cl.[Pd]", "reactant_2_random": "c1c(cc(cc1C1CSCC1)C(F)(F)F)Br", "product_random": "S1CC(c2cc(c(-c3cc(cc(C(F)(F)F)c3)C3CSCC3)c(CCCl)c2)C)C1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCc1cc(C2CSC2)cc(CCCl)c1B(O)O.[Pd]\n+\nFC(F)(F)c1cc(Br)cc(C2CCSC2)c1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "Cc1cc(C2CSC2)cc(CCCl)c1-c1cc(C2CCSC2)cc(C(F)(F)F)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "0405efc2-8e37-4d88-bf2d-47aaae88570f", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Suzuki-Miyaura", "reactant_1": "CCc1cc(C2CCCC2)cc(-c2ccccc2)c1B(O)O.[Pd]", "reactant_2": "Brc1cc(-c2ccncc2)cc(C2CCSC2)c1", "product": "CCc1cc(C2CCCC2)cc(-c2ccccc2)c1-c1cc(-c2ccncc2)cc(C2CCSC2)c1", "reactant_1_random": "CCc1c(B(O)O)c(cc(c1)C1CCCC1)-c1ccccc1.[Pd]", "reactant_2_random": "c1nccc(-c2cc(cc(c2)Br)C2CSCC2)c1", "product_random": "C1CCC(C1)c1cc(c(-c2cc(-c3ccncc3)cc(C3CSCC3)c2)c(c1)CC)-c1ccccc1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCc1cc(C2CCCC2)cc(-c2ccccc2)c1B(O)O.[Pd]\n+\nBrc1cc(-c2ccncc2)cc(C2CCSC2)c1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCc1cc(C2CCCC2)cc(-c2ccccc2)c1-c1cc(-c2ccncc2)cc(C2CCSC2)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "74d0c566-8d29-4d7d-bb4e-57dce2eb6dd4", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 1, "reaction_class": "Wittig", "reactant_1": "CC(=O)C1CCCCC1", "reactant_2": "FC(F)(F)C=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "CC(=CC(F)(F)F)C1CCCCC1", "reactant_1_random": "C1CCC(C(C)=O)CC1", "reactant_2_random": "c1cc(ccc1)P(c1ccccc1)(=CC(F)(F)F)c1ccccc1", "product_random": "FC(C=C(C1CCCCC1)C)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCC(=O)C1CCCCC1\n+\nFC(F)(F)C=P(c1ccccc1)(c1ccccc1)c1ccccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC(=CC(F)(F)F)C1CCCCC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "bc9869b7-6a8a-4e04-9758-ebd9f2f2cbdd", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 4, "reaction_class": "Wittig", "reactant_1": "CCCC(=O)C1CCOC1", "reactant_2": "CC=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "CC=C(CCC)C1CCOC1", "reactant_1_random": "CCCC(C1CCOC1)=O", "reactant_2_random": "c1cc(P(=CC)(c2ccccc2)c2ccccc2)ccc1", "product_random": "C(CC(C1CCOC1)=CC)C"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCC(=O)C1CCOC1\n+\nCC=P(c1ccccc1)(c1ccccc1)c1ccccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CC=C(CCC)C1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "13719c59-7e54-40e0-9ce5-c8f32e03b038", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 0, "reaction_class": "Wittig", "reactant_1": "O=C(CCF)C(F)(F)F", "reactant_2": "C(C1CC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "FCCC(=CC1CC1)C(F)(F)F", "reactant_1_random": "FC(F)(C(CCF)=O)F", "reactant_2_random": "C(=P(c1ccccc1)(c1ccccc1)c1ccccc1)C1CC1", "product_random": "FCCC(=CC1CC1)C(F)(F)F"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(CCF)C(F)(F)F\n+\nC(C1CC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "FCCC(=CC1CC1)C(F)(F)F", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e2771989-c159-4504-ad95-1c68a860f339", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 3, "reaction_class": "Wittig", "reactant_1": "O=C(C1CCCCC1)C1CCC1", "reactant_2": "C(C1CCSC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "C(=C(C1CCCCC1)C1CCC1)C1CCSC1", "reactant_1_random": "C1CC(CCC1)C(=O)C1CCC1", "reactant_2_random": "c1ccc(cc1)P(c1ccccc1)(c1ccccc1)=CC1CSCC1", "product_random": "C1(C(=CC2CCSC2)C2CCC2)CCCCC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nO=C(C1CCCCC1)C1CCC1\n+\nC(C1CCSC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "C(=C(C1CCCCC1)C1CCC1)C1CCSC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "19a8b99e-ec05-4005-b27b-ca858da6c22d", "question_category": "reaction", "sub_category": "synthetic_canonical", "meta_data": {"example": 2, "reaction_class": "Wittig", "reactant_1": "CCCC(=O)C1CCOC1", "reactant_2": "C(C1CCCCC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1", "product": "CCCC(=CC1CCCCC1)C1CCOC1", "reactant_1_random": "O=C(CCC)C1CCOC1", "reactant_2_random": "c1ccc(cc1)P(c1ccccc1)(c1ccccc1)=CC1CCCCC1", "product_random": "CCCC(=CC1CCCCC1)C1CCOC1"}, "prompt": "Write the product of the reaction as a SMILES string.\n\nCCCC(=O)C1CCOC1\n+\nC(C1CCCCC1)=P(c1ccccc1)(c1ccccc1)c1ccccc1\n\nOnly write the SMILES string. Do not write any comments.", "answer": "CCCC(=CC1CCCCC1)C1CCOC1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "8d75a03d-1bd7-469b-ac27-0ddd9d6d2a46", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 1, "true_smi_canonical": "Nc1ccccc1C(=O)O", "formula": "C7H7NO2", "proton_nmr": "1H NMR: \u03b4 6.90 (1H, ddd, J = 8.1, 1.2, 0.4 Hz), 7.31 (1H, ddd, J = 7.8, 7.4, 1.2 Hz), 7.54-7.74 (2H, 7.61 (ddd, J = 8.1, 7.4, 1.4 Hz), 7.68 (ddd, J = 7.8, 1.4, 0.4 Hz)).", "carbon_nmr": "13C NMR: \u03b4 111.5 (1C, s), 116.4 (1C, s), 118.0 (1C, s), 132.8 (1C, s), 133.4 (1C, s), 152.9 (1C, s), 171.3 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H7NO2\n\n1H NMR: \u03b4 6.90 (1H, ddd, J = 8.1, 1.2, 0.4 Hz), 7.31 (1H, ddd, J = 7.8, 7.4, 1.2 Hz), 7.54-7.74 (2H, 7.61 (ddd, J = 8.1, 7.4, 1.4 Hz), 7.68 (ddd, J = 7.8, 1.4, 0.4 Hz)).\n\n13C NMR: \u03b4 111.5 (1C, s), 116.4 (1C, s), 118.0 (1C, s), 132.8 (1C, s), 133.4 (1C, s), 152.9 (1C, s), 171.3 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1ccccc1C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "668a1b1d-3d1c-431b-9e24-5ee364f72e16", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 2, "true_smi_canonical": "Nc1ccc(C(=O)O)cc1", "formula": "C7H7NO2", "proton_nmr": "1H NMR: \u03b4 6.89 (2H, ddd, J = 8.5, 1.1, 0.4 Hz), 7.73 (2H, ddd, J = 8.5, 1.7, 0.4 Hz).", "carbon_nmr": "13C NMR: \u03b4 114.3 (2C, s), 118.7 (1C, s), 132.8 (2C, s), 151.4 (1C, s), 167.1 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H7NO2\n\n1H NMR: \u03b4 6.89 (2H, ddd, J = 8.5, 1.1, 0.4 Hz), 7.73 (2H, ddd, J = 8.5, 1.7, 0.4 Hz).\n\n13C NMR: \u03b4 114.3 (2C, s), 118.7 (1C, s), 132.8 (2C, s), 151.4 (1C, s), 167.1 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1ccc(C(=O)O)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "2f1e1b58-995d-4ada-a3f9-3a26e2718ff0", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 4, "true_smi_canonical": "CC1CNC(=O)NC1=O", "formula": "C5H8N2O2", "proton_nmr": "1H NMR: \u03b4 1.22 (3H, d, J = 6.6 Hz), 2.96 (1H, dqd, J = 9.8, 6.6, 4.3 Hz), 3.32 (2H, dd, J = 14.1, 7.1 Hz).", "carbon_nmr": "13C NMR: \u03b4 15.9 (1C, s), 37.0 (1C, s), 49.5 (1C, s), 150.4 (1C, s), 178.2 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H8N2O2\n\n1H NMR: \u03b4 1.22 (3H, d, J = 6.6 Hz), 2.96 (1H, dqd, J = 9.8, 6.6, 4.3 Hz), 3.32 (2H, dd, J = 14.1, 7.1 Hz).\n\n13C NMR: \u03b4 15.9 (1C, s), 37.0 (1C, s), 49.5 (1C, s), 150.4 (1C, s), 178.2 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC1CNC(=O)NC1=O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e33bbc5d-7683-4a58-b462-31f4a52fadd3", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 7, "true_smi_canonical": "O=C(O)C1CCCCN1", "formula": "C6H11NO2", "proton_nmr": "1H NMR: \u03b4 1.48-1.90 (6H, 1.56 (dtt, J = 13.0, 6.7, 2.8 Hz), 1.66 (ddddd, J = 10.9, 6.7, 6.6, 2.8, 2.7 Hz), 1.68 (dddd, J = 13.0, 3.3, 2.7, 2.4 Hz), 1.81 (dtd, J = 13.0, 10.2, 3.3 Hz)), 2.82 (2H, ddd, J = 9.8, 6.6, 2.7 Hz), 3.74 (1H, dd, J = 10.3, 2.7 Hz).", "carbon_nmr": "13C NMR: \u03b4 24.2 (1C, s), 25.6 (1C, s), 29.2 (1C, s), 46.3 (1C, s), 61.7 (1C, s), 177.3 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H11NO2\n\n1H NMR: \u03b4 1.48-1.90 (6H, 1.56 (dtt, J = 13.0, 6.7, 2.8 Hz), 1.66 (ddddd, J = 10.9, 6.7, 6.6, 2.8, 2.7 Hz), 1.68 (dddd, J = 13.0, 3.3, 2.7, 2.4 Hz), 1.81 (dtd, J = 13.0, 10.2, 3.3 Hz)), 2.82 (2H, ddd, J = 9.8, 6.6, 2.7 Hz), 3.74 (1H, dd, J = 10.3, 2.7 Hz).\n\n13C NMR: \u03b4 24.2 (1C, s), 25.6 (1C, s), 29.2 (1C, s), 46.3 (1C, s), 61.7 (1C, s), 177.3 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)C1CCCCN1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a4369b47-9b74-4a8c-800d-8c450cdff4e8", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 8, "true_smi_canonical": "NCCCC(N)C(=O)O", "formula": "C5H12N2O2", "proton_nmr": "1H NMR: \u03b4 1.52-1.74 (4H, 1.58 (quint, J = 7.4 Hz), 1.67 (dt, J = 7.6, 7.4 Hz)), 2.63 (2H, t, J = 7.3 Hz), 3.43 (1H, t, J = 7.6 Hz).", "carbon_nmr": "13C NMR: \u03b4 24.0 (1C, s), 28.7 (1C, s), 40.3 (1C, s), 55.5 (1C, s), 175.5 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H12N2O2\n\n1H NMR: \u03b4 1.52-1.74 (4H, 1.58 (quint, J = 7.4 Hz), 1.67 (dt, J = 7.6, 7.4 Hz)), 2.63 (2H, t, J = 7.3 Hz), 3.43 (1H, t, J = 7.6 Hz).\n\n13C NMR: \u03b4 24.0 (1C, s), 28.7 (1C, s), 40.3 (1C, s), 55.5 (1C, s), 175.5 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "NCCCC(N)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "287dd9f1-411b-4406-8cee-7ded230a9cd6", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 9, "true_smi_canonical": "Cn1ccc2ccccc21", "formula": "C9H9N", "proton_nmr": "1H NMR: \u03b4 3.70 (3H, s), 6.49 (1H, ddt, J = 3.8, 2.2, 0.5 Hz), 7.00-7.14 (2H, 7.07 (ddd, J = 7.9, 7.8, 1.6 Hz), 7.07 (tdd, J = 7.8, 1.1, 0.5 Hz)), 7.25-7.53 (3H, 7.32 (ddq, J = 7.9, 1.1, 0.5 Hz), 7.34 (dt, J = 3.8, 0.5 Hz), 7.46 (dddt, J = 7.9, 2.2, 1.6, 0.5 Hz)).", "carbon_nmr": "13C NMR: \u03b4 31.8 (1C, s), 100.8 (1C, s), 109.0 (1C, s), 120.0 (1C, s), 120.7 (1C, s), 121.3 (1C, s), 128.4 (1C, s), 128.6 (1C, s), 136.3 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C9H9N\n\n1H NMR: \u03b4 3.70 (3H, s), 6.49 (1H, ddt, J = 3.8, 2.2, 0.5 Hz), 7.00-7.14 (2H, 7.07 (ddd, J = 7.9, 7.8, 1.6 Hz), 7.07 (tdd, J = 7.8, 1.1, 0.5 Hz)), 7.25-7.53 (3H, 7.32 (ddq, J = 7.9, 1.1, 0.5 Hz), 7.34 (dt, J = 3.8, 0.5 Hz), 7.46 (dddt, J = 7.9, 2.2, 1.6, 0.5 Hz)).\n\n13C NMR: \u03b4 31.8 (1C, s), 100.8 (1C, s), 109.0 (1C, s), 120.0 (1C, s), 120.7 (1C, s), 121.3 (1C, s), 128.4 (1C, s), 128.6 (1C, s), 136.3 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cn1ccc2ccccc21", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "c3958819-aa45-4ee9-b32c-945806c341c7", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 10, "true_smi_canonical": "O=C1CCC(C(=O)O)N1", "formula": "C5H7NO3", "proton_nmr": "1H NMR: \u03b4 2.15 (2H, ddt, J = 13.3, 7.4, 4.2 Hz), 2.47 (2H, ddd, J = 14.8, 7.3, 4.3 Hz), 4.01 (1H, dd, J = 6.6, 1.7 Hz).", "carbon_nmr": "13C NMR: \u03b4 25.3 (1C, s), 29.6 (1C, s), 58.3 (1C, s), 180.2 (1C, s), 181.2 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H7NO3\n\n1H NMR: \u03b4 2.15 (2H, ddt, J = 13.3, 7.4, 4.2 Hz), 2.47 (2H, ddd, J = 14.8, 7.3, 4.3 Hz), 4.01 (1H, dd, J = 6.6, 1.7 Hz).\n\n13C NMR: \u03b4 25.3 (1C, s), 29.6 (1C, s), 58.3 (1C, s), 180.2 (1C, s), 181.2 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C1CCC(C(=O)O)N1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "94af2c69-d1ac-454b-8735-41f6482c27c6", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 11, "true_smi_canonical": "CC(=O)NCCCCN", "formula": "C6H14N2O", "proton_nmr": "1H NMR: \u03b4 1.40-1.64 (4H, 1.47 (tt, J = 7.4, 7.3 Hz), 1.58 (quint, J = 7.4 Hz)), 1.86 (3H, s), 2.63 (2H, t, J = 7.3 Hz), 3.17 (2H, t, J = 7.4 Hz).", "carbon_nmr": "13C NMR: \u03b4 23.1 (1C, s), 26.9 (1C, s), 27.9 (1C, s), 40.0 (1C, s), 41.0 (1C, s), 179.7 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H14N2O\n\n1H NMR: \u03b4 1.40-1.64 (4H, 1.47 (tt, J = 7.4, 7.3 Hz), 1.58 (quint, J = 7.4 Hz)), 1.86 (3H, s), 2.63 (2H, t, J = 7.3 Hz), 3.17 (2H, t, J = 7.4 Hz).\n\n13C NMR: \u03b4 23.1 (1C, s), 26.9 (1C, s), 27.9 (1C, s), 40.0 (1C, s), 41.0 (1C, s), 179.7 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(=O)NCCCCN", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "2159c895-de29-47be-90c4-404ee23d59c6", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 12, "true_smi_canonical": "CC(C)(CC(=O)O)C(=O)O", "formula": "C6H10O4", "proton_nmr": "1H NMR: \u03b4 1.20-1.30 (6H, 1.25 (s), 1.25 (s)), 2.53 (2H, s).", "carbon_nmr": "13C NMR: \u03b4 25.1 (2C, s), 39.5 (1C, s), 43.6 (1C, s), 172.3 (1C, s), 177.8 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H10O4\n\n1H NMR: \u03b4 1.20-1.30 (6H, 1.25 (s), 1.25 (s)), 2.53 (2H, s).\n\n13C NMR: \u03b4 25.1 (2C, s), 39.5 (1C, s), 43.6 (1C, s), 172.3 (1C, s), 177.8 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(C)(CC(=O)O)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "ed3a79dc-9362-4280-84dc-ffea475628c1", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 13, "true_smi_canonical": "O=C(O)c1ccccc1O", "formula": "C7H6O3", "proton_nmr": "1H NMR: \u03b4 7.05 (1H, ddd, J = 8.3, 1.2, 0.5 Hz), 7.26 (1H, ddd, J = 8.1, 7.3, 1.2 Hz), 7.51 (1H, ddd, J = 8.3, 7.3, 1.4 Hz), 7.94 (1H, ddd, J = 8.1, 1.4, 0.5 Hz).", "carbon_nmr": "13C NMR: \u03b4 114.4 (1C, s), 118.4 (1C, s), 120.3 (1C, s), 131.7 (1C, s), 135.6 (1C, s), 162.9 (1C, s), 173.6 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H6O3\n\n1H NMR: \u03b4 7.05 (1H, ddd, J = 8.3, 1.2, 0.5 Hz), 7.26 (1H, ddd, J = 8.1, 7.3, 1.2 Hz), 7.51 (1H, ddd, J = 8.3, 7.3, 1.4 Hz), 7.94 (1H, ddd, J = 8.1, 1.4, 0.5 Hz).\n\n13C NMR: \u03b4 114.4 (1C, s), 118.4 (1C, s), 120.3 (1C, s), 131.7 (1C, s), 135.6 (1C, s), 162.9 (1C, s), 173.6 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)c1ccccc1O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "31017e85-ddd1-43a9-8a06-97f16b28f883", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 14, "true_smi_canonical": "CCCCC(N)C(=O)O", "formula": "C6H13NO2", "proton_nmr": "1H NMR: \u03b4 0.87 (3H, t, J = 7.0 Hz), 1.21-1.37 (4H, 1.27 (h, J = 7.0 Hz), 1.30 (tt, J = 7.4, 7.0 Hz)), 1.65 (2H, td, J = 7.4, 7.3 Hz), 3.42 (1H, t, J = 7.3 Hz).", "carbon_nmr": "13C NMR: \u03b4 14.0 (1C, s), 22.4 (1C, s), 27.1 (1C, s), 30.4 (1C, s), 54.1 (1C, s), 175.5 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H13NO2\n\n1H NMR: \u03b4 0.87 (3H, t, J = 7.0 Hz), 1.21-1.37 (4H, 1.27 (h, J = 7.0 Hz), 1.30 (tt, J = 7.4, 7.0 Hz)), 1.65 (2H, td, J = 7.4, 7.3 Hz), 3.42 (1H, t, J = 7.3 Hz).\n\n13C NMR: \u03b4 14.0 (1C, s), 22.4 (1C, s), 27.1 (1C, s), 30.4 (1C, s), 54.1 (1C, s), 175.5 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCCCC(N)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "60b53d6a-3532-4e59-ad7c-608a9d96d487", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 15, "true_smi_canonical": "O=C(O)C=CC=CC(=O)O", "formula": "C6H6O4", "proton_nmr": "1H NMR: \u03b4 6.33 (2H, d, J = 15.7 Hz), 7.73 (2H, dd, J = 15.7, 10.3 Hz).", "carbon_nmr": "13C NMR: \u03b4 119.8 (2C, s), 144.1 (2C, s), 171.8 (2C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H6O4\n\n1H NMR: \u03b4 6.33 (2H, d, J = 15.7 Hz), 7.73 (2H, dd, J = 15.7, 10.3 Hz).\n\n13C NMR: \u03b4 119.8 (2C, s), 144.1 (2C, s), 171.8 (2C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)C=CC=CC(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "1a6021de-6a54-4052-b84a-b01d0cdb97b0", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 16, "true_smi_canonical": "O=C(O)c1ccc(CO)o1", "formula": "C6H6O4", "proton_nmr": "1H NMR: \u03b4 4.65 (2H, s), 6.43 (1H, d, J = 3.5 Hz), 7.20 (1H, d, J = 3.5 Hz).", "carbon_nmr": "13C NMR: \u03b4 56.9 (1C, s), 109.6 (1C, s), 119.4 (1C, s), 145.0 (1C, s), 159.6 (1C, s), 160.8 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H6O4\n\n1H NMR: \u03b4 4.65 (2H, s), 6.43 (1H, d, J = 3.5 Hz), 7.20 (1H, d, J = 3.5 Hz).\n\n13C NMR: \u03b4 56.9 (1C, s), 109.6 (1C, s), 119.4 (1C, s), 145.0 (1C, s), 159.6 (1C, s), 160.8 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)c1ccc(CO)o1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f2904b0e-d609-49f0-be87-48f28ac3cabc", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 17, "true_smi_canonical": "NC(CC(=O)O)C(=O)O", "formula": "C4H7NO4", "proton_nmr": "1H NMR: \u03b4 2.78 (2H, d, J = 7.3 Hz), 4.08 (1H, t, J = 7.3 Hz).", "carbon_nmr": "13C NMR: \u03b4 37.8 (1C, s), 53.5 (1C, s), 175.5 (1C, s), 178.7 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C4H7NO4\n\n1H NMR: \u03b4 2.78 (2H, d, J = 7.3 Hz), 4.08 (1H, t, J = 7.3 Hz).\n\n13C NMR: \u03b4 37.8 (1C, s), 53.5 (1C, s), 175.5 (1C, s), 178.7 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "NC(CC(=O)O)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "43be17d5-a657-4858-8059-e1a67c1f4468", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 18, "true_smi_canonical": "CC(C)(C)OC(=O)NO", "formula": "C5H11NO3", "proton_nmr": "1H NMR: \u03b4 1.39 (9H, s).", "carbon_nmr": "13C NMR: \u03b4 28.3 (3C, s), 80.3 (1C, s), 155.4 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H11NO3\n\n1H NMR: \u03b4 1.39 (9H, s).\n\n13C NMR: \u03b4 28.3 (3C, s), 80.3 (1C, s), 155.4 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(C)(C)OC(=O)NO", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "67ae6d7f-195d-4352-9f5b-b0f5773796aa", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 19, "true_smi_canonical": "CN(C)c1ccccc1", "formula": "C8H11N", "proton_nmr": "1H NMR: \u03b4 2.71 (6H, s), 6.71 (2H, dtd, J = 8.3, 1.2, 0.5 Hz), 7.03 (1H, tt, J = 8.1, 1.2 Hz), 7.27 (2H, dddd, J = 8.3, 8.1, 1.4, 0.5 Hz).", "carbon_nmr": "13C NMR: \u03b4 40.2 (2C, s), 112.7 (2C, s), 126.1 (1C, s), 129.0 (2C, s), 150.7 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C8H11N\n\n1H NMR: \u03b4 2.71 (6H, s), 6.71 (2H, dtd, J = 8.3, 1.2, 0.5 Hz), 7.03 (1H, tt, J = 8.1, 1.2 Hz), 7.27 (2H, dddd, J = 8.3, 8.1, 1.4, 0.5 Hz).\n\n13C NMR: \u03b4 40.2 (2C, s), 112.7 (2C, s), 126.1 (1C, s), 129.0 (2C, s), 150.7 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CN(C)c1ccccc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "0511b7d3-3154-4ef1-b148-ba8e5db2befb", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 20, "true_smi_canonical": "CCCC(CCC)C(=O)O", "formula": "C8H16O2", "proton_nmr": "1H NMR: \u03b4 0.88 (6H, t, J = 6.5 Hz), 1.29 (4H, tq, J = 7.6, 6.5 Hz), 1.51 (4H, q, J = 7.6 Hz), 2.41 (1H, quint, J = 7.6 Hz).", "carbon_nmr": "13C NMR: \u03b4 14.0 (2C, s), 20.6 (2C, s), 34.4 (2C, s), 45.2 (1C, s), 183.5 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C8H16O2\n\n1H NMR: \u03b4 0.88 (6H, t, J = 6.5 Hz), 1.29 (4H, tq, J = 7.6, 6.5 Hz), 1.51 (4H, q, J = 7.6 Hz), 2.41 (1H, quint, J = 7.6 Hz).\n\n13C NMR: \u03b4 14.0 (2C, s), 20.6 (2C, s), 34.4 (2C, s), 45.2 (1C, s), 183.5 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCCC(CCC)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "bce0dacc-2fa8-4048-a61a-32d976f8ff3d", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 22, "true_smi_canonical": "CC(O)(CC(=O)O)C(=O)O", "formula": "C5H8O5", "proton_nmr": "1H NMR: \u03b4 1.46 (3H, s), 2.99 (2H, s).", "carbon_nmr": "13C NMR: \u03b4 28.9 (1C, s), 45.3 (1C, s), 69.0 (1C, s), 172.9 (1C, s), 181.3 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H8O5\n\n1H NMR: \u03b4 1.46 (3H, s), 2.99 (2H, s).\n\n13C NMR: \u03b4 28.9 (1C, s), 45.3 (1C, s), 69.0 (1C, s), 172.9 (1C, s), 181.3 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(O)(CC(=O)O)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a0a35466-9eba-4ee0-8259-d8ba663b9530", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 23, "true_smi_canonical": "COC(=O)C=C(C)N", "formula": "C5H9NO2", "proton_nmr": "1H NMR: \u03b4 2.20 (3H, s), 3.73 (3H, s), 5.30 (1H, s).", "carbon_nmr": "13C NMR: \u03b4 19.3 (1C, s), 51.2 (1C, s), 83.6 (1C, s), 163.7 (1C, s), 170.6 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H9NO2\n\n1H NMR: \u03b4 2.20 (3H, s), 3.73 (3H, s), 5.30 (1H, s).\n\n13C NMR: \u03b4 19.3 (1C, s), 51.2 (1C, s), 83.6 (1C, s), 163.7 (1C, s), 170.6 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "COC(=O)C=C(C)N", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "80fef17c-ff03-44f1-85dd-e451af4fa099", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 25, "true_smi_canonical": "CCC(C)C(=O)C(=O)O", "formula": "C6H10O3", "proton_nmr": "1H NMR: \u03b4 0.90 (3H, t, J = 7.6 Hz), 1.17 (3H, d, J = 7.0 Hz), 1.58 (2H, qd, J = 7.6, 7.4 Hz), 2.52 (1H, tq, J = 7.4, 7.0 Hz).", "carbon_nmr": "13C NMR: \u03b4 11.2 (1C, s), 14.4 (1C, s), 24.6 (1C, s), 42.6 (1C, s), 170.4 (1C, s), 181.9 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H10O3\n\n1H NMR: \u03b4 0.90 (3H, t, J = 7.6 Hz), 1.17 (3H, d, J = 7.0 Hz), 1.58 (2H, qd, J = 7.6, 7.4 Hz), 2.52 (1H, tq, J = 7.4, 7.0 Hz).\n\n13C NMR: \u03b4 11.2 (1C, s), 14.4 (1C, s), 24.6 (1C, s), 42.6 (1C, s), 170.4 (1C, s), 181.9 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCC(C)C(=O)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f0668240-6992-456a-b048-e6b0a6c2b169", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 26, "true_smi_canonical": "CCOC(=O)CC(C)=O", "formula": "C6H10O3", "proton_nmr": "1H NMR: \u03b4 1.15 (3H, t, J = 7.1 Hz), 2.12 (3H, s), 3.58 (2H, s), 4.11 (2H, q, J = 7.1 Hz).", "carbon_nmr": "13C NMR: \u03b4 14.1 (1C, s), 29.9 (1C, s), 50.1 (1C, s), 61.3 (1C, s), 167.5 (1C, s), 200.4 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H10O3\n\n1H NMR: \u03b4 1.15 (3H, t, J = 7.1 Hz), 2.12 (3H, s), 3.58 (2H, s), 4.11 (2H, q, J = 7.1 Hz).\n\n13C NMR: \u03b4 14.1 (1C, s), 29.9 (1C, s), 50.1 (1C, s), 61.3 (1C, s), 167.5 (1C, s), 200.4 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCOC(=O)CC(C)=O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "4992cac1-3970-48ef-a797-467338534881", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 27, "true_smi_canonical": "Cc1ccc(O)c(O)c1", "formula": "C7H8O2", "proton_nmr": "1H NMR: \u03b4 2.27 (3H, s), 6.57-6.71 (3H, 6.63 (dd, J = 8.5, 0.5 Hz), 6.64 (dd, J = 8.5, 2.8 Hz), 6.66 (dd, J = 2.8, 0.5 Hz)).", "carbon_nmr": "13C NMR: \u03b4 20.8 (1C, s), 115.4 (1C, s), 116.3 (1C, s), 121.5 (1C, s), 131.1 (1C, s), 140.9 (1C, s), 143.1 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H8O2\n\n1H NMR: \u03b4 2.27 (3H, s), 6.57-6.71 (3H, 6.63 (dd, J = 8.5, 0.5 Hz), 6.64 (dd, J = 8.5, 2.8 Hz), 6.66 (dd, J = 2.8, 0.5 Hz)).\n\n13C NMR: \u03b4 20.8 (1C, s), 115.4 (1C, s), 116.3 (1C, s), 121.5 (1C, s), 131.1 (1C, s), 140.9 (1C, s), 143.1 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1ccc(O)c(O)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "fa7533e5-1faa-4456-b1d6-735b40112699", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 28, "true_smi_canonical": "Nc1cccnc1N", "formula": "C5H7N3", "proton_nmr": "1H NMR: \u03b4 7.00 (1H, dd, J = 8.3, 4.8 Hz), 7.31 (1H, dd, J = 8.3, 1.8 Hz), 7.81 (1H, dd, J = 4.8, 1.8 Hz).", "carbon_nmr": "13C NMR: \u03b4 115.8 (1C, s), 122.5 (1C, s), 144.3 (1C, s), 151.5 (1C, s), 158.1 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H7N3\n\n1H NMR: \u03b4 7.00 (1H, dd, J = 8.3, 4.8 Hz), 7.31 (1H, dd, J = 8.3, 1.8 Hz), 7.81 (1H, dd, J = 4.8, 1.8 Hz).\n\n13C NMR: \u03b4 115.8 (1C, s), 122.5 (1C, s), 144.3 (1C, s), 151.5 (1C, s), 158.1 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1cccnc1N", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f6a2dae9-f52f-4334-9605-86c92e061e17", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 29, "true_smi_canonical": "Nc1ccncc1N", "formula": "C5H7N3", "proton_nmr": "1H NMR: \u03b4 7.32 (1H, dd, J = 5.6, 0.4 Hz), 7.53 (1H, dd, J = 1.9, 0.4 Hz), 7.70 (1H, dd, J = 5.6, 1.9 Hz).", "carbon_nmr": "13C NMR: \u03b4 109.0 (1C, s), 131.2 (1C, s), 135.7 (1C, s), 139.9 (1C, s), 141.9 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H7N3\n\n1H NMR: \u03b4 7.32 (1H, dd, J = 5.6, 0.4 Hz), 7.53 (1H, dd, J = 1.9, 0.4 Hz), 7.70 (1H, dd, J = 5.6, 1.9 Hz).\n\n13C NMR: \u03b4 109.0 (1C, s), 131.2 (1C, s), 135.7 (1C, s), 139.9 (1C, s), 141.9 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1ccncc1N", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "c84d1f9f-302d-4e78-bbed-986cc8469fe3", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 30, "true_smi_canonical": "Nc1ccccc1N", "formula": "C6H8N2", "proton_nmr": "1H NMR: \u03b4 6.80 (2H, ddd, J = 7.8, 1.2, 0.5 Hz), 6.94 (2H, ddd, J = 7.8, 7.7, 1.2 Hz).", "carbon_nmr": "13C NMR: \u03b4 117.0 (2C, s), 120.5 (2C, s), 135.0 (2C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H8N2\n\n1H NMR: \u03b4 6.80 (2H, ddd, J = 7.8, 1.2, 0.5 Hz), 6.94 (2H, ddd, J = 7.8, 7.7, 1.2 Hz).\n\n13C NMR: \u03b4 117.0 (2C, s), 120.5 (2C, s), 135.0 (2C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1ccccc1N", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "4c642da0-170a-4f76-9b66-94e0758ddbae", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 31, "true_smi_canonical": "CNC(C)(C)C(=O)O", "formula": "C5H11NO2", "proton_nmr": "1H NMR: \u03b4 1.30-1.40 (6H, 1.35 (s), 1.35 (s)), 2.41 (3H, s).", "carbon_nmr": "13C NMR: \u03b4 22.1 (2C, s), 28.5 (1C, s), 64.0 (1C, s), 177.6 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H11NO2\n\n1H NMR: \u03b4 1.30-1.40 (6H, 1.35 (s), 1.35 (s)), 2.41 (3H, s).\n\n13C NMR: \u03b4 22.1 (2C, s), 28.5 (1C, s), 64.0 (1C, s), 177.6 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CNC(C)(C)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a8bc1261-4fe7-42be-a4a8-8d8660f6dd14", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 32, "true_smi_canonical": "CC(C)C(N)C(=O)O", "formula": "C5H11NO2", "proton_nmr": "1H NMR: \u03b4 0.81 (6H, d, J = 6.8 Hz), 1.86 (1H, septd, J = 6.8, 6.2 Hz), 3.42 (1H, d, J = 6.2 Hz).", "carbon_nmr": "13C NMR: \u03b4 17.1 (1C, s), 18.6 (1C, s), 29.6 (1C, s), 61.0 (1C, s), 174.1 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H11NO2\n\n1H NMR: \u03b4 0.81 (6H, d, J = 6.8 Hz), 1.86 (1H, septd, J = 6.8, 6.2 Hz), 3.42 (1H, d, J = 6.2 Hz).\n\n13C NMR: \u03b4 17.1 (1C, s), 18.6 (1C, s), 29.6 (1C, s), 61.0 (1C, s), 174.1 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(C)C(N)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "6ec47c48-b172-414d-a6a3-f450de261615", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 33, "true_smi_canonical": "OCc1cccnc1", "formula": "C6H7NO", "proton_nmr": "1H NMR: \u03b4 4.58 (2H, s), 7.37 (1H, ddd, J = 8.0, 4.7, 0.5 Hz), 7.74 (1H, ddd, J = 8.0, 1.9, 1.5 Hz), 8.25 (1H, ddd, J = 1.9, 1.5, 0.5 Hz), 8.46 (1H, dt, J = 4.7, 1.9 Hz).", "carbon_nmr": "13C NMR: \u03b4 61.5 (1C, s), 124.4 (1C, s), 136.3 (1C, s), 137.5 (1C, s), 147.6 (1C, s), 148.0 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H7NO\n\n1H NMR: \u03b4 4.58 (2H, s), 7.37 (1H, ddd, J = 8.0, 4.7, 0.5 Hz), 7.74 (1H, ddd, J = 8.0, 1.9, 1.5 Hz), 8.25 (1H, ddd, J = 1.9, 1.5, 0.5 Hz), 8.46 (1H, dt, J = 4.7, 1.9 Hz).\n\n13C NMR: \u03b4 61.5 (1C, s), 124.4 (1C, s), 136.3 (1C, s), 137.5 (1C, s), 147.6 (1C, s), 148.0 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "OCc1cccnc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "6fd4c70c-ef3a-45f0-b2e6-08758a584c95", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 34, "true_smi_canonical": "Nc1cccc(O)c1", "formula": "C6H7NO", "proton_nmr": "1H NMR: \u03b4 6.59-6.86 (3H, 6.66 (ddd, J = 8.2, 1.7, 1.4 Hz), 6.69 (ddd, J = 1.7, 1.3, 0.5 Hz), 6.80 (dt, J = 8.2, 1.3 Hz)), 7.19 (1H, td, J = 8.2, 0.5 Hz).", "carbon_nmr": "13C NMR: \u03b4 101.5 (1C, s), 104.2 (1C, s), 106.2 (1C, s), 129.9 (1C, s), 149.2 (1C, s), 157.9 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H7NO\n\n1H NMR: \u03b4 6.59-6.86 (3H, 6.66 (ddd, J = 8.2, 1.7, 1.4 Hz), 6.69 (ddd, J = 1.7, 1.3, 0.5 Hz), 6.80 (dt, J = 8.2, 1.3 Hz)), 7.19 (1H, td, J = 8.2, 0.5 Hz).\n\n13C NMR: \u03b4 101.5 (1C, s), 104.2 (1C, s), 106.2 (1C, s), 129.9 (1C, s), 149.2 (1C, s), 157.9 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Nc1cccc(O)c1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d1855340-4dc8-4737-ae79-ed57287c8cbd", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 35, "true_smi_canonical": "OCc1ccncc1", "formula": "C6H7NO", "proton_nmr": "1H NMR: \u03b4 4.57 (2H, s), 7.15 (2H, ddd, J = 5.1, 1.7, 0.5 Hz), 8.54 (2H, ddd, J = 5.1, 1.9, 0.5 Hz).", "carbon_nmr": "13C NMR: \u03b4 61.5 (1C, s), 121.1 (2C, s), 149.2 (2C, s), 151.6 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H7NO\n\n1H NMR: \u03b4 4.57 (2H, s), 7.15 (2H, ddd, J = 5.1, 1.7, 0.5 Hz), 8.54 (2H, ddd, J = 5.1, 1.9, 0.5 Hz).\n\n13C NMR: \u03b4 61.5 (1C, s), 121.1 (2C, s), 149.2 (2C, s), 151.6 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "OCc1ccncc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "db712184-4095-4cd4-851d-a38f99bc9c76", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 36, "true_smi_canonical": "COC(=O)c1ccco1", "formula": "C6H6O3", "proton_nmr": "1H NMR: \u03b4 3.70 (3H, s), 6.65 (1H, dd, J = 3.5, 1.8 Hz), 7.25 (1H, dd, J = 3.5, 0.9 Hz), 7.88 (1H, dd, J = 1.8, 0.9 Hz).", "carbon_nmr": "13C NMR: \u03b4 52.5 (1C, s), 112.2 (1C, s), 119.7 (1C, s), 143.7 (1C, s), 147.4 (1C, s), 159.2 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H6O3\n\n1H NMR: \u03b4 3.70 (3H, s), 6.65 (1H, dd, J = 3.5, 1.8 Hz), 7.25 (1H, dd, J = 3.5, 0.9 Hz), 7.88 (1H, dd, J = 1.8, 0.9 Hz).\n\n13C NMR: \u03b4 52.5 (1C, s), 112.2 (1C, s), 119.7 (1C, s), 143.7 (1C, s), 147.4 (1C, s), 159.2 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "COC(=O)c1ccco1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "cd064cd1-0d75-4590-8a3b-f291e501b791", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 37, "true_smi_canonical": "CC(CC(=O)O)C(=O)O", "formula": "C5H8O4", "proton_nmr": "1H NMR: \u03b4 1.12 (3H, d, J = 7.0 Hz), 2.64-2.88 (3H, 2.70 (d, J = 7.6 Hz), 2.81 (tq, J = 7.6, 7.0 Hz)).", "carbon_nmr": "13C NMR: \u03b4 16.8 (1C, s), 35.2 (1C, s), 37.3 (1C, s), 172.8 (1C, s), 176.3 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H8O4\n\n1H NMR: \u03b4 1.12 (3H, d, J = 7.0 Hz), 2.64-2.88 (3H, 2.70 (d, J = 7.6 Hz), 2.81 (tq, J = 7.6, 7.0 Hz)).\n\n13C NMR: \u03b4 16.8 (1C, s), 35.2 (1C, s), 37.3 (1C, s), 172.8 (1C, s), 176.3 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(CC(=O)O)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "4c890665-4889-4799-8224-99a58535630b", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 38, "true_smi_canonical": "CC(C)(C(=O)O)C(=O)O", "formula": "C5H8O4", "proton_nmr": "1H NMR: \u03b4 1.42 (6H, s).", "carbon_nmr": "13C NMR: \u03b4 22.6 (2C, s), 48.8 (1C, s), 174.1 (2C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H8O4\n\n1H NMR: \u03b4 1.42 (6H, s).\n\n13C NMR: \u03b4 22.6 (2C, s), 48.8 (1C, s), 174.1 (2C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(C)(C(=O)O)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "602fbf02-d25d-4450-a439-c311740ff966", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 39, "true_smi_canonical": "CCCCCCC(=O)O", "formula": "C7H14O2", "proton_nmr": "1H NMR: \u03b4 0.86 (3H, t, J = 7.0 Hz), 1.18-1.33 (6H, 1.24 (quint, J = 7.0 Hz), 1.25 (tt, J = 7.5, 7.0 Hz), 1.27 (h, J = 7.0 Hz)), 1.54 (2H, quint, J = 7.4 Hz), 2.30 (2H, t, J = 7.4 Hz).", "carbon_nmr": "13C NMR: \u03b4 14.1 (1C, s), 22.6 (1C, s), 25.0 (1C, s), 29.1 (1C, s), 31.3 (1C, s), 34.1 (1C, s), 178.4 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H14O2\n\n1H NMR: \u03b4 0.86 (3H, t, J = 7.0 Hz), 1.18-1.33 (6H, 1.24 (quint, J = 7.0 Hz), 1.25 (tt, J = 7.5, 7.0 Hz), 1.27 (h, J = 7.0 Hz)), 1.54 (2H, quint, J = 7.4 Hz), 2.30 (2H, t, J = 7.4 Hz).\n\n13C NMR: \u03b4 14.1 (1C, s), 22.6 (1C, s), 25.0 (1C, s), 29.1 (1C, s), 31.3 (1C, s), 34.1 (1C, s), 178.4 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CCCCCCC(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "2a2861e5-c48a-471d-bdff-28b5f6ce51c3", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 40, "true_smi_canonical": "CC1(C)OCC(CO)O1", "formula": "C6H12O3", "proton_nmr": "1H NMR: \u03b4 1.36 (6H, s), 3.67-3.86 (5H, 3.74 (ddt, J = 9.2, 5.6, 4.7 Hz), 3.76 (dd, J = 15.5, 7.4 Hz), 3.80 (d, J = 4.7 Hz)).", "carbon_nmr": "13C NMR: \u03b4 25.3 (1C, s), 26.5 (1C, s), 63.1 (1C, s), 66.2 (1C, s), 76.5 (1C, s), 109.7 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H12O3\n\n1H NMR: \u03b4 1.36 (6H, s), 3.67-3.86 (5H, 3.74 (ddt, J = 9.2, 5.6, 4.7 Hz), 3.76 (dd, J = 15.5, 7.4 Hz), 3.80 (d, J = 4.7 Hz)).\n\n13C NMR: \u03b4 25.3 (1C, s), 26.5 (1C, s), 63.1 (1C, s), 66.2 (1C, s), 76.5 (1C, s), 109.7 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC1(C)OCC(CO)O1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "5798ec27-96aa-4b34-a445-0b414852ddc0", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 41, "true_smi_canonical": "NC(CCO)C(=O)O", "formula": "C4H9NO3", "proton_nmr": "1H NMR: \u03b4 2.05 (2H, td, J = 7.2, 2.7 Hz), 3.33-3.53 (3H, 3.38 (t, J = 7.2 Hz), 3.48 (t, J = 2.7 Hz)).", "carbon_nmr": "13C NMR: \u03b4 34.6 (1C, s), 56.1 (1C, s), 61.4 (1C, s), 177.2 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C4H9NO3\n\n1H NMR: \u03b4 2.05 (2H, td, J = 7.2, 2.7 Hz), 3.33-3.53 (3H, 3.38 (t, J = 7.2 Hz), 3.48 (t, J = 2.7 Hz)).\n\n13C NMR: \u03b4 34.6 (1C, s), 56.1 (1C, s), 61.4 (1C, s), 177.2 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "NC(CCO)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "a2ec3b60-f8ac-4905-912b-eba1d1413d96", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 42, "true_smi_canonical": "O=C(O)c1ccc[nH]1", "formula": "C5H5NO2", "proton_nmr": "1H NMR: \u03b4 6.42 (1H, dd, J = 3.5, 2.3 Hz), 6.97 (1H, dd, J = 3.5, 0.9 Hz), 7.79 (1H, dd, J = 2.3, 0.9 Hz).", "carbon_nmr": "13C NMR: \u03b4 110.5 (1C, s), 116.5 (1C, s), 124.3 (1C, s), 126.8 (1C, s), 162.6 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H5NO2\n\n1H NMR: \u03b4 6.42 (1H, dd, J = 3.5, 2.3 Hz), 6.97 (1H, dd, J = 3.5, 0.9 Hz), 7.79 (1H, dd, J = 2.3, 0.9 Hz).\n\n13C NMR: \u03b4 110.5 (1C, s), 116.5 (1C, s), 124.3 (1C, s), 126.8 (1C, s), 162.6 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)c1ccc[nH]1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "046cd5cb-d9ce-458c-bea3-fbbe7c6adf18", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 43, "true_smi_canonical": "CC(=CC(=O)O)C(=O)O", "formula": "C5H6O4", "proton_nmr": "1H NMR: \u03b4 2.15 (3H, s), 6.70 (1H, s).", "carbon_nmr": "13C NMR: \u03b4 14.5 (1C, s), 114.6 (1C, s), 128.3 (1C, s), 170.3 (1C, s), 172.9 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H6O4\n\n1H NMR: \u03b4 2.15 (3H, s), 6.70 (1H, s).\n\n13C NMR: \u03b4 14.5 (1C, s), 114.6 (1C, s), 128.3 (1C, s), 170.3 (1C, s), 172.9 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CC(=CC(=O)O)C(=O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "d7e48903-d08a-47a7-9f01-6d9b8377aa43", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 44, "true_smi_canonical": "O=C(O)c1ccccc1", "formula": "C7H6O2", "proton_nmr": "1H NMR: \u03b4 7.45 (2H, dddd, J = 8.5, 7.5, 1.3, 0.4 Hz), 7.59 (1H, tt, J = 7.5, 1.4 Hz), 8.02 (2H, dddd, J = 8.5, 1.9, 1.4, 0.4 Hz).", "carbon_nmr": "13C NMR: \u03b4 128.5 (2C, s), 129.3 (1C, s), 130.2 (2C, s), 131.9 (1C, s), 172.5 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H6O2\n\n1H NMR: \u03b4 7.45 (2H, dddd, J = 8.5, 7.5, 1.3, 0.4 Hz), 7.59 (1H, tt, J = 7.5, 1.4 Hz), 8.02 (2H, dddd, J = 8.5, 1.9, 1.4, 0.4 Hz).\n\n13C NMR: \u03b4 128.5 (2C, s), 129.3 (1C, s), 130.2 (2C, s), 131.9 (1C, s), 172.5 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)c1ccccc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "8c34f23e-a15f-410c-88cc-8ba9f9acdae8", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 45, "true_smi_canonical": "Cc1cccc(C)n1", "formula": "C7H9N", "proton_nmr": "1H NMR: \u03b4 2.41 (6H, s), 6.84 (2H, dd, J = 8.1, 1.6 Hz), 7.55 (1H, t, J = 8.1 Hz).", "carbon_nmr": "13C NMR: \u03b4 24.5 (2C, s), 120.1 (2C, s), 136.5 (1C, s), 157.6 (2C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H9N\n\n1H NMR: \u03b4 2.41 (6H, s), 6.84 (2H, dd, J = 8.1, 1.6 Hz), 7.55 (1H, t, J = 8.1 Hz).\n\n13C NMR: \u03b4 24.5 (2C, s), 120.1 (2C, s), 136.5 (1C, s), 157.6 (2C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1cccc(C)n1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "b9d1648d-c5bf-41b2-93ec-da12b5cb325e", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 46, "true_smi_canonical": "Cc1ccncc1C", "formula": "C7H9N", "proton_nmr": "1H NMR: \u03b4 2.21 (3H, s), 2.41 (3H, s), 6.86 (1H, dd, J = 4.7, 0.5 Hz), 8.41-8.57 (2H, 8.46 (dd, J = 4.7, 1.9 Hz), 8.51 (dd, J = 1.9, 0.5 Hz)).", "carbon_nmr": "13C NMR: \u03b4 16.3 (1C, s), 19.1 (1C, s), 124.5 (1C, s), 132.1 (1C, s), 145.5 (1C, s), 147.3 (1C, s), 149.9 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C7H9N\n\n1H NMR: \u03b4 2.21 (3H, s), 2.41 (3H, s), 6.86 (1H, dd, J = 4.7, 0.5 Hz), 8.41-8.57 (2H, 8.46 (dd, J = 4.7, 1.9 Hz), 8.51 (dd, J = 1.9, 0.5 Hz)).\n\n13C NMR: \u03b4 16.3 (1C, s), 19.1 (1C, s), 124.5 (1C, s), 132.1 (1C, s), 145.5 (1C, s), 147.3 (1C, s), 149.9 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Cc1ccncc1C", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "794e64e5-34a9-4704-be8e-2608f0ab255f", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 48, "true_smi_canonical": "CN1CCCC1=O", "formula": "C5H9NO", "proton_nmr": "1H NMR: \u03b4 2.05 (2H, dtt, J = 11.5, 7.4, 4.2 Hz), 2.40 (2H, ddd, J = 14.8, 7.3, 4.3 Hz), 2.98 (3H, s), 3.36 (2H, ddd, J = 14.3, 7.3, 4.2 Hz).", "carbon_nmr": "13C NMR: \u03b4 17.9 (1C, s), 29.2 (1C, s), 30.6 (1C, s), 49.3 (1C, s), 174.2 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H9NO\n\n1H NMR: \u03b4 2.05 (2H, dtt, J = 11.5, 7.4, 4.2 Hz), 2.40 (2H, ddd, J = 14.8, 7.3, 4.3 Hz), 2.98 (3H, s), 3.36 (2H, ddd, J = 14.3, 7.3, 4.2 Hz).\n\n13C NMR: \u03b4 17.9 (1C, s), 29.2 (1C, s), 30.6 (1C, s), 49.3 (1C, s), 174.2 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CN1CCCC1=O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "cda522c5-41e3-4013-80ab-032642a361b9", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 58, "true_smi_canonical": "Oc1ccc(O)cc1", "formula": "C6H6O2", "proton_nmr": "1H NMR: \u03b4 6.84 (4H, ddd, J = 8.7, 2.7, 0.5 Hz).", "carbon_nmr": "13C NMR: \u03b4 118.5 (4C, s), 151.5 (2C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C6H6O2\n\n1H NMR: \u03b4 6.84 (4H, ddd, J = 8.7, 2.7, 0.5 Hz).\n\n13C NMR: \u03b4 118.5 (4C, s), 151.5 (2C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "Oc1ccc(O)cc1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "4577ea9c-cdc0-49af-a5df-bc7c9dbc57e4", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 60, "true_smi_canonical": "O=C(O)c1ccco1", "formula": "C5H4O3", "proton_nmr": "1H NMR: \u03b4 6.65 (1H, dd, J = 3.5, 1.8 Hz), 7.24 (1H, dd, J = 3.5, 0.9 Hz), 7.88 (1H, dd, J = 1.8, 0.9 Hz).", "carbon_nmr": "13C NMR: \u03b4 112.1 (1C, s), 117.7 (1C, s), 145.0 (1C, s), 147.0 (1C, s), 159.4 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C5H4O3\n\n1H NMR: \u03b4 6.65 (1H, dd, J = 3.5, 1.8 Hz), 7.24 (1H, dd, J = 3.5, 0.9 Hz), 7.88 (1H, dd, J = 1.8, 0.9 Hz).\n\n13C NMR: \u03b4 112.1 (1C, s), 117.7 (1C, s), 145.0 (1C, s), 147.0 (1C, s), 159.4 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)c1ccco1", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "f82ac0c9-7b46-456a-b959-facddea82b7b", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 88, "true_smi_canonical": "CNCCNC", "formula": "C4H12N2", "proton_nmr": "1H NMR: \u03b4 2.27-2.37 (6H, 2.32 (s), 2.32 (s)), 2.63-2.74 (4H, 2.68 (t, J = 2.7 Hz), 2.68 (t, J = 2.7 Hz)).", "carbon_nmr": "13C NMR: \u03b4 36.0 (2C, s), 52.0 (2C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C4H12N2\n\n1H NMR: \u03b4 2.27-2.37 (6H, 2.32 (s), 2.32 (s)), 2.63-2.74 (4H, 2.68 (t, J = 2.7 Hz), 2.68 (t, J = 2.7 Hz)).\n\n13C NMR: \u03b4 36.0 (2C, s), 52.0 (2C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "CNCCNC", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
{"uuid": "e3706807-5ba7-46be-a607-b93e8b7595cf", "question_category": "nmr_elucidation", "sub_category": "small", "meta_data": {"example_idx": 93, "true_smi_canonical": "O=C(O)C(O)O", "formula": "C2H4O4", "proton_nmr": "1H NMR: \u03b4 5.64 (1H, s).", "carbon_nmr": "13C NMR: \u03b4 87.8 (1C, s), 173.9 (1C, s)."}, "prompt": "Write the SMILES string of the molecule consistent with this data:\n\nFormula: C2H4O4\n\n1H NMR: \u03b4 5.64 (1H, s).\n\n13C NMR: \u03b4 87.8 (1C, s), 173.9 (1C, s).\n\nOnly write the SMILES string. Do not write stereochemistry. Do not write any comments.", "answer": "O=C(O)C(O)O", "answer_format": "smiles", "answer_range": null, "verification_method": "canonical_smi_match", "ChemIQ": true}
